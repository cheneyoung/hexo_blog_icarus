{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/whale.png","path":"css/images/whale.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/styles.css","path":"libs/open-sans/styles.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/horse.jpg","path":"css/images/horse.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","path":"libs/jquery/2.1.3/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/profile_pic.jpg","path":"css/images/profile_pic.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"3476d63984d6f43a96cd9834ed9fb4948ed6c85c","modified":1542293809000},{"_id":"source/.DS_Store","hash":"ad3dc80f4dbac4c11962b65af842e325a132b871","modified":1542293809000},{"_id":"themes/icarus/_config.yml","hash":"24477ca4828a0777fee3174830a921e8b72200cc","modified":1542358783000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1542293809000},{"_id":"themes/icarus/README.md","hash":"25c75503f044b817297995a96621c92ce037a098","modified":1542293809000},{"_id":"themes/icarus/package-lock.json","hash":"df3cb3c3953642275c6a24572f6334d729469a66","modified":1542352897000},{"_id":"themes/icarus/package.json","hash":"a0e7a44f51963569d1d66b40b7179a73f697f2f8","modified":1542352897000},{"_id":"source/_posts/2Sum.md","hash":"a3730cf3a5fd8d0204361ff241195f533b6ce055","modified":1542358416000},{"_id":"source/_posts/3Sum-Closest.md","hash":"64bd41fc4b24be7394d11511f0a4756a35d7880c","modified":1542299291000},{"_id":"source/_posts/.DS_Store","hash":"788ebf1c3589dc45fcbd19c23d68edbfd31eccff","modified":1542775821000},{"_id":"source/_posts/3Sum.md","hash":"3ed8cf51728622c73e4810427f7b979c45c0659a","modified":1542299292000},{"_id":"source/_posts/4Sum.md","hash":"6d1eb9f7fd06dd47c95bfc3ed33edd64156cb566","modified":1542299290000},{"_id":"source/_posts/Balanced-Binary-Tree.md","hash":"b3c889a47e070518a9789d7f9aa2a8f98aed147f","modified":1542299287000},{"_id":"source/_posts/Best-Time-to-Buy-and-Sell-Stock-II.md","hash":"4ff7e7ee9329c2f14e2e50021a741f59c76f84d7","modified":1542300659000},{"_id":"source/_posts/Binary-Tree-Inorder-Traversal.md","hash":"4556c2af68456ab1f5f1aaae9eead13c7dc0eeb6","modified":1542300659000},{"_id":"source/_posts/Binary-Tree-Level-Order-Traversal-II.md","hash":"ae14f4fb0042fb1b19180fb4882206ac0cda618d","modified":1542300659000},{"_id":"source/_posts/Binary-Tree-Level-Order-Traversal.md","hash":"fec69e062accee12efc919df3737b2b7a4fd5d9d","modified":1542300659000},{"_id":"source/_posts/Binary-Tree-Preorder-Traversal.md","hash":"7631db1433d7a9872e130385f6e80b925733d90e","modified":1542300659000},{"_id":"source/_posts/Ceph_introduction.md","hash":"8ca9a68f23e19cd717ffffd7f0280f8cd3dd112d","modified":1542634399000},{"_id":"source/_posts/Excel-Sheet-Column-Number.md","hash":"dc95446091f48113ce917d7e01f171053defce01","modified":1542298470000},{"_id":"source/_posts/Intersection-of-Two-Linked-Lists.md","hash":"6807370a34ae444ed3bf7daa6242b7c92f530432","modified":1542299306000},{"_id":"source/_posts/Linked-List-Cycle.md","hash":"da8b3e03566b0425256f981e3fc4b75ae0aeeea2","modified":1542299135000},{"_id":"source/_posts/Majority-Element.md","hash":"899d421feb778ea567e668fc222d7024ac928c8c","modified":1542298470000},{"_id":"source/_posts/Maximum-Depth-of-Binary-Tree.md","hash":"38727a8f1a0b601fdaa1b19c19d0c23145957cc2","modified":1542300659000},{"_id":"source/_posts/Palindrome-Number.md","hash":"8fc4a5a4461ab3c9154f5369c0891f6e7c2c69df","modified":1542298470000},{"_id":"source/_posts/Remove-Duplicates-from-Sorted-List.md","hash":"273d126422b1f54b1656d4ceff5dbcb3486353f4","modified":1542299323000},{"_id":"source/_posts/Same-Tree.md","hash":"fcb5181bc91041ed8d7ec28782ca4fb62e50e6d3","modified":1542300659000},{"_id":"source/_posts/Single-Number.md","hash":"63a40affe006522c4303b34ce2e017286745ff94","modified":1542300659000},{"_id":"source/_posts/Unique-Binary-Search-Trees.md","hash":"498aac356bd568ee8e3c0d64dbd8cd8771401647","modified":1542300659000},{"_id":"source/_posts/ZigZag-Conversion.md","hash":"f2e6f1307e801e8b281e57ae59cc384253ba7474","modified":1542299135000},{"_id":"source/_posts/ceph-enviroment-set.md","hash":"fdd2a8bf74d2fa1d36b1e514596e4175bfe50c10","modified":1542945836000},{"_id":"source/_posts/manual-deploy-ceph.md","hash":"7bbe1293a660c539421ad041e6dd8e08710ccb1b","modified":1542901123000},{"_id":"source/_posts/岛屿个数.md","hash":"062c1b1ca57c6aa7d03d387bf1134efa777e4fef","modified":1542299289000},{"_id":"source/_posts/create-cephfs.md","hash":"b4e5d109c2bcfd559d9ec848248ac281b0bcaeb0","modified":1542960369000},{"_id":"source/_posts/最后一个单词的长度.md","hash":"cb15a3d8cf2465871161e061c9691cee8eb1b9cb","modified":1542299285000},{"_id":"source/_posts/有效的括号序列.md","hash":"2341287ce366d711df3a07593d703b2bd8b01fdb","modified":1542299284000},{"_id":"source/about/index.md","hash":"3094693de0d30067fca4424611d503b5f91daa37","modified":1542293809000},{"_id":"source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1542293809000},{"_id":"source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1542293809000},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1542293809000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1542293809000},{"_id":"themes/icarus/languages/id.yml","hash":"70ec9ab2ac04cf882e81377ca5ad15bf8adceca8","modified":1542293809000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1542293809000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1542293809000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1542293809000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1542293809000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1542293809000},{"_id":"themes/icarus/languages/tr.yml","hash":"8b7eb6aec264db50dbabea89f680acca256f4cd1","modified":1542293809000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1542293809000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1542293809000},{"_id":"themes/icarus/layout/archive.ejs","hash":"c1ecf667f40f34d61ab33eed46bab143eb1af36d","modified":1542293809000},{"_id":"themes/icarus/layout/.DS_Store","hash":"de7d0a6e507b0c9077f498d187f0685511402a4d","modified":1542293809000},{"_id":"themes/icarus/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1542293809000},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1542293809000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1542293809000},{"_id":"themes/icarus/layout/layout.ejs","hash":"68dce13bc3e8dee1ab50ab80576ab722157e119a","modified":1542293809000},{"_id":"themes/icarus/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1542293809000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1542293809000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1542293809000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1542293809000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1542293809000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1542293809000},{"_id":"themes/icarus/source/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542293809000},{"_id":"source/_posts/Ceph_introduction/ceph_rbd2.png","hash":"28aee4ef17dcdda01a234153dcd590f6729227c8","modified":1539739253000},{"_id":"source/_posts/create-cephfs/ceph_archite.jpg","hash":"ef997e56893323597bfa81ca2d89423f6e69cf31","modified":1542955326000},{"_id":"source/_posts/create-cephfs/cephfs.jpg","hash":"c1c94bb62396b3c8e6af7025bc3189753c891ef6","modified":1542954746000},{"_id":"source/_posts/Ceph_introduction/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542631336000},{"_id":"source/_posts/ceph-enviroment-set/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542785350000},{"_id":"themes/icarus/_source/about/index.md","hash":"2847759c65295fdc47685cc32e10ae30b2f022ae","modified":1542293809000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1542293809000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1542293809000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"59abd552086c26cb0a6fd86d18ce380c3b1b3c55","modified":1542293809000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1542293809000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1542293809000},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1542293809000},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"cc0687e5e980550e3b528ab222a91461f5c1024d","modified":1542355632000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"49b3ca779261f9e87e53ec0083141a0c6fb005f8","modified":1542358944000},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1542293809000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"3a8b54e1a741f05b155abae54a3b2a01a94a7c4b","modified":1542358985000},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1542293809000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"8424ebc3009b59a0add7d006c6bc45ed04462ca4","modified":1542358445000},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"74090975d67b0bc94634a2df74505bd7392f94cd","modified":1542353205000},{"_id":"themes/icarus/layout/common/head.ejs","hash":"44f30945882afd27c89da2173da501fb1b531488","modified":1542354446000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"738c6a923b2a6de6a81c4892c8a47e03d8b34f88","modified":1542293809000},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"500f05cd15633b004a967ca4802dae9120a2d613","modified":1542293809000},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1542357365000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"2cd62b3efaa3da7bdb6d40d33fdce8e4e28b09ba","modified":1542293809000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1542293809000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"fc18cbcb31021015842b075bf3009d907ecc62de","modified":1542353569000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1542293809000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1542293809000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"4fdb85e6730530f2d262041b41d1ead1b87dfd88","modified":1542293809000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1542293809000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1542293809000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1542293809000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1542293809000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1542293809000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1542293809000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1542293809000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"ebfb919dc525b3ed61a6a5ee05ee71410eedc541","modified":1542293809000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1542293809000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1542293809000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1542293809000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1542293809000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"5e3a4a08ec6c146c14010ca7a03b57fccab6a7f6","modified":1542293809000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"2ca923465275fb38a7ac7d67211d6e94a977e957","modified":1542293809000},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1542293809000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1542293809000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"9a5c72663c0da1b32ecb6a75773a5ccfb8c467ca","modified":1542293809000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"041c2371747eb05a30d8ce54deef33798bc91203","modified":1542638292000},{"_id":"themes/icarus/source/css/.DS_Store","hash":"495dc0d217dbc3e7cb0c015a4aa9af3e7011d37f","modified":1542293809000},{"_id":"themes/icarus/source/css/style.styl","hash":"367fd86ba213ced68052c64cf5895ac146bf7785","modified":1542293809000},{"_id":"themes/icarus/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1542293809000},{"_id":"themes/icarus/source/js/main.js","hash":"1faffdc7aa7f0d28e85edbf49c99de3ad0b65753","modified":1542293809000},{"_id":"themes/icarus/node_modules/ansi-regex/index.js","hash":"8e2fe7fc814a39d590cf170ccc989a166d505c1e","modified":1484362985000},{"_id":"themes/icarus/node_modules/ansi-regex/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1465490702000},{"_id":"themes/icarus/node_modules/ansi-regex/package.json","hash":"98c03433a5c9bf00bc00d13a535d44ecb2eab354","modified":1542352891000},{"_id":"themes/icarus/node_modules/ansi-regex/readme.md","hash":"79b8bd5d8af7fd6d79dcb7c24b3f2e03e1d2a029","modified":1484362985000},{"_id":"themes/icarus/node_modules/a-sync-waterfall/LICENSE","hash":"065ac71b155a41923d3565741112dd2c3ea36946","modified":1467293562000},{"_id":"themes/icarus/node_modules/a-sync-waterfall/README.md","hash":"7e9dff0380deb5014a427a8212d4e6d4a5c92736","modified":1467293931000},{"_id":"themes/icarus/node_modules/.bin/atob","hash":"3bfcbfacb0d2dc1aca7e54fc21cdf3d91e557592","modified":499162500000},{"_id":"themes/icarus/node_modules/.bin/nunjucks-precompile","hash":"372fd593b8ece6cade6bc1eda437f27393338c43","modified":1541740356000},{"_id":"themes/icarus/node_modules/a-sync-waterfall/index.js","hash":"2bdfe1436a60e0eda5b6491e5a634016a3b704d8","modified":1467293562000},{"_id":"themes/icarus/node_modules/a-sync-waterfall/package.json","hash":"a56e9f3b77f0859caf710225116abc80d2d1c937","modified":1542352891000},{"_id":"themes/icarus/node_modules/a-sync-waterfall/test.js","hash":"12c894d47c4bbeb53012a7f3179833c2e333dcd2","modified":1467293562000},{"_id":"themes/icarus/node_modules/.bin/postinstall-build","hash":"3809501f0a0da92ade1b002f366e777831a03ca5","modified":499162500000},{"_id":"themes/icarus/node_modules/.bin/window-size","hash":"3be15c787c4707cd700f50e9deae2840394e1822","modified":1447614663000},{"_id":"themes/icarus/node_modules/anymatch/LICENSE","hash":"2faff6eb900a1f252dd5628fa007d8df033d9717","modified":1426989009000},{"_id":"themes/icarus/node_modules/anymatch/README.md","hash":"06726c08082736896af650384dfcd82298acad85","modified":1513893972000},{"_id":"themes/icarus/node_modules/anymatch/index.js","hash":"b620c3308003baba08968dd99afcdddde2310192","modified":1501171052000},{"_id":"themes/icarus/node_modules/anymatch/package.json","hash":"890ea93f5c27fc2b4327eeb6af7eb3eb16199444","modified":1542352891000},{"_id":"themes/icarus/node_modules/arr-diff/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1440300569000},{"_id":"themes/icarus/node_modules/arr-diff/README.md","hash":"e0f6660954d1864a842222ca5c0cffc4ccd1f79e","modified":1492143074000},{"_id":"themes/icarus/node_modules/arr-diff/index.js","hash":"9d523b1bc59bb7b09cf68c206061c4093b2bd1b3","modified":1492142948000},{"_id":"themes/icarus/node_modules/arr-diff/package.json","hash":"46d9d5850a57f2547c95e83b499b814a52d517a2","modified":1542352891000},{"_id":"themes/icarus/node_modules/arr-flatten/LICENSE","hash":"d0ee9aa349ad4a47b319f691d67023e255ef81ba","modified":1499280545000},{"_id":"themes/icarus/node_modules/arr-flatten/README.md","hash":"b31b8e7fef4196def2095fec4bcd91f801577505","modified":1492168954000},{"_id":"themes/icarus/node_modules/arr-flatten/index.js","hash":"c5baefc4ecbfd02905ca91eba96d79b627adde7d","modified":1499280620000},{"_id":"themes/icarus/node_modules/arr-flatten/package.json","hash":"8b92e2c3118ef9fa5da6cb992e31e8d6aa37bc49","modified":1542352891000},{"_id":"themes/icarus/node_modules/arr-union/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1456196056000},{"_id":"themes/icarus/node_modules/arr-union/README.md","hash":"c7194b34f47f6d1d7fca0d9c5b143c78ec7c9e65","modified":1456213450000},{"_id":"themes/icarus/node_modules/arr-union/index.js","hash":"8286edb0b683ebdb859826b498629bc8bb710c04","modified":1456195991000},{"_id":"themes/icarus/node_modules/arr-union/package.json","hash":"1b91a107ba922794a5940d5cbbd7069b4f032a62","modified":1542352891000},{"_id":"themes/icarus/node_modules/array-unique/LICENSE","hash":"64fab20ef9c097beeb8f38596e9462b2d6cff0c2","modified":1427255160000},{"_id":"themes/icarus/node_modules/array-unique/README.md","hash":"d66a5a8392ed1ec470d42339a98671a1bb4cd72a","modified":1470012675000},{"_id":"themes/icarus/node_modules/array-unique/index.js","hash":"0b0dd7bd39ce82a63812cd63c0facbf9e30cc5a6","modified":1470012516000},{"_id":"themes/icarus/node_modules/array-unique/package.json","hash":"368d3ac02abafeac365948a508633e7f79536584","modified":1542352891000},{"_id":"themes/icarus/node_modules/asap/CHANGES.md","hash":"81428158366f7e993e1c2188eb0f3e0e8fba2657","modified":1499700076000},{"_id":"themes/icarus/node_modules/asap/LICENSE.md","hash":"b9e748ee0b7d1cbadaf9f1fa8997b092ebeb9db7","modified":1451874428000},{"_id":"themes/icarus/node_modules/asap/README.md","hash":"538d5e8ff175447bc0506b06c6ee25bf48e980b2","modified":1451874428000},{"_id":"themes/icarus/node_modules/asap/asap.js","hash":"dfb4ab3ad5524d143221515950159eee5c0fd0db","modified":1451874428000},{"_id":"themes/icarus/node_modules/asap/browser-asap.js","hash":"8dba5a29c0d3479897084d0843de36805382be48","modified":1451874558000},{"_id":"themes/icarus/node_modules/asap/browser-raw.js","hash":"bc8104273b725150c81a2869d657dca110c30ce5","modified":1474844473000},{"_id":"themes/icarus/node_modules/asap/package.json","hash":"043bd69809760479088eb83a9f34e97e665eb6cc","modified":1542352891000},{"_id":"themes/icarus/node_modules/asap/raw.js","hash":"5dd00f087a2cb50f5bcf6bde80f144e3444c6b26","modified":1451874428000},{"_id":"themes/icarus/node_modules/assign-symbols/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1513722651000},{"_id":"themes/icarus/node_modules/assign-symbols/README.md","hash":"90b5569292d95d032b22b9b06e398817c9cbbb52","modified":1513722651000},{"_id":"themes/icarus/node_modules/assign-symbols/index.js","hash":"2c8f8f3970a3673c2197645c915936fb487e70f1","modified":1513722651000},{"_id":"themes/icarus/node_modules/assign-symbols/package.json","hash":"6751457ce616587072a072482192cc003720b646","modified":1542352891000},{"_id":"themes/icarus/node_modules/atob/LICENSE","hash":"1ffda37a0c34d7e63367be5d4a7f6291f9636e2d","modified":499162500000},{"_id":"themes/icarus/node_modules/atob/README.md","hash":"af9e1905e383e26783252ce709e99b559c6e77bb","modified":499162500000},{"_id":"themes/icarus/node_modules/atob/LICENSE.DOCS","hash":"8f545dc92cfddaf46764df9a77825bd3db01df11","modified":499162500000},{"_id":"themes/icarus/node_modules/atob/bower.json","hash":"c75fcb7b5d4243cfcfb426ea0253ea863eefa7ab","modified":499162500000},{"_id":"themes/icarus/node_modules/atob/browser-atob.js","hash":"6d9d9e829b6b7b07511b206c3c5caa8211596659","modified":499162500000},{"_id":"themes/icarus/node_modules/atob/node-atob.js","hash":"ebf0e76a56249e25eaca470356ed0ed031fc5434","modified":499162500000},{"_id":"themes/icarus/node_modules/atob/package.json","hash":"df8ef3bb92c5b38520c1d24e7b56c50cd513b41c","modified":1542352891000},{"_id":"themes/icarus/node_modules/atob/test.js","hash":"bfba58c33615cb458569986509f9cc4e90f1a130","modified":499162500000},{"_id":"themes/icarus/node_modules/async-each/.npmignore","hash":"1d4793257714691afce4e899b0cce7b8ede84447","modified":1472080771000},{"_id":"themes/icarus/node_modules/async-each/CHANGELOG.md","hash":"9ceebc3d9c05febd689691243cccf80204c9c5ac","modified":1472080645000},{"_id":"themes/icarus/node_modules/async-each/README.md","hash":"2ce988cb8d594dd63818371fa47120d6740a411f","modified":1472080888000},{"_id":"themes/icarus/node_modules/async-each/index.js","hash":"c329e80e544646b7f83d52d3428687b19e6d7119","modified":1427222848000},{"_id":"themes/icarus/node_modules/async-each/package.json","hash":"2fdcd6f912cdbcef889d33fedbfc5cc3bb58e037","modified":1542352891000},{"_id":"themes/icarus/node_modules/binary-extensions/binary-extensions.json","hash":"5deb71d0b3e70dd319179e52b6e2531cdd7e3130","modified":1537247712000},{"_id":"themes/icarus/node_modules/binary-extensions/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/icarus/node_modules/binary-extensions/package.json","hash":"3595a2b46c393c16b67fd388d6a6d73e9a1907c2","modified":1542352891000},{"_id":"themes/icarus/node_modules/binary-extensions/readme.md","hash":"1d9e55c827698e4fabfdc5af5a7c1776ce7b0612","modified":1502712442000},{"_id":"themes/icarus/node_modules/base/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1504833753000},{"_id":"themes/icarus/node_modules/base/README.md","hash":"de2f92cc208dd61762ccf3e99f2d85f35a595748","modified":1504834438000},{"_id":"themes/icarus/node_modules/base/index.js","hash":"9e3c1a75c1967687d7cbfdf038ec6f0666ae328e","modified":1504834174000},{"_id":"themes/icarus/node_modules/base/package.json","hash":"7d69c8614399b995ac19c29a4cb77cd45f1befa9","modified":1542352891000},{"_id":"themes/icarus/node_modules/braces/LICENSE","hash":"8e9f50463a3d515808c3a428e18049425d584c1c","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/README.md","hash":"44ff0df757ed952c9baea6dd9a1b827ce8c732eb","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/index.js","hash":"ac5c745d5a34fcb2fb2b882660fadcafd22b9508","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/package.json","hash":"b91cf365dd1c0b48dd3ee65bd014b71e5beab57e","modified":1542352891000},{"_id":"themes/icarus/node_modules/chokidar/README.md","hash":"50dd5964c237252f67191ebbd96634dd1084c3ab","modified":1521779201000},{"_id":"themes/icarus/node_modules/chokidar/CHANGELOG.md","hash":"2c657af3df4162d21874bc9fa59a6f9e3b5a4bc8","modified":1521779201000},{"_id":"themes/icarus/node_modules/chokidar/index.js","hash":"ecae01f95765a0f42cb4a4b98676dcc7789eb753","modified":1529340629000},{"_id":"themes/icarus/node_modules/chokidar/package.json","hash":"5157d4b04c4082bfa8006636279e508ed4322f71","modified":1542352891000},{"_id":"themes/icarus/node_modules/camelcase/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/camelcase/index.js","hash":"2b8c116fea89376fba3557ffb11fa0e3328846d5","modified":1457803830000},{"_id":"themes/icarus/node_modules/camelcase/readme.md","hash":"c90528b5f1cea2de255651c9daab5b0aea013737","modified":1447354467000},{"_id":"themes/icarus/node_modules/camelcase/package.json","hash":"60a368a96da31fee21139f2235cf8b5ee05e783d","modified":1542352891000},{"_id":"themes/icarus/node_modules/cache-base/LICENSE","hash":"2d068b89820b596b358e9751c35622f386f3aaa8","modified":1454255797000},{"_id":"themes/icarus/node_modules/cache-base/README.md","hash":"84a3f42d42049a3e4d41425a89e175ab52132554","modified":1455043627000},{"_id":"themes/icarus/node_modules/cache-base/index.js","hash":"8405feef2e4f58361b32bf931238bd7175832201","modified":1500744153000},{"_id":"themes/icarus/node_modules/cache-base/package.json","hash":"e0b33a285ce3bb70a7ffc11441cbe4cfda5ce602","modified":1542352891000},{"_id":"themes/icarus/node_modules/class-utils/LICENSE","hash":"638d630bf7632efa3925e6e6723f66a789d1e8a9","modified":1436039161000},{"_id":"themes/icarus/node_modules/class-utils/README.md","hash":"929fcc40aae1d764b4e6c9f5f49857159318f904","modified":1457560299000},{"_id":"themes/icarus/node_modules/class-utils/package.json","hash":"14a5cc2ec206be2b6400f9e41fc8a94ac391e1c4","modified":1542352891000},{"_id":"themes/icarus/node_modules/class-utils/index.js","hash":"18708ea06363375f64676fb862b3bcf87fe2c52e","modified":1515681854000},{"_id":"themes/icarus/node_modules/cliui/CHANGELOG.md","hash":"26cb805006986096e67141729c6fa6e6de4b3fc6","modified":1460342812000},{"_id":"themes/icarus/node_modules/cliui/LICENSE.txt","hash":"039fa81eb89fc5c892f5ce2d22ee6ac0a8503880","modified":1458191766000},{"_id":"themes/icarus/node_modules/cliui/README.md","hash":"1e22b71fd4a73fa941054e5f565c3f4e21827804","modified":1460340216000},{"_id":"themes/icarus/node_modules/cliui/index.js","hash":"ffb7fefbb726b99e2dff9e1342ff86caba27e863","modified":1458191766000},{"_id":"themes/icarus/node_modules/cliui/package.json","hash":"7587f5514fb367665982bcdc0544fd34b24ee3cf","modified":1542352891000},{"_id":"themes/icarus/node_modules/collection-visit/LICENSE","hash":"f68c4db2c6e52008367016b77eaaee30acbb2d36","modified":1438377691000},{"_id":"themes/icarus/node_modules/collection-visit/README.md","hash":"46c9282cf9986d136b65e9654daef397731582fc","modified":1491775153000},{"_id":"themes/icarus/node_modules/collection-visit/package.json","hash":"926dac013f0ccd9bd480e703d4a323956d398a9f","modified":1542352891000},{"_id":"themes/icarus/node_modules/collection-visit/index.js","hash":"9fc9e03ff9d197c9c6d0920426104a18d1a2b8a5","modified":1491775093000},{"_id":"themes/icarus/node_modules/component-emitter/History.md","hash":"6e91ffacdc162c2963acfb13559a68883713f87c","modified":1461005544000},{"_id":"themes/icarus/node_modules/component-emitter/Readme.md","hash":"643249025a2a7ebe2e4384dc2dd38623ba7600cf","modified":1461005391000},{"_id":"themes/icarus/node_modules/component-emitter/LICENSE","hash":"7571414e38a753319ae9941323dc4a27f1c8b7dd","modified":1461005391000},{"_id":"themes/icarus/node_modules/component-emitter/index.js","hash":"3a327f6687239defcc65a6bebedde117e5eb65c2","modified":1461005391000},{"_id":"themes/icarus/node_modules/component-emitter/package.json","hash":"bb8d81a5ae506b6a36dc9d2ea7f65bdb493feba2","modified":1542352891000},{"_id":"themes/icarus/node_modules/code-point-at/index.js","hash":"280ea6787e2472d6001554ab9513814ef27695bd","modified":1478169479000},{"_id":"themes/icarus/node_modules/code-point-at/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1477419843000},{"_id":"themes/icarus/node_modules/code-point-at/package.json","hash":"dfef17f7725906d763d5da08e7f2ea79a0c741ca","modified":1542352891000},{"_id":"themes/icarus/node_modules/core-util-is/LICENSE","hash":"a95471326a84657b0e164f84e1285685f63011e0","modified":1447979068000},{"_id":"themes/icarus/node_modules/code-point-at/readme.md","hash":"821d0f3d8140f560309f58e197b9ddc5b158355f","modified":1478167595000},{"_id":"themes/icarus/node_modules/core-util-is/README.md","hash":"d4987293f1078d937454a14a5ca6f386d227679d","modified":1447978999000},{"_id":"themes/icarus/node_modules/core-util-is/package.json","hash":"788581ca2e1d90b5e4ed5ae1bf129dbdb79063c8","modified":1542352891000},{"_id":"themes/icarus/node_modules/core-util-is/test.js","hash":"2837ee1d57f385943ba5ccc7fd0ec4ed1cb8cfdd","modified":1447979358000},{"_id":"themes/icarus/node_modules/core-util-is/float.patch","hash":"d7f073ceb05c6f6dd1bb852fc00f5379a3e41301","modified":1447978999000},{"_id":"themes/icarus/node_modules/decamelize/index.js","hash":"b2b327355fce3e54d2a2c542beb41ae803c33285","modified":1457167643000},{"_id":"themes/icarus/node_modules/decamelize/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/decamelize/readme.md","hash":"ab75be4d249b40443b662f2cd920be0cf657c6e0","modified":1457167687000},{"_id":"themes/icarus/node_modules/decamelize/package.json","hash":"134ffaf64c361784e7f11bdf408bb52f548fd7b9","modified":1542352891000},{"_id":"themes/icarus/node_modules/copy-descriptor/LICENSE","hash":"6b6e43e748f05929750a1016160c9ade94e7e644","modified":1465497024000},{"_id":"themes/icarus/node_modules/copy-descriptor/index.js","hash":"86815fef136a0bd157b8d4767bad1c60c0ea29ec","modified":1465496996000},{"_id":"themes/icarus/node_modules/copy-descriptor/package.json","hash":"c838a26b1eb1ecb9d758f97240b2767f9119ae06","modified":1542352891000},{"_id":"themes/icarus/node_modules/debug/.coveralls.yml","hash":"90709e4fb4ce17729974b3a140ccbf330519835c","modified":1497485783000},{"_id":"themes/icarus/node_modules/debug/.eslintrc","hash":"8d154aeddf66a7bcbd433e3c619f76bb0d920ae2","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/.npmignore","hash":"90fef7cc1058bd0f85b0959c4fcd49230a29593e","modified":1497485783000},{"_id":"themes/icarus/node_modules/debug/.travis.yml","hash":"e87a69a064f6a95b166333d46b919afbc5487f59","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/CHANGELOG.md","hash":"c35e6a85b4a8732ec8af63beea964483e1b2dd94","modified":1506087126000},{"_id":"themes/icarus/node_modules/debug/LICENSE","hash":"d16a2786962571280a11cae01d5e59aeb1351c9a","modified":1497485783000},{"_id":"themes/icarus/node_modules/debug/Makefile","hash":"89eb5a7b8385734ef7ff4f910d4605cde0bc12fd","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/README.md","hash":"38096a9c10830714695a97a8501b817eb0a7534e","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/component.json","hash":"4963889b7905abd5a8955b8d27c3079e2d449564","modified":1506087129000},{"_id":"themes/icarus/node_modules/debug/karma.conf.js","hash":"93fef7cf3ed6f04d2cfc3cd0b8d5d972d35cfd29","modified":1497485783000},{"_id":"themes/icarus/node_modules/debug/node.js","hash":"aa7655ee80c9a485313675f9379c2f18d33ea061","modified":1497485783000},{"_id":"themes/icarus/node_modules/debug/package.json","hash":"e186612113059074da391f373024ba87e768c2df","modified":1542352891000},{"_id":"themes/icarus/node_modules/decode-uri-component/index.js","hash":"56ce2ff9993ebbee7eaf1022b40bee1ea3aeb716","modified":1498673356000},{"_id":"themes/icarus/node_modules/decode-uri-component/license","hash":"af189398067d882a068fd79bdd53a399e0ef43c6","modified":1495225841000},{"_id":"themes/icarus/node_modules/decode-uri-component/package.json","hash":"30c10a3e220d11ac58579dd7b03488844e953099","modified":1542352891000},{"_id":"themes/icarus/node_modules/decode-uri-component/readme.md","hash":"e17a23b32121e8bdede95086de26b00496290c33","modified":1495884359000},{"_id":"themes/icarus/node_modules/expand-brackets/LICENSE","hash":"6b6e43e748f05929750a1016160c9ade94e7e644","modified":1474958716000},{"_id":"themes/icarus/node_modules/expand-brackets/README.md","hash":"c968b9c593c4d55b9bf4c0330411494546b70d7f","modified":1474958716000},{"_id":"themes/icarus/node_modules/expand-brackets/changelog.md","hash":"5e9e5db3f6d68d4b36131adb86e30956096d0ed2","modified":1475921290000},{"_id":"themes/icarus/node_modules/expand-brackets/index.js","hash":"aba5af98fe2cc3e88129db44d77994fd9d717d79","modified":1477024078000},{"_id":"themes/icarus/node_modules/expand-brackets/package.json","hash":"7a83f58cf4ec1779368b0984d6e6e79cb8a41cd1","modified":1542352891000},{"_id":"themes/icarus/node_modules/extend-shallow/LICENSE","hash":"8b58a721a73521199654b7b165966a19b1f548fd","modified":1513556213000},{"_id":"themes/icarus/node_modules/extend-shallow/README.md","hash":"6dd9de8f56b255f8a8f2579569d838aaf6bb208b","modified":1513556213000},{"_id":"themes/icarus/node_modules/extend-shallow/index.js","hash":"4775c82922e6a0f4dad8fbdf9a302224e139086b","modified":1513724945000},{"_id":"themes/icarus/node_modules/extend-shallow/package.json","hash":"1d2345192acbff9c5797e17164668da882d5c391","modified":1542352891000},{"_id":"themes/icarus/node_modules/extglob/README.md","hash":"c023bb5df5d65eb4fff0a661107ee47d10c98f84","modified":1513899866000},{"_id":"themes/icarus/node_modules/extglob/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1504821250000},{"_id":"themes/icarus/node_modules/extglob/changelog.md","hash":"10b451b080dcbfc9ceff5807bd2eafda946071ee","modified":1505103611000},{"_id":"themes/icarus/node_modules/extglob/index.js","hash":"a6dfc0630eb89aa9f89e4a60b7632ccab10209ba","modified":1513899502000},{"_id":"themes/icarus/node_modules/extglob/package.json","hash":"e1a0c034364af70de30e346d213678f5011d89eb","modified":1542352891000},{"_id":"themes/icarus/node_modules/define-property/CHANGELOG.md","hash":"457d85498eacf214727ead31703c9f21237a9721","modified":1511829666000},{"_id":"themes/icarus/node_modules/define-property/LICENSE","hash":"37887e27cac24d7df31b21d6e2ccb46d781dd696","modified":1516992180000},{"_id":"themes/icarus/node_modules/define-property/README.md","hash":"09ed575ce374a56e8e6ffc57bcddda232b3f0adb","modified":1516998234000},{"_id":"themes/icarus/node_modules/define-property/index.js","hash":"17c744aa6c75e65c726981002ca1f91f14dd2a38","modified":1516998048000},{"_id":"themes/icarus/node_modules/define-property/package.json","hash":"68966513b04c5ae85832645b314def99889683e0","modified":1542352891000},{"_id":"themes/icarus/node_modules/for-in/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1459090429000},{"_id":"themes/icarus/node_modules/for-in/README.md","hash":"cb27b8d8ba2c3016048811ff979ec1cc6c892d36","modified":1459090589000},{"_id":"themes/icarus/node_modules/for-in/index.js","hash":"4635ec3c2dcfed209d899e78087f07cbc63c505c","modified":1488158989000},{"_id":"themes/icarus/node_modules/for-in/package.json","hash":"1a5b9a64e6108d975796389f1426d7788369035f","modified":1542352891000},{"_id":"themes/icarus/node_modules/fill-range/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1473922241000},{"_id":"themes/icarus/node_modules/fill-range/README.md","hash":"01758f9b2cfb11a0021f45989b20ab76173bb884","modified":1492927269000},{"_id":"themes/icarus/node_modules/fill-range/index.js","hash":"f8a6ffe3db726dac21842732c3e88295d1fd2ae8","modified":1492927795000},{"_id":"themes/icarus/node_modules/fill-range/package.json","hash":"60410c4538ecb9774997e00431040b4cc27734cb","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/.travis.yml","hash":"6b758e87b7e4c765a55d95e6febb1265d2d29246","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/ISSUE_TEMPLATE.md","hash":"2c25657a8b4f5610f3b98a590a0c6f69865fe14b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/LICENSE","hash":"aff99c3b222af6dc2cc4d713ee6f46de6febcb4e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/Readme.md","hash":"58a6326efbb8b6403f97e535abff0c305d8a2bbb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/binding.gyp","hash":"f1bf70a0822fc2b333fc4b9202dd1c3bbb7052b8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/fsevents.cc","hash":"8275cb8d8601647115d1de58cd5ef249346f866e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/fsevents.js","hash":"32795363a2b284834f0ea8c777bbd77862d6e7fd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/install.js","hash":"5d2e77efb096e2dd44d6df0acf71a9732c6730c5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/package.json","hash":"7fc87acbdcd84cb9bcbdef68acf664ee90cad3f4","modified":1542352891000},{"_id":"themes/icarus/node_modules/fragment-cache/LICENSE","hash":"638a1b319a42c387ceb8a8c63512936580072414","modified":1448613704000},{"_id":"themes/icarus/node_modules/fragment-cache/index.js","hash":"a358467daa0ad055af8260874dbdd9d9596de1a5","modified":1476743736000},{"_id":"themes/icarus/node_modules/fragment-cache/README.md","hash":"63be2ad7ea54b37f1596531908fed9947cca8ffb","modified":1462179847000},{"_id":"themes/icarus/node_modules/fragment-cache/package.json","hash":"5ccf78e966c890c17a973870e12a1574505543b0","modified":1542352891000},{"_id":"themes/icarus/node_modules/get-value/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1466238316000},{"_id":"themes/icarus/node_modules/get-value/index.js","hash":"4e97e75f08e3b8f6b99c2b6ee77b2d8197950977","modified":1466199171000},{"_id":"themes/icarus/node_modules/glob-parent/LICENSE","hash":"0f5ecc10b17b4e9208f2eee02966ad7b02d7ebf6","modified":1426989797000},{"_id":"themes/icarus/node_modules/get-value/package.json","hash":"8f09934325d6071c9058066a4143d50b016a0f03","modified":1542352891000},{"_id":"themes/icarus/node_modules/glob-parent/README.md","hash":"10b27ad83a2403fd78d1f2ac9e9eb0b3a25ab516","modified":1481730515000},{"_id":"themes/icarus/node_modules/glob-parent/index.js","hash":"97a382f6a32770678c92c7a928ed7f71346ede81","modified":1481730515000},{"_id":"themes/icarus/node_modules/has-value/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1427312717000},{"_id":"themes/icarus/node_modules/glob-parent/package.json","hash":"5f2d0bc328d636652b2db6873fa33f22d08c6c82","modified":1542352891000},{"_id":"themes/icarus/node_modules/has-value/index.js","hash":"d9e9166b1ea57a3b51538da8adad97f1db0122d5","modified":1495221049000},{"_id":"themes/icarus/node_modules/has-value/README.md","hash":"c1be9e369a64c0991ef261406bb338dc5224bb2b","modified":1495221030000},{"_id":"themes/icarus/node_modules/has-value/package.json","hash":"dab46f18a6a00691318127b1353e6ea9befa7a0e","modified":1542352891000},{"_id":"themes/icarus/node_modules/graceful-fs/LICENSE","hash":"6560c016f1644ce652d83d039d8ba9e64795fd49","modified":499162500000},{"_id":"themes/icarus/node_modules/graceful-fs/README.md","hash":"649ce10ecea3a470be5c2d07ddeae45c7e7b3482","modified":499162500000},{"_id":"themes/icarus/node_modules/graceful-fs/clone.js","hash":"675f90846258fc892068a5ac038323dffec033d2","modified":499162500000},{"_id":"themes/icarus/node_modules/graceful-fs/graceful-fs.js","hash":"34f9473ad7e411c79361ba2af894cad952173b07","modified":499162500000},{"_id":"themes/icarus/node_modules/graceful-fs/legacy-streams.js","hash":"f4a3583d4c3e8b0c407ab8406bdafb02b4055b7f","modified":499162500000},{"_id":"themes/icarus/node_modules/graceful-fs/package.json","hash":"38160eb54cbf5f1632ff2664b3f280ba613f0021","modified":1542352891000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/.eslintignore","hash":"0abf1c392f32bdf193fe824ead96926f550a85ae","modified":1504706129000},{"_id":"themes/icarus/node_modules/graceful-fs/polyfills.js","hash":"f5aa6f1c7cbc705e4a55246377db6552c4f3a58a","modified":499162500000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/.eslintrc","hash":"2c4a55a386408308d637f658a4b2f5e82f4e58db","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/.jscsrc","hash":"5f410f9c9caedfdd1eabb1571de1f8f9014eefb6","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/.npmignore","hash":"84ab7c92a20b2cdd63ada937fae53268474d9561","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/README.md","hash":"c2099fa8247b7dfffbf1fc4a7f805e3e2cc6059c","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/LICENSE","hash":"fecd013bdadc9ead2732027f06bf8fc19761efcb","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/atom.xml","hash":"3c0c031e0ff6694829a5283dbfde6c5b7fbacd56","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/index.js","hash":"331dc3829516c18dca657837fd4699bec71c3d76","modified":1504706129000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/package.json","hash":"6376620463cec95f3dd0ad4709211a683e93da2c","modified":1542352891000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/rss2.xml","hash":"9de57a207819ef64aaeea6769afa72d63389341d","modified":1504706129000},{"_id":"themes/icarus/node_modules/has-values/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1427249090000},{"_id":"themes/icarus/node_modules/has-values/README.md","hash":"c9e0291415ad8e48e9089ca3a196f1e1598fffb2","modified":1495219381000},{"_id":"themes/icarus/node_modules/has-values/index.js","hash":"be62431522dc01c6daf4fb60cb38627c95009cfd","modified":1495218635000},{"_id":"themes/icarus/node_modules/inherits/LICENSE","hash":"3b0e8d58a362b1787ef3504fba4f593b22f3cee4","modified":1376950172000},{"_id":"themes/icarus/node_modules/has-values/package.json","hash":"909bc1d76f2e6864c61fc80d514c89d52ce2e6bf","modified":1542352891000},{"_id":"themes/icarus/node_modules/inherits/README.md","hash":"f2f8d26f1cf5fb1e3a68aa225221b064f999fefb","modified":1368714278000},{"_id":"themes/icarus/node_modules/inherits/inherits.js","hash":"491caba7b70590f6dcbe37d7edccd9f89ac1b9fd","modified":1473280161000},{"_id":"themes/icarus/node_modules/inherits/inherits_browser.js","hash":"7c13eacf36e79e5e7dd257d80ec25846e4df7eb3","modified":1368715198000},{"_id":"themes/icarus/node_modules/inherits/package.json","hash":"3888ff9e7843fde7a367c2cd5b934e0220a717d8","modified":1542352891000},{"_id":"themes/icarus/node_modules/invert-kv/index.js","hash":"de8db0a1bda39e00bb4831788a8a52fb7c968e94","modified":1403813196000},{"_id":"themes/icarus/node_modules/invert-kv/package.json","hash":"e50279d3072b6f141c6da47fb965cafd1e07634c","modified":1542352891000},{"_id":"themes/icarus/node_modules/invert-kv/readme.md","hash":"b50599e017388e5820ce7991ef8815c1cc334aa8","modified":1403813226000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1440999499000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/README.md","hash":"ae3e26bdbc1655c71945c13fc210d4f7476452d1","modified":1451294530000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/index.js","hash":"0b876e50d0a0ab99e62ccf5a09588a7c64f9372f","modified":1451294141000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/package.json","hash":"abb79d9e17d679261a276fd299cb7a8f708a338b","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-buffer/LICENSE","hash":"07d9563f6153658de124707787ff43f0458ab24a","modified":1442461838000},{"_id":"themes/icarus/node_modules/is-buffer/README.md","hash":"6e507ede8260bce223b496c2457dbd8d2b285e40","modified":1490065732000},{"_id":"themes/icarus/node_modules/is-buffer/index.js","hash":"eb49b73bd06bdeadbb422f63d6efe1fdc01099c0","modified":1508966858000},{"_id":"themes/icarus/node_modules/is-buffer/package.json","hash":"f2e4fd4168fc25de166d57bc88fafa98fab2ab91","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-binary-path/index.js","hash":"575833c2dfcc83b547352b7432bac1e82bcbee35","modified":1432553532000},{"_id":"themes/icarus/node_modules/is-binary-path/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/is-binary-path/package.json","hash":"08004d6b85c5ec67cc920c6eb4063f458c699f06","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-binary-path/readme.md","hash":"1f6cadc94e211099cf21ef60f65fa27c4d765c26","modified":1428394458000},{"_id":"themes/icarus/node_modules/is-data-descriptor/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1440999537000},{"_id":"themes/icarus/node_modules/is-data-descriptor/README.md","hash":"76882fbba5e8f5509239e9760c1b5123d7b14c4a","modified":1451292580000},{"_id":"themes/icarus/node_modules/is-data-descriptor/index.js","hash":"b636d41a2828e34bb9e98a29937bc0ae7e0a5160","modified":1451292869000},{"_id":"themes/icarus/node_modules/is-data-descriptor/package.json","hash":"9591b9ae98fac16555ba174d1daee0e665895afa","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-descriptor/README.md","hash":"12ceec1c2689f3245d70a237e7dd930f9484325d","modified":1488061756000},{"_id":"themes/icarus/node_modules/is-descriptor/index.js","hash":"54e79e0eba499b81321d63dfefa72035e2c67d45","modified":1500738394000},{"_id":"themes/icarus/node_modules/is-descriptor/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1500738397000},{"_id":"themes/icarus/node_modules/is-descriptor/package.json","hash":"28112f2c4a7b864d230ba476d92075e980109d9d","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-extendable/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1435545738000},{"_id":"themes/icarus/node_modules/is-extendable/README.md","hash":"e47f712e0969fbe6cda9f18339d0fc7ad37cb62c","modified":1436050202000},{"_id":"themes/icarus/node_modules/is-extendable/index.js","hash":"c38e98e8a299a93debd6e95bdcb56da06580a884","modified":1436049745000},{"_id":"themes/icarus/node_modules/is-extendable/package.json","hash":"db0546ee06952f58e58b9ecea6b43a10febc50e6","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-extglob/LICENSE","hash":"64fab20ef9c097beeb8f38596e9462b2d6cff0c2","modified":1424431146000},{"_id":"themes/icarus/node_modules/is-extglob/README.md","hash":"98b0c9cc47574dbf8907fa31f7484ddd683405ff","modified":1472929935000},{"_id":"themes/icarus/node_modules/is-extglob/index.js","hash":"c9ca9e3ebf4c37b326c24dc95fb9e6983b3dc1fd","modified":1476311519000},{"_id":"themes/icarus/node_modules/is-extglob/package.json","hash":"b6a5045a6c260f54b5199b74dcc30bb083dabea4","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-fullwidth-code-point/index.js","hash":"7647b9a016393c95e9694ff1dafb3e4ee66fd795","modified":1437083853000},{"_id":"themes/icarus/node_modules/is-fullwidth-code-point/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/is-fullwidth-code-point/package.json","hash":"026adead67cdf44091bee14d4a2ccbe7d15f53cc","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-fullwidth-code-point/readme.md","hash":"51b58cdc5cdf9b9e20396c9daaa411a7337280c3","modified":1437083960000},{"_id":"themes/icarus/node_modules/is-glob/LICENSE","hash":"d0ee9aa349ad4a47b319f691d67023e255ef81ba","modified":1502137081000},{"_id":"themes/icarus/node_modules/is-glob/index.js","hash":"d839217b50928817d1033698ea9d44cd62ef3a7d","modified":1502136765000},{"_id":"themes/icarus/node_modules/is-glob/README.md","hash":"e9f77ca70546e3c40fda0a1a7ff3d7aea5f421b5","modified":1502139038000},{"_id":"themes/icarus/node_modules/is-glob/package.json","hash":"1f0d2ab330da30b177b233160a4cd2ce0776f794","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-number/LICENSE","hash":"64fab20ef9c097beeb8f38596e9462b2d6cff0c2","modified":1472751364000},{"_id":"themes/icarus/node_modules/is-number/README.md","hash":"892a9c0178417ded6bed7f3ce8778aa0f955859c","modified":1473549391000},{"_id":"themes/icarus/node_modules/is-number/index.js","hash":"b22d833d4a0c519477a1984e15e00bdaaceaedc0","modified":1473549246000},{"_id":"themes/icarus/node_modules/is-windows/LICENSE","hash":"37887e27cac24d7df31b21d6e2ccb46d781dd696","modified":1518591141000},{"_id":"themes/icarus/node_modules/is-number/package.json","hash":"e38418f6d57ace7420ac410f5e168882344a45e2","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-windows/README.md","hash":"00aa61a233b9dbc1f8d2667c0f75c27333694747","modified":1518592951000},{"_id":"themes/icarus/node_modules/is-windows/index.js","hash":"bbb0e4f80fbdb90565a0e2715b1c5156727770e4","modified":1518593311000},{"_id":"themes/icarus/node_modules/is-windows/package.json","hash":"c50f396ef7714a4158a95efa2a6997621a737d8d","modified":1542352891000},{"_id":"themes/icarus/node_modules/isobject/LICENSE","hash":"2d068b89820b596b358e9751c35622f386f3aaa8","modified":1498846081000},{"_id":"themes/icarus/node_modules/isobject/README.md","hash":"fe4fafcde2234831391b04c3d447e01904aa2bad","modified":1480627498000},{"_id":"themes/icarus/node_modules/isobject/package.json","hash":"b89d29e580b27b00244fe4f21de080423402beea","modified":1542352891000},{"_id":"themes/icarus/node_modules/isobject/index.d.ts","hash":"ae41e7ca6ad479e2a1161e7540d9a51a577ebaa1","modified":1498843625000},{"_id":"themes/icarus/node_modules/isobject/index.js","hash":"18a7a9bfc3b3b46e469c39697bceb5d86ce1b624","modified":1498846639000},{"_id":"themes/icarus/node_modules/is-plain-object/LICENSE","hash":"d0ee9aa349ad4a47b319f691d67023e255ef81ba","modified":1499812752000},{"_id":"themes/icarus/node_modules/is-plain-object/README.md","hash":"e2a728d80270fc01b87eec1ee2a1a1e99c0a8cc7","modified":1495914726000},{"_id":"themes/icarus/node_modules/is-plain-object/index.d.ts","hash":"26b8dbdc9fee384f97f946ee96f97e0654b4c941","modified":1499812671000},{"_id":"themes/icarus/node_modules/is-plain-object/index.js","hash":"11e99ae4c9562ae7d90f585073a640ca19ccff7b","modified":1499812704000},{"_id":"themes/icarus/node_modules/is-plain-object/package.json","hash":"05ac55b1e1e71f5be3486be678226c71841dd8bb","modified":1542352891000},{"_id":"themes/icarus/node_modules/isarray/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1449741845000},{"_id":"themes/icarus/node_modules/isarray/.travis.yml","hash":"a88152a7be9167603b19549ff75cd80d22501731","modified":1449741845000},{"_id":"themes/icarus/node_modules/isarray/README.md","hash":"b4a604915101db16bb5aebc51cb5385b40c709b6","modified":1449741845000},{"_id":"themes/icarus/node_modules/isarray/component.json","hash":"88615028e91d7872104932a02b78a75f04df8465","modified":1449741845000},{"_id":"themes/icarus/node_modules/isarray/Makefile","hash":"6ab383baa5dc5f695793d66f5b30f0c271e15807","modified":1449741845000},{"_id":"themes/icarus/node_modules/isarray/index.js","hash":"5c3d1f3ad38be1bded1ec4e065f9463c9bbe359d","modified":1449741881000},{"_id":"themes/icarus/node_modules/isarray/package.json","hash":"81953ba329ee1b3f63940cca9d07bc9e5d7ccfae","modified":1542352891000},{"_id":"themes/icarus/node_modules/isarray/test.js","hash":"d822e1a795c5658736d31abdaed0608e01d25183","modified":1449741845000},{"_id":"themes/icarus/node_modules/lodash.debounce/LICENSE","hash":"fc4de79d3e95696f11dbec64b0f99d421deadd30","modified":1471109571000},{"_id":"themes/icarus/node_modules/lodash.debounce/README.md","hash":"9975a548bee458d14583e9a28422b68c9643fbc5","modified":1471109582000},{"_id":"themes/icarus/node_modules/lodash.debounce/index.js","hash":"d8470b23731fe25e5e1a1f6144d27e1a926add40","modified":1471109582000},{"_id":"themes/icarus/node_modules/lodash.debounce/package.json","hash":"bb17bec0c11dd9416a48660e6d5bc8f5a9ed38b4","modified":1542352891000},{"_id":"themes/icarus/node_modules/map-cache/LICENSE","hash":"e3bbd0d3b6f13873dd8a31097d8043f090b565f4","modified":1426671958000},{"_id":"themes/icarus/node_modules/map-cache/README.md","hash":"db3d4b5898f3ca81fc371e473090e1cd18f5b43b","modified":1462877451000},{"_id":"themes/icarus/node_modules/map-cache/index.js","hash":"86ba3ec947cca427705faf7fdbafabf946c5d79d","modified":1460377976000},{"_id":"themes/icarus/node_modules/map-cache/package.json","hash":"242f2bce8a5a56911020d51081d50c3db958f212","modified":1542352891000},{"_id":"themes/icarus/node_modules/lcid/index.js","hash":"44bee35e89acd1a5d4f69588d68d0aab44ea3d2e","modified":1426489151000},{"_id":"themes/icarus/node_modules/lcid/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/lcid/package.json","hash":"81444cc88707e8d2f342fae1b12cba28d477668c","modified":1542352891000},{"_id":"themes/icarus/node_modules/lcid/lcid.json","hash":"8fa5db38e0809fdbcdd19e59bb3377504612863e","modified":1426485054000},{"_id":"themes/icarus/node_modules/lcid/readme.md","hash":"f8875f8dd5001202245c475d8e10a0ccb4d4552d","modified":1426488990000},{"_id":"themes/icarus/node_modules/kind-of/LICENSE","hash":"d0ee9aa349ad4a47b319f691d67023e255ef81ba","modified":1507889208000},{"_id":"themes/icarus/node_modules/kind-of/CHANGELOG.md","hash":"06349b88ecf879e500471de6e43d582fa4d885e1","modified":1507937197000},{"_id":"themes/icarus/node_modules/kind-of/README.md","hash":"f0c7bf6cc5158819dd5a47e1f6d4c4c3f6b2a0e5","modified":1512153016000},{"_id":"themes/icarus/node_modules/kind-of/index.js","hash":"79c2ee61d58c64c47dfd123ac9736e9006248845","modified":1512153024000},{"_id":"themes/icarus/node_modules/map-visit/LICENSE","hash":"fdc6af432e19382696b8a3a09dc3785ebdd1deb9","modified":1491771148000},{"_id":"themes/icarus/node_modules/kind-of/package.json","hash":"178552cc40d1f2eb3526838e2b8c5d13bbd9ef24","modified":1542352891000},{"_id":"themes/icarus/node_modules/map-visit/README.md","hash":"6fd1b825791ac3b0612c7fa2221412ae7caa132d","modified":1491772542000},{"_id":"themes/icarus/node_modules/map-visit/index.js","hash":"6d8f5e1d9f593594c144a4669825485d200d0d23","modified":1491774134000},{"_id":"themes/icarus/node_modules/map-visit/package.json","hash":"29146fe40b8f055ecb6244c05a6d1cc4feca685b","modified":1542352891000},{"_id":"themes/icarus/node_modules/micromatch/CHANGELOG.md","hash":"dd1fd12fd79383ed82edb29d9d97870dde0ab684","modified":1542352889000},{"_id":"themes/icarus/node_modules/micromatch/LICENSE","hash":"8e9f50463a3d515808c3a428e18049425d584c1c","modified":1542352889000},{"_id":"themes/icarus/node_modules/micromatch/README.md","hash":"eb9b97710b17883ecd5acf599f05cfc70a92e919","modified":1542352889000},{"_id":"themes/icarus/node_modules/micromatch/package.json","hash":"b5d0cf98a5977bc3de2c87d6f589cdc48e36d0f1","modified":1542352891000},{"_id":"themes/icarus/node_modules/ms/index.js","hash":"0d10ee921436fa5ff5988445cc67676219dfffbe","modified":1494937320000},{"_id":"themes/icarus/node_modules/ms/license.md","hash":"884e84ebfddafd93b5bb814df076d2ebd1757ba8","modified":1494937320000},{"_id":"themes/icarus/node_modules/micromatch/index.js","hash":"1580d6b1184ff47a820759c5c2623b7774c04b41","modified":1542352889000},{"_id":"themes/icarus/node_modules/ms/package.json","hash":"12adf392ba6f8f0ee8b48f390c8a87e2833696f5","modified":1542352891000},{"_id":"themes/icarus/node_modules/mixin-deep/LICENSE","hash":"8b58a721a73521199654b7b165966a19b1f548fd","modified":1518017947000},{"_id":"themes/icarus/node_modules/ms/readme.md","hash":"e875d9fa741fe44893c778974860f362724e35ec","modified":1494937493000},{"_id":"themes/icarus/node_modules/mixin-deep/README.md","hash":"6a2d1abf365941741d82437762d6e2d290f08546","modified":1518019490000},{"_id":"themes/icarus/node_modules/number-is-nan/index.js","hash":"f46fa63ddeeaf817837ade36c96a37045c36b5bf","modified":1432154213000},{"_id":"themes/icarus/node_modules/number-is-nan/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/mixin-deep/index.js","hash":"3f5a62b5da8bd998ef0bc52397dd27b60d54aa99","modified":1518019415000},{"_id":"themes/icarus/node_modules/mixin-deep/package.json","hash":"8d980d536b520ac5615bc206df0c31810936e2bd","modified":1542352891000},{"_id":"themes/icarus/node_modules/nanomatch/LICENSE","hash":"b9cefee79936ab3e0ab7df6c3ee443fc77df8952","modified":499162500000},{"_id":"themes/icarus/node_modules/nanomatch/CHANGELOG.md","hash":"a9de829decb8e33e4802bc3eafd2032c29775c01","modified":499162500000},{"_id":"themes/icarus/node_modules/number-is-nan/package.json","hash":"7ec9fa8a33a30f268162f9bc6dc77143df70864e","modified":1542352891000},{"_id":"themes/icarus/node_modules/number-is-nan/readme.md","hash":"d579efeab4be85082383108869ebd212ba56ab5a","modified":1475212234000},{"_id":"themes/icarus/node_modules/nanomatch/package.json","hash":"51230674dbc6e539fb94257264028137ab08223a","modified":1542352891000},{"_id":"themes/icarus/node_modules/nanomatch/README.md","hash":"b73f16018792982229965cd7629040f773ad23a2","modified":499162500000},{"_id":"themes/icarus/node_modules/normalize-path/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1490811571000},{"_id":"themes/icarus/node_modules/nanomatch/index.js","hash":"6a91f8451bccc5973909c074ed056aea1252cde9","modified":499162500000},{"_id":"themes/icarus/node_modules/normalize-path/README.md","hash":"40a80d6e2e2f2a2a6b2ea45416d6004c6ede5f27","modified":1490811589000},{"_id":"themes/icarus/node_modules/normalize-path/index.js","hash":"c4d5346122771b9fa25b67bab6ac50cd5b82758d","modified":1490811567000},{"_id":"themes/icarus/node_modules/normalize-path/package.json","hash":"f5e69b856eb936bd60d29c0abbd255b9636a4e13","modified":1542352891000},{"_id":"themes/icarus/node_modules/nan/CHANGELOG.md","hash":"4595508c4a1ae27b8f7a7cb6cff4ba963204f195","modified":1538208277000},{"_id":"themes/icarus/node_modules/nan/include_dirs.js","hash":"cd38e47a4ea58e4b7b31355a1af480ccd04b568f","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/README.md","hash":"a9cbbd11ca7c8e44b540d0888a76ad93f20d6ca1","modified":1538208289000},{"_id":"themes/icarus/node_modules/nan/LICENSE.md","hash":"66f29a05dcb080ea671bbb6a7046e2fccfdd468c","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_callbacks_pre_12_inl.h","hash":"4b3855c7321bc41196fcf21813b7d6dac83d34ee","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_callbacks.h","hash":"3d438ff892fb34c6755e0751f94d232f9ff24cbb","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_callbacks_12_inl.h","hash":"5b27fa1ff1c4e97056d58a64205db5ee40d688a0","modified":1535199068000},{"_id":"themes/icarus/node_modules/nan/nan_converters.h","hash":"650692d465767658e2859566aa7775f086d6c003","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_converters_43_inl.h","hash":"604a0fe1f12e10c41e34451371a06a82b6cf5f35","modified":1521215859000},{"_id":"themes/icarus/node_modules/nan/nan_converters_pre_43_inl.h","hash":"edc38da56abd775e7c5ff653cfaef5601ff8aeee","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_define_own_property_helper.h","hash":"b23055a2f3fc0360b80356913445566f4c933933","modified":1521215859000},{"_id":"themes/icarus/node_modules/nan/nan_implementation_12_inl.h","hash":"ca8a198d1414af508a9bee8c8f546f344112a21f","modified":1538208130000},{"_id":"themes/icarus/node_modules/nan/nan_implementation_pre_12_inl.h","hash":"4a3d8fbc7032e8a66bfbdb6dc1a741a8c194d6a5","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_json.h","hash":"a0b2c447d1195f9abfdea2aef5a4291ffcfd8be1","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_maybe_43_inl.h","hash":"3b0290050c9a4e34390cdc1f74f853c55e62b4ce","modified":1521215859000},{"_id":"themes/icarus/node_modules/nan/nan_maybe_pre_43_inl.h","hash":"eb898c23dd2b2be96078694c69358a5571e36493","modified":1521215859000},{"_id":"themes/icarus/node_modules/nan/nan_new.h","hash":"87c7614eea3bff7c2a1c3fbd316897e6a9b01576","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_persistent_12_inl.h","hash":"9b468716c6c928237fca681b6bf914a4496b96a6","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_private.h","hash":"680d5adaf4f5356f2f9946ccd796859c9c2b7831","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_object_wrap.h","hash":"6911a878b845127255887f66b9987d0be23afa8b","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_string_bytes.h","hash":"bdf8bfb9e779171768a04ec6e9d1e074c10874e1","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/nan_persistent_pre_12_inl.h","hash":"788187155cd3404bb9845e8db96d6c0a6edc6dac","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_typedarray_contents.h","hash":"1788ce0b3910ff6aa4a102a2d95e1f80862cb84a","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/nan_weak.h","hash":"602312ef72731b1e58c8385aff164b665c3dbbc6","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/package.json","hash":"b45d9d0f57522567f08607a3ae3ddf2bfbe77395","modified":1542352891000},{"_id":"themes/icarus/node_modules/object-visit/LICENSE","hash":"f68c4db2c6e52008367016b77eaaee30acbb2d36","modified":1435530195000},{"_id":"themes/icarus/node_modules/object-visit/README.md","hash":"74442f2896796e966178f045312503142529e7e2","modified":1491772087000},{"_id":"themes/icarus/node_modules/object-visit/package.json","hash":"be840ab40daaaa8318e282eb8b46c27bc6f0c475","modified":1542352891000},{"_id":"themes/icarus/node_modules/object-visit/index.js","hash":"b6539c38bf44297874ee006f91358334b1278770","modified":1496116805000},{"_id":"themes/icarus/node_modules/nunjucks/.babelrc","hash":"e08b0b1103f58d3e83b5878aa86aba1e081ea686","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/.eslintignore","hash":"5fe4a6d834e5ae2e4d35e612f2ce6199fc46c61c","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/.eslintrc.js","hash":"4866e9667673b65d894c3d6725ec6ff68178c0f1","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/.gitattributes","hash":"38ce0d627af3c9c5570193a01c1b4a6b38207d9a","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/.npmignore","hash":"160cf823e85a1cd9e9b00018857e21dabb1427cc","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/.travis.yml","hash":"de57e007b72c5e6c515e5c38e231764e0e57d081","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/CONTRIBUTING.md","hash":"5ce8c11a403bce83da5e31355e22635305c9df4c","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/CHANGELOG.md","hash":"942d204a1479074ba89f20f2d36ca5a478a3cde8","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/LICENSE","hash":"2faac141d2c68b9766cf0500199837d18190a337","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/MAINTENANCE.md","hash":"a40a327fb71247270868db1b445a5b1fcca0cb66","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/README.md","hash":"3f73b83eea9b7dd2977fbea6529f9a53d8e3044c","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/appveyor.yml","hash":"315d39913ad6539b772c34264b04d4dd5662cbc2","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/bower.json","hash":"497fdf01135bbe35a61785aaf0a2dfdbfd0d19f6","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/codecov.yml","hash":"cd60fd6f8a88defd86a8bce1a2b4252570025d35","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/contribute.json","hash":"c7acd4a672c9ab9b689cc09ca5a241f8e67d7f87","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/index.js","hash":"2c6e358cf544d019d57d055e5a3a6448970a939c","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/package.json","hash":"c45f7be1c54773d1dad445fa2951ebd2e65a9c4b","modified":1542352891000},{"_id":"themes/icarus/node_modules/nunjucks/postinstall-build.js","hash":"9915851673c2a79819bf7495b4218a61dd2f9d77","modified":1541740356000},{"_id":"themes/icarus/node_modules/object-assign/index.js","hash":"519ffd5a4c91b67302cc9947b794966d629860cd","modified":1484580833000},{"_id":"themes/icarus/node_modules/object-assign/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1477421624000},{"_id":"themes/icarus/node_modules/object-assign/package.json","hash":"ed9247d61655c6867501ee2c277af26c45dabe0d","modified":1542352891000},{"_id":"themes/icarus/node_modules/object-assign/readme.md","hash":"572b4503897c85bbef9ba7d01839242a507acf7b","modified":1478225968000},{"_id":"themes/icarus/node_modules/object-copy/LICENSE","hash":"d5885ada4599bfa2e2bab0665853babff900d21e","modified":1465495634000},{"_id":"themes/icarus/node_modules/object-copy/index.js","hash":"0aab928522db28845bbda4aa4cc51a0c5381d3cf","modified":1465495623000},{"_id":"themes/icarus/node_modules/object-copy/package.json","hash":"50aea88725e948cc6882a3f6157b17627f74a74e","modified":1542352891000},{"_id":"themes/icarus/node_modules/object.pick/README.md","hash":"2c37495da6722f55c94fefe761ca168b27c5a0ea","modified":1503101157000},{"_id":"themes/icarus/node_modules/object.pick/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1503101157000},{"_id":"themes/icarus/node_modules/object.pick/index.js","hash":"0c4a2f347ec1499edb8106903213b51e515986d2","modified":1503101157000},{"_id":"themes/icarus/node_modules/object.pick/package.json","hash":"4d6798d5d08d5f9a314f672b2909c07dd990f7a8","modified":1542352891000},{"_id":"themes/icarus/node_modules/os-locale/index.js","hash":"b0aa01d61dede1b2f87d5ed56318f83787551a07","modified":1441692137000},{"_id":"themes/icarus/node_modules/os-locale/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/os-locale/package.json","hash":"b4d96421aa8f3b6dce0d560f572dcdf9fc9f1579","modified":1542352891000},{"_id":"themes/icarus/node_modules/os-locale/readme.md","hash":"625c3415731f47406831239e3c2abf791df39d99","modified":1441692137000},{"_id":"themes/icarus/node_modules/pascalcase/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1439960259000},{"_id":"themes/icarus/node_modules/pascalcase/index.js","hash":"3e58f4d2af3bb0174d1b7e0e6b8ae27e5f1cbf89","modified":1449267075000},{"_id":"themes/icarus/node_modules/pascalcase/package.json","hash":"c6cb35b9b9ad054dbf11a5d74d7b2d2d5164eef5","modified":1542352891000},{"_id":"themes/icarus/node_modules/pascalcase/README.md","hash":"479b85936ff2db46b6ef8aa07ead69091cabc4f5","modified":1439961205000},{"_id":"themes/icarus/node_modules/path-is-absolute/index.js","hash":"6de38a82f68960de2bd07fd9114541f02bee2f62","modified":1475210370000},{"_id":"themes/icarus/node_modules/path-is-absolute/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/path-is-absolute/package.json","hash":"9d8bb64c147e77a86a2e70e250d78454f1335ab9","modified":1542352891000},{"_id":"themes/icarus/node_modules/path-is-absolute/readme.md","hash":"b09eee74fdfb9195b8b81401654da2a403886d2d","modified":1475210477000},{"_id":"themes/icarus/node_modules/posix-character-classes/LICENSE","hash":"638a1b319a42c387ceb8a8c63512936580072414","modified":1471487115000},{"_id":"themes/icarus/node_modules/posix-character-classes/index.js","hash":"4d278000c2f66341b8389a4a0d5397974c47fdc2","modified":1492663180000},{"_id":"themes/icarus/node_modules/posix-character-classes/README.md","hash":"790683b75f176b4e77863774c0c80e153decd60f","modified":1474954711000},{"_id":"themes/icarus/node_modules/posix-character-classes/package.json","hash":"6b5da5e0f4892577ca300e7dee8db35531704e33","modified":1542352891000},{"_id":"themes/icarus/node_modules/path-dirname/index.js","hash":"3b199f37a2772d6f3ee75d06346d50d6c8fa4009","modified":1476811498000},{"_id":"themes/icarus/node_modules/path-dirname/license","hash":"6facc462460e271b28e305ea1cc6ed8b514a3a45","modified":1476802444000},{"_id":"themes/icarus/node_modules/path-dirname/package.json","hash":"eb54a2176564eed0cdbfd9ca64b0ad6737501ebd","modified":1542352891000},{"_id":"themes/icarus/node_modules/path-dirname/readme.md","hash":"6e2ac6c7743e1a8996206fc8793064edc8bfdf3d","modified":1476804935000},{"_id":"themes/icarus/node_modules/postinstall-build/cli.js","hash":"3809501f0a0da92ade1b002f366e777831a03ca5","modified":499162500000},{"_id":"themes/icarus/node_modules/postinstall-build/CHANGELOG.md","hash":"a6683f0cd156b532e8eae02f9e01ffc45bba9bf7","modified":499162500000},{"_id":"themes/icarus/node_modules/postinstall-build/LICENSE","hash":"56fab0e3b52b16c760f1526fe98b109a8ddc8313","modified":499162500000},{"_id":"themes/icarus/node_modules/postinstall-build/README.md","hash":"26bd920eddec21883ab433e156a8e8b6e3620444","modified":499162500000},{"_id":"themes/icarus/node_modules/postinstall-build/index.js","hash":"bd98d7ebc27542791a03d2a81ac03a425365c9bd","modified":499162500000},{"_id":"themes/icarus/node_modules/readdirp/LICENSE","hash":"8c9db3c96b659c6ab7190a7b02a9f1ca90458ea8","modified":499162500000},{"_id":"themes/icarus/node_modules/postinstall-build/package.json","hash":"4238682f93faea0d304a7ad3e9cacdc71c9e09e5","modified":1542352891000},{"_id":"themes/icarus/node_modules/readdirp/README.md","hash":"17b78b594b751b6ddd77d3b9d59e1944f110fd78","modified":499162500000},{"_id":"themes/icarus/node_modules/readdirp/stream-api.js","hash":"fe47b8b386b94ba7477cfcfe986f8f7cb98aa149","modified":499162500000},{"_id":"themes/icarus/node_modules/readdirp/package.json","hash":"2987f820a3dfa0a7e19a40c6a5beeebbe5ed6ae1","modified":1542352891000},{"_id":"themes/icarus/node_modules/readdirp/readdirp.js","hash":"b2037327f08672bacfe200da8b0ee4bf2b186916","modified":499162500000},{"_id":"themes/icarus/node_modules/regex-not/LICENSE","hash":"98f31a0ba0ed336cab1a3b57666f03c175c14010","modified":1519091381000},{"_id":"themes/icarus/node_modules/regex-not/README.md","hash":"f386cc7eaddc931a6293260060c4dab33ef74158","modified":1519091409000},{"_id":"themes/icarus/node_modules/regex-not/index.js","hash":"1671069e3ee8ab22a4db62ec2c95e3de2b524cb2","modified":1519093837000},{"_id":"themes/icarus/node_modules/regex-not/package.json","hash":"931755b675d18f4db3b2b1e37b92bc84d2fb6435","modified":1542352891000},{"_id":"themes/icarus/node_modules/process-nextick-args/index.js","hash":"b84634ced03bbef27bc6563b39f0c90872235d50","modified":1513027157000},{"_id":"themes/icarus/node_modules/process-nextick-args/license.md","hash":"9def7167175d2ac68505dd2ae0c7b8dd63bc4c3d","modified":1441824016000},{"_id":"themes/icarus/node_modules/readable-stream/.travis.yml","hash":"3e9186d540b909db7529af866d75ac160856ffc7","modified":499162500000},{"_id":"themes/icarus/node_modules/process-nextick-args/package.json","hash":"34dc522be1949f7e16a45bbcdeb8ca77bdb335d7","modified":1542352891000},{"_id":"themes/icarus/node_modules/process-nextick-args/readme.md","hash":"730e339064290d377b6b2505f8d4a1fdd1c7ac85","modified":1513027157000},{"_id":"themes/icarus/node_modules/readable-stream/CONTRIBUTING.md","hash":"1b97e91ac67fcbbd711dedd3b5c388c08489eeaa","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/GOVERNANCE.md","hash":"f30fd9ba0fa4f12c900d1b7bb248aa568a72cc3c","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/LICENSE","hash":"d3622fac093fe1cbcb4d8e8d35801600b681fc45","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/README.md","hash":"f48fb91f1cf767e1665a3cf209774cb5b975e08f","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/duplex-browser.js","hash":"9fa4bc0f1f8950e8525e33c376e0722b5be92660","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/duplex.js","hash":"65d2569a9805988eb48fc26ed9fb7123bb062c12","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/package.json","hash":"9ab11e26de94c1e8efc97009289d33577b92bf08","modified":1542352891000},{"_id":"themes/icarus/node_modules/readable-stream/passthrough.js","hash":"1498c28497ca568d3dd207eac8b236c221a17988","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/readable-browser.js","hash":"c72b2b1c4f810d22237ffe40a6a2fd6e3f7c8c16","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/readable.js","hash":"8fcd80b248d1dca48a678abc8cac9d9a0664c7d1","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/transform.js","hash":"50856785dfc8c7cd64838ceb52124fd30378a812","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/writable-browser.js","hash":"56a4597f339df94654933e8e8264b2edcdbcf2fb","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/writable.js","hash":"d1906d0190fe89683d34219a9407ae905cd91233","modified":499162500000},{"_id":"themes/icarus/node_modules/remove-trailing-separator/history.md","hash":"9a79070c7d48e91b041802a71574a0ab070ebddd","modified":1502872208000},{"_id":"themes/icarus/node_modules/remove-trailing-separator/index.js","hash":"1faafafd01af5c36fb4677a6dfe5c214443fb0e0","modified":1502871918000},{"_id":"themes/icarus/node_modules/remove-trailing-separator/license","hash":"74333bafdc4a15e5b9cc4e7f3362a1e252633376","modified":1474706045000},{"_id":"themes/icarus/node_modules/remove-trailing-separator/package.json","hash":"73dd2c2f9ae90771b6a2e1652695d96e1cdd3313","modified":1542352891000},{"_id":"themes/icarus/node_modules/remove-trailing-separator/readme.md","hash":"f63b449dfee83caefcca8751fdf8e971fd401817","modified":1502872067000},{"_id":"themes/icarus/node_modules/repeat-string/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1456747640000},{"_id":"themes/icarus/node_modules/repeat-string/README.md","hash":"88a0cb55405a527ad650b0724ecffe4e31764e2b","modified":1477209631000},{"_id":"themes/icarus/node_modules/repeat-string/index.js","hash":"7e753d2760844344055f3ec63768780362d0f5f4","modified":1477240963000},{"_id":"themes/icarus/node_modules/repeat-element/LICENSE","hash":"854b3338311dea708e157b6848b071e2faf09e72","modified":499162500000},{"_id":"themes/icarus/node_modules/repeat-string/package.json","hash":"ef76c3aa257dd492f6e34cb21965cf36faff143d","modified":1542352891000},{"_id":"themes/icarus/node_modules/repeat-element/README.md","hash":"bb0a2e9072faba92eb6815b1fcaa045608499ebf","modified":499162500000},{"_id":"themes/icarus/node_modules/repeat-element/index.js","hash":"a7f67b85362c17e0664ac0ebee6c070b7f7264a7","modified":499162500000},{"_id":"themes/icarus/node_modules/repeat-element/package.json","hash":"e348b173f87a5cf62b1d8d1f06e1799ab1f6d14e","modified":1542352891000},{"_id":"themes/icarus/node_modules/resolve-url/.jshintrc","hash":"26edbde3151f61c09d71754560fec9b00f017470","modified":1393185450000},{"_id":"themes/icarus/node_modules/resolve-url/LICENSE","hash":"3264e6ca8a3a34146c4aa3beaf60a1ba67a0e6dd","modified":1393182069000},{"_id":"themes/icarus/node_modules/resolve-url/bower.json","hash":"43a86318791a84b2228e9daba0a3dfe61072d003","modified":1393354030000},{"_id":"themes/icarus/node_modules/resolve-url/changelog.md","hash":"2c9447b526202671c2344ebae69b764f54c5cf80","modified":1393353998000},{"_id":"themes/icarus/node_modules/resolve-url/component.json","hash":"1110d97eb6f157ebe37acb474d13ace08b1eff5b","modified":1393354019000},{"_id":"themes/icarus/node_modules/resolve-url/package.json","hash":"32b996a83f88d5f534c603ca124ee3c65f2e49a1","modified":1542352891000},{"_id":"themes/icarus/node_modules/resolve-url/readme.md","hash":"77912933062059e0ff23ad3b9ff20c5b6c1c62ec","modified":1393353864000},{"_id":"themes/icarus/node_modules/resolve-url/resolve-url.js","hash":"9b3baf0de41c3c1fd3859c626d443b9db5abbd00","modified":1393274517000},{"_id":"themes/icarus/node_modules/ret/LICENSE","hash":"888f3b31a8ad2deff6e736297612707022322dfa","modified":1387479090000},{"_id":"themes/icarus/node_modules/ret/README.md","hash":"54c65de2426e21e90a422a77c52561a5306b4593","modified":1494634078000},{"_id":"themes/icarus/node_modules/ret/package.json","hash":"af3657951f214a650a7c2bf956dc2741b21f767c","modified":1542352891000},{"_id":"themes/icarus/node_modules/safe-regex/.travis.yml","hash":"a88152a7be9167603b19549ff75cd80d22501731","modified":1423240318000},{"_id":"themes/icarus/node_modules/safe-regex/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1423240318000},{"_id":"themes/icarus/node_modules/safe-regex/index.js","hash":"d88ce3277026f5e7e24831ff84579d1d57b812d7","modified":1426724972000},{"_id":"themes/icarus/node_modules/safe-regex/package.json","hash":"32fce7426325abc3ed829a197ffa68f4932ef86d","modified":1542352891000},{"_id":"themes/icarus/node_modules/safe-regex/readme.markdown","hash":"f4ff3cb1efbb74b65873d722debb18e65a88c6dc","modified":1426725163000},{"_id":"themes/icarus/node_modules/safe-buffer/LICENSE","hash":"07d9563f6153658de124707787ff43f0458ab24a","modified":499162500000},{"_id":"themes/icarus/node_modules/safe-buffer/index.d.ts","hash":"0b5844a33b757b9db574541363116917fcbc6d90","modified":499162500000},{"_id":"themes/icarus/node_modules/safe-buffer/README.md","hash":"75916065970faa645bca603327ecbaea09afe12e","modified":499162500000},{"_id":"themes/icarus/node_modules/safe-buffer/index.js","hash":"f67b8decb99eed068f28c9ae56df08c21bf4c33d","modified":499162500000},{"_id":"themes/icarus/node_modules/safe-buffer/package.json","hash":"6a2c28bba962ce4fb0e1a7d2a057152d0580078a","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon/LICENSE","hash":"e3bbd0d3b6f13873dd8a31097d8043f090b565f4","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/index.js","hash":"f2ccb608f9eed75e6fce62b8f13a5b6cb72ee520","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/README.md","hash":"ad72d1bf8359e16c741dbde92a6a8c64d5f7f2f0","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/package.json","hash":"835ef845c3f8a71f8824ca9c24cfb6b66cb4a20b","modified":1542352891000},{"_id":"themes/icarus/node_modules/set-value/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1431415594000},{"_id":"themes/icarus/node_modules/set-value/README.md","hash":"68170953eef783cd0283f711806fda6bc8e3535c","modified":1498024041000},{"_id":"themes/icarus/node_modules/set-value/index.js","hash":"16d0a4ebcceaa8f4e3d39bd4d0fb4c435e367618","modified":1498023848000},{"_id":"themes/icarus/node_modules/set-value/package.json","hash":"a6f0874339205687229784495b0f7518f6ea30a8","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-node/LICENSE","hash":"e4a3fda253eb8403886b64f78b916ee31d515baf","modified":1475312170000},{"_id":"themes/icarus/node_modules/snapdragon-node/README.md","hash":"a41edf68e6dcb57be52c9de6861fb11f54ef203e","modified":1493640404000},{"_id":"themes/icarus/node_modules/snapdragon-node/index.js","hash":"dc70a360c5e06a8c859718d2b4ba9c2a610dd733","modified":1498392089000},{"_id":"themes/icarus/node_modules/snapdragon-node/package.json","hash":"cbb15f78624879245fd0bf91728ebf2c8d5b621a","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-util/LICENSE","hash":"e4a3fda253eb8403886b64f78b916ee31d515baf","modified":1475312170000},{"_id":"themes/icarus/node_modules/snapdragon-util/README.md","hash":"784d617522a9ef571a2bb8c54e88f7a6a201c6f3","modified":1493638962000},{"_id":"themes/icarus/node_modules/snapdragon-util/index.js","hash":"5db31da148fb2251dc28c95d4a396988c3d1803e","modified":1498383946000},{"_id":"themes/icarus/node_modules/snapdragon-util/package.json","hash":"5f4905d147f315cce1bdd935da381f4011ea71e1","modified":1542352891000},{"_id":"themes/icarus/node_modules/source-map/CHANGELOG.md","hash":"30497f61c3317cab69ac398e6a1bbb3ced8165f2","modified":1492467890000},{"_id":"themes/icarus/node_modules/source-map/LICENSE","hash":"914d42b13ad394be4aa75b4d93fde94b1e79cbbd","modified":1492467890000},{"_id":"themes/icarus/node_modules/source-map/README.md","hash":"57db4f374077098f029b577e000cb26e8ccbcccd","modified":1492467890000},{"_id":"themes/icarus/node_modules/source-map/package.json","hash":"35d9b2e021e79b1450e19760600cf6092e69ee23","modified":1542352891000},{"_id":"themes/icarus/node_modules/source-map/source-map.js","hash":"54dd50c132e3a298bcad252861389300ac0ce265","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map-url/.jshintrc","hash":"d87f0b4a7e1a79e0ed4d9abebbf5dfc32790fb1e","modified":1407065545000},{"_id":"themes/icarus/node_modules/source-map-url/LICENSE","hash":"9642f985c99a173639313953aceb413845a46452","modified":1407065749000},{"_id":"themes/icarus/node_modules/source-map-url/bower.json","hash":"a05a83b1295d405864e731937c13e24dae74844d","modified":1447362185000},{"_id":"themes/icarus/node_modules/source-map-url/changelog.md","hash":"0e20b97ed628e151bbfbca3d640a8df9cebfce4d","modified":1447362185000},{"_id":"themes/icarus/node_modules/source-map-url/component.json","hash":"c235b49974829324471a71252eb56dcd7770f416","modified":1447362185000},{"_id":"themes/icarus/node_modules/source-map-url/package.json","hash":"b21f1c229c5f42d2b5ff1bde724f2e1e1ef7f4ac","modified":1542352891000},{"_id":"themes/icarus/node_modules/source-map-url/readme.md","hash":"46df5b1078553c785c6b61d0cea17e686be416b0","modified":1447362185000},{"_id":"themes/icarus/node_modules/source-map-url/source-map-url.js","hash":"2b68dfcd71b21ae8458d6845dfd26c40dd92a9d4","modified":1447362185000},{"_id":"themes/icarus/node_modules/source-map-url/x-package.json5","hash":"4e5c1e9fb39aadfda4c905e0453aa584644f18aa","modified":1447362185000},{"_id":"themes/icarus/node_modules/split-string/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1511106811000},{"_id":"themes/icarus/node_modules/split-string/README.md","hash":"22b84f23c1eaf6e6382e9fb4a1700aeff7f34816","modified":1498022784000},{"_id":"themes/icarus/node_modules/split-string/package.json","hash":"fb5f3d1d08284652e888cd68e0d7c7b7601c11ad","modified":1542352891000},{"_id":"themes/icarus/node_modules/split-string/index.js","hash":"9a720d694a09799eb9f9485128775a4b3453376b","modified":1511106813000},{"_id":"themes/icarus/node_modules/source-map-resolve/.jshintrc","hash":"0dfb41ff435f25af719979985026c0dfb2ebb43e","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/.travis.yml","hash":"c952c71b3be074aa2b466286321351f246b6a9e5","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/LICENSE","hash":"e1d9453aabc0f9429f970cd9b2af638ea53e0571","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/bower.json","hash":"f1d45be55623448cff2af536317b1d71a540dd78","modified":1525972093000},{"_id":"themes/icarus/node_modules/source-map-resolve/changelog.md","hash":"27c7a017ef2f881953046ae7f97444a5bb18c0bb","modified":1525972232000},{"_id":"themes/icarus/node_modules/source-map-resolve/component.json","hash":"dec2ca8dbe2845393d1a1cb4caf0833fcb7011f1","modified":1525972093000},{"_id":"themes/icarus/node_modules/source-map-resolve/generate-source-map-resolve.js","hash":"0ba0162bd2f6398a46c58194f8be7d9e97a894d5","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/package.json","hash":"3a66cb579a4175fbbdf194aa60bc6ca9cd773797","modified":1542352891000},{"_id":"themes/icarus/node_modules/source-map-resolve/readme.md","hash":"0aecbc9cb8a4520fa05adde79f8a040f77c047bb","modified":1525971833000},{"_id":"themes/icarus/node_modules/source-map-resolve/source-map-resolve.js","hash":"7786cb609e7cda022341bc86cb0b38dbc8764890","modified":1525971873000},{"_id":"themes/icarus/node_modules/source-map-resolve/source-map-resolve.js.template","hash":"5050816b426cc28bda4f02ae16a95af4faa7e2c8","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/x-package.json5","hash":"a2ec25f09dbbd934c17240f59afbad83b903d443","modified":1525972084000},{"_id":"themes/icarus/node_modules/static-extend/LICENSE","hash":"d5885ada4599bfa2e2bab0665853babff900d21e","modified":1457683000000},{"_id":"themes/icarus/node_modules/static-extend/index.js","hash":"5b1e427a91748c3513aa7dfeb484ddc72d328659","modified":1465497818000},{"_id":"themes/icarus/node_modules/static-extend/package.json","hash":"577f321eb59ba7d94463cd435edb6d29005e730f","modified":1542352891000},{"_id":"themes/icarus/node_modules/string-width/index.js","hash":"488a7f558004cde30cd57c2eeac1aca4e2947a7a","modified":1471118229000},{"_id":"themes/icarus/node_modules/string-width/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/icarus/node_modules/string-width/package.json","hash":"9ca69f9eaee345e896c40fff2f5b268a70b3da12","modified":1542352891000},{"_id":"themes/icarus/node_modules/string-width/readme.md","hash":"31d4db706cd6186a3a8e4c69ec499663f3a97f23","modified":1471120248000},{"_id":"themes/icarus/node_modules/string_decoder/.travis.yml","hash":"7b7251ecc270c4ee9ed7ae4255a15ca3cb75db08","modified":499162500000},{"_id":"themes/icarus/node_modules/string_decoder/LICENSE","hash":"36791ee8e28518f9fb92b51ad9e4247708be9c55","modified":499162500000},{"_id":"themes/icarus/node_modules/string_decoder/README.md","hash":"324e83b5b018b9e290e3650ee9dc907332df7ddd","modified":499162500000},{"_id":"themes/icarus/node_modules/string_decoder/package.json","hash":"3939be729ae3cdf25bbd33fcf19483efe7b2091f","modified":1542352891000},{"_id":"themes/icarus/node_modules/strip-ansi/index.js","hash":"fa7b64a04c5989a1c9b78e83768b90384ac9abcc","modified":1424597013000},{"_id":"themes/icarus/node_modules/strip-ansi/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1424597013000},{"_id":"themes/icarus/node_modules/strip-ansi/package.json","hash":"1e22f0d96b465d777598a9c7e40a4adf2051a492","modified":1542352891000},{"_id":"themes/icarus/node_modules/strip-ansi/readme.md","hash":"ee19204de1797a46e3101e8b064a3cfd4741fd6c","modified":1456056884000},{"_id":"themes/icarus/node_modules/to-regex/LICENSE","hash":"b9cefee79936ab3e0ab7df6c3ee443fc77df8952","modified":1471487115000},{"_id":"themes/icarus/node_modules/to-regex/README.md","hash":"4006e6061a4587d1971a52773d60260a838fec63","modified":1519460445000},{"_id":"themes/icarus/node_modules/to-regex/index.js","hash":"fdda5465203149f50f8f8d5a1d903c00672571a8","modified":1519460568000},{"_id":"themes/icarus/node_modules/to-regex/package.json","hash":"79f71d36d5eacb69a513b6ebaacd522fedf4ed94","modified":1542352891000},{"_id":"themes/icarus/node_modules/to-object-path/README.md","hash":"b7781d769095ae9e5912da91ce5db89c9decde1f","modified":1446090732000},{"_id":"themes/icarus/node_modules/to-object-path/LICENSE","hash":"e3bbd0d3b6f13873dd8a31097d8043f090b565f4","modified":1446090083000},{"_id":"themes/icarus/node_modules/to-object-path/index.js","hash":"9c463e996206bd89c9ac0f95990f525916dc2bd9","modified":1454259483000},{"_id":"themes/icarus/node_modules/to-object-path/package.json","hash":"8cfc55f7660de8a66272bb438ea1223bf911d52c","modified":1542352891000},{"_id":"themes/icarus/node_modules/to-regex-range/LICENSE","hash":"fdc6af432e19382696b8a3a09dc3785ebdd1deb9","modified":1461741180000},{"_id":"themes/icarus/node_modules/to-regex-range/README.md","hash":"0c6063bf330a53fefc41c78810d302c7c95bb50a","modified":1493300007000},{"_id":"themes/icarus/node_modules/to-regex-range/package.json","hash":"1d25ee816f95a56857a2e2b19a19f53521744e98","modified":1542352891000},{"_id":"themes/icarus/node_modules/to-regex-range/index.js","hash":"7c1004587525f3c2d7435935047721648478f7b5","modified":1492912395000},{"_id":"themes/icarus/node_modules/union-value/LICENSE","hash":"fdc6af432e19382696b8a3a09dc3785ebdd1deb9","modified":1436049055000},{"_id":"themes/icarus/node_modules/union-value/README.md","hash":"2ecd936d4a560056d8b705d6fa6e94d7e331c173","modified":1488062495000},{"_id":"themes/icarus/node_modules/union-value/index.js","hash":"a1e6ee46af647b4070d1fb7065941d837e2b0c74","modified":1453199802000},{"_id":"themes/icarus/node_modules/union-value/package.json","hash":"b369c9283e34a1a8004367135ea38f8020decd15","modified":1542352891000},{"_id":"themes/icarus/node_modules/unset-value/LICENSE","hash":"f68c4db2c6e52008367016b77eaaee30acbb2d36","modified":1440634445000},{"_id":"themes/icarus/node_modules/unset-value/README.md","hash":"fb484a83be6263a8e182b69d6e9e086ef4cade34","modified":1488061567000},{"_id":"themes/icarus/node_modules/unset-value/index.js","hash":"139bf35407adc448495227b9319a1e036ddc4a3e","modified":1446234606000},{"_id":"themes/icarus/node_modules/unset-value/package.json","hash":"b33795a83517e1275922bc904186b7fab5632e4c","modified":1542352891000},{"_id":"themes/icarus/node_modules/upath/LICENSE","hash":"366dd7fc7ab966737b771eafad5da6326aa6f38f","modified":499162500000},{"_id":"themes/icarus/node_modules/upath/package.json","hash":"6caba75ac25cfb65ea8eb130fb96fc885c487402","modified":1542352891000},{"_id":"themes/icarus/node_modules/upath/readme.md","hash":"7b9b09277678b831790c2e54849d3f5b00f4dc87","modified":499162500000},{"_id":"themes/icarus/node_modules/upath/upath.d.ts","hash":"d86327c7c2dab7c80b6486b5b0a03dcab3be9b9c","modified":499162500000},{"_id":"themes/icarus/node_modules/urix/LICENSE","hash":"3264e6ca8a3a34146c4aa3beaf60a1ba67a0e6dd","modified":1393705465000},{"_id":"themes/icarus/node_modules/urix/.jshintrc","hash":"a11ad38a0f57ccb7e5ab56a7f8686a162fac2b40","modified":1393705407000},{"_id":"themes/icarus/node_modules/urix/index.js","hash":"027cfd90eb9b1a998c3e3991c4ea7d8b92519744","modified":1393707205000},{"_id":"themes/icarus/node_modules/urix/package.json","hash":"ea03d6f90286e71d9fa3125009733d3a6b4a17da","modified":1542352891000},{"_id":"themes/icarus/node_modules/urix/readme.md","hash":"d2255ca60981a4092e4ce8e0972e4b8505d327a8","modified":1393707485000},{"_id":"themes/icarus/node_modules/use/LICENSE","hash":"854b3338311dea708e157b6848b071e2faf09e72","modified":499162500000},{"_id":"themes/icarus/node_modules/use/index.js","hash":"d90418617188b572b0ede2f443ee8473c63bdf4b","modified":499162500000},{"_id":"themes/icarus/node_modules/use/README.md","hash":"1bb8f2fba098e713a540b03012c5c1f98a23c5b7","modified":499162500000},{"_id":"themes/icarus/node_modules/use/package.json","hash":"26accad7d715c5b63c7c8359a6eace7539c0a191","modified":1542352891000},{"_id":"themes/icarus/node_modules/util-deprecate/History.md","hash":"1fc5b9cf603a0b6abeb852b35bec607a411e5b9b","modified":1444243047000},{"_id":"themes/icarus/node_modules/util-deprecate/browser.js","hash":"335965112d6117af8926dce4497a1fb9fca022eb","modified":1444242970000},{"_id":"themes/icarus/node_modules/util-deprecate/LICENSE","hash":"cbde92577cb69b3b45dd33f8dc600732cf9e14cb","modified":1416945941000},{"_id":"themes/icarus/node_modules/util-deprecate/README.md","hash":"8e590b24df7b037031e571b7b2b9600217b83ae0","modified":1416945941000},{"_id":"themes/icarus/node_modules/util-deprecate/package.json","hash":"b776c3c34a86f7c68551d6ee1faa565db48005ff","modified":1542352891000},{"_id":"themes/icarus/node_modules/util-deprecate/node.js","hash":"26bb9fcabaf57f0bb50e5e026c13de394bc0c478","modified":1416945941000},{"_id":"themes/icarus/node_modules/window-size/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1447615356000},{"_id":"themes/icarus/node_modules/window-size/README.md","hash":"c286863d0378b310abed728a9425b4d00f2027a1","modified":1447615597000},{"_id":"themes/icarus/node_modules/window-size/cli.js","hash":"3be15c787c4707cd700f50e9deae2840394e1822","modified":1447614663000},{"_id":"themes/icarus/node_modules/wrap-ansi/index.js","hash":"1fb24d1dd78fdcf1e03dcf2f6466150bbe531bc0","modified":1480439662000},{"_id":"themes/icarus/node_modules/wrap-ansi/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1477423219000},{"_id":"themes/icarus/node_modules/window-size/index.js","hash":"a6e4427986c2372b10f86c12b4521dff04b3cb52","modified":1447614663000},{"_id":"themes/icarus/node_modules/window-size/package.json","hash":"7371583b2f65e13ee84216b8856e0f1a6ef5c96e","modified":1542352891000},{"_id":"themes/icarus/node_modules/wrap-ansi/package.json","hash":"9d85fc5ca110ed54478a590e0257a355380813d2","modified":1542352891000},{"_id":"themes/icarus/node_modules/wrap-ansi/readme.md","hash":"9ed85c9c6f28fb7aba2079348700ceef7bddd62b","modified":1480439662000},{"_id":"themes/icarus/node_modules/y18n/LICENSE","hash":"d1e0173a0697ade86e242be697a030918b770336","modified":1458190892000},{"_id":"themes/icarus/node_modules/y18n/index.js","hash":"abb180b94096f6824676f2d1ca30376f25451a49","modified":1458190892000},{"_id":"themes/icarus/node_modules/y18n/package.json","hash":"1e0ea093ece5e0772d6ec49e2755f8ae4616e3a8","modified":1542352891000},{"_id":"themes/icarus/node_modules/y18n/README.md","hash":"27de96420d32db9e8a1ff0be8aa965761bce4c0b","modified":1458190892000},{"_id":"themes/icarus/node_modules/yargs/LICENSE","hash":"35d8442a9599f876c805b2c7d31178ecfa18c829","modified":1425539189000},{"_id":"themes/icarus/node_modules/yargs/completion.sh.hbs","hash":"527538bb86ffeeeeaaf6bde7782035bbc3532e35","modified":1435036458000},{"_id":"themes/icarus/node_modules/yargs/CHANGELOG.md","hash":"d9196286c174d7a5b43f399e594b8cecc9fd2fca","modified":1452841946000},{"_id":"themes/icarus/node_modules/yargs/README.md","hash":"d3b40f4632f942e4a5de69d44553fe93fcb59490","modified":1452491870000},{"_id":"themes/icarus/node_modules/yargs/index.js","hash":"5e89ce55ed93617db2fe557e36d4d7b7f6d4bad3","modified":1452491890000},{"_id":"themes/icarus/node_modules/yargs/package.json","hash":"492ff1c51212a87113d1023f8f5c1bd36c87ea2e","modified":1542352891000},{"_id":"source/_posts/Ceph_introduction/disk.jpg","hash":"ec99db9285be65b74f461ff715974195b44ec33e","modified":1539684320000},{"_id":"source/_posts/ceph-enviroment-set/adapter1.jpg","hash":"b837373024e7186203825813f774e3de88f9ce17","modified":1542724139000},{"_id":"source/_posts/ceph-enviroment-set/adapter2.jpg","hash":"ddb8749d0fbcff1b5649b55ce84ac342e6a95c68","modified":1542724266000},{"_id":"source/_posts/ceph-enviroment-set/disk_size.jpg","hash":"d61241fc467f78aca7afa6a1a324d104f76a36bc","modified":1542779763000},{"_id":"source/_posts/ceph-enviroment-set/ip.jpg","hash":"5e07c7b54c3bd661fd6de6f32a164326ebec38f0","modified":1542716003000},{"_id":"source/_posts/ceph-enviroment-set/memory.jpg","hash":"b9a908d6ef7e81306d4c8962e77a741178804f99","modified":1542779976000},{"_id":"source/_posts/ceph-enviroment-set/network.jpg","hash":"1db86deef8de46469497157d3625006aadbbcb23","modified":1542715761000},{"_id":"source/_posts/ceph-enviroment-set/new.jpg","hash":"33afd03fe62aa6be1930a7270613e7872dea0316","modified":1542717240000},{"_id":"source/_posts/ceph-enviroment-set/newvhd2.jpg","hash":"0045d0a644df22309a7a4ba7d74dfad1bdbdd1c5","modified":1542780083000},{"_id":"source/_posts/ceph-enviroment-set/virtual_disk.jpg","hash":"3b56e5ce8d093c1a1f3c483547e912e7de2e5970","modified":1542780140000},{"_id":"themes/icarus/node_modules/nan/nan-2.11.1.tgz","hash":"00842bcb0e9ba654b41732ff3df67328eaa49d45","modified":1538208586000},{"_id":"themes/icarus/node_modules/nan/nan.h","hash":"138bbbe0abbf9d00b53e390108a2ef9fa672eeee","modified":1538208310000},{"_id":"source/_posts/Ceph_introduction/ceph_file.jpg","hash":"9d7e532d14b054c474adae53faae371517c52ea0","modified":1539742992000},{"_id":"source/_posts/Ceph_introduction/rados.jpg","hash":"cfb049856a2bffce6876fa0c567071a5b974f754","modified":1539684218000},{"_id":"source/_posts/ceph-enviroment-set/addios.jpg","hash":"e738c0f38848485940813b9e6311a964410d36a8","modified":1542719202000},{"_id":"source/_posts/ceph-enviroment-set/clone2.jpg","hash":"92fb63a55f377c4c99c6593b164d541e2aec372c","modified":1542783699000},{"_id":"source/_posts/ceph-enviroment-set/disk.jpg","hash":"aad472a8adc8c3f8dac1fafdba119586f9fba439","modified":1542779854000},{"_id":"source/_posts/ceph-enviroment-set/dynamic.jpg","hash":"2ec7251411215a2c7719c861050d59bdc11b3407","modified":1542779900000},{"_id":"source/_posts/ceph-enviroment-set/finish.jpg","hash":"df393a095d92612cd392a07d37ca558fc6b365ae","modified":1542779726000},{"_id":"source/_posts/ceph-enviroment-set/newvhd.jpg","hash":"97b8ee99d743946ba36b568bd606b0ea4b73ae31","modified":1542780024000},{"_id":"source/_posts/ceph-enviroment-set/user_set.jpg","hash":"8366aec980ef2933c2d2e1dd75307e55f6452aeb","modified":1542771677000},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1542293809000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"75c9dda2e7ec041943855ca163a6b1c4c8b4f260","modified":1542293809000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"45cb0bcad461036cdd1fe2e3fbb5f2f19940025c","modified":1542293809000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1542293809000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1542293809000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1542293809000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"c6c163ac8e0d6918273c5f3c6c85f3e6e72d5214","modified":1542356541000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1542293809000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"d35088c83ddd7a197d6d94e16a2ce3a7e29fa1dc","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"b32e694d90914253c9a14e6b77d8f46d1da00cca","modified":1542357088000},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"784646796184d4f27918c22395288a2fafbf9554","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"ce832196eb5761364f3d9af7344e616b031bb8a7","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"b0f9b4534c4949ecb9f8540ed04e3e440065c4cd","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"f528ca7064d9fcecd737b9b71c9c54601365d7d3","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1542293809000},{"_id":"themes/icarus/source/css/_partial/article_backup.styl","hash":"512b9252e1799b93a17c4ad847b0586814a030b4","modified":1542293809000},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1542293809000},{"_id":"themes/icarus/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1542293809000},{"_id":"themes/icarus/source/css/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542293809000},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1542293809000},{"_id":"themes/icarus/source/css/images/whale.png","hash":"5e59a7b7bed8480212a40ee5b0723cbfe9f27c52","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"903a1f2c6ec62cf76a44f92a2dbb52178a4ce94a","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1542293809000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1542293809000},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1542293809000},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1542293809000},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1542293809000},{"_id":"themes/icarus/node_modules/atob/bin/atob.js","hash":"3bfcbfacb0d2dc1aca7e54fc21cdf3d91e557592","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/lib/braces.js","hash":"0752727677138403da1c8d02470c98c0c7ff12bb","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/lib/compilers.js","hash":"09201be2d166095c9c02761f9f1b8ff956f80a4b","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/lib/parsers.js","hash":"7ab6db10a82b8dcb5f38350a588cafb11b0a08c1","modified":499162500000},{"_id":"themes/icarus/node_modules/braces/lib/utils.js","hash":"19ef00ae5a3dd1b03ea3376be63788dd97b61cd3","modified":499162500000},{"_id":"themes/icarus/node_modules/chokidar/lib/fsevents-handler.js","hash":"3a56fad3cc4680aa3d3572a9904e00485b7f3a00","modified":1521779201000},{"_id":"themes/icarus/node_modules/chokidar/lib/nodefs-handler.js","hash":"1f7f078949d8239771cb8297349f5796eff980a9","modified":1529340629000},{"_id":"themes/icarus/node_modules/core-util-is/lib/util.js","hash":"7d34435928ee9228995c04eaa7bdcef875c41e65","modified":1447979840000},{"_id":"themes/icarus/node_modules/debug/src/browser.js","hash":"c41adc79487f377d3dfb397c531812fb9cc429a2","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/src/debug.js","hash":"a2b8a915c86fc750f56a7137860f19ec1182ee21","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/src/index.js","hash":"182314d32e789e4f9c29e3150ae392f1630f171c","modified":1506086966000},{"_id":"themes/icarus/node_modules/debug/src/inspector-log.js","hash":"b2f2996b1f38b6cec0b1746be6cfe458f2585eac","modified":1506017088000},{"_id":"themes/icarus/node_modules/debug/src/node.js","hash":"f24d52cbc9144b011def218234ff7b50e7ddcb19","modified":1506087100000},{"_id":"themes/icarus/node_modules/expand-brackets/lib/compilers.js","hash":"2a37e85ef2e6236bfe9195f9b9ad14f2fda04c29","modified":1481568461000},{"_id":"themes/icarus/node_modules/expand-brackets/lib/utils.js","hash":"a8307a8fb711e5f6a47959cae3fa0965b5c35b0e","modified":1476936957000},{"_id":"themes/icarus/node_modules/expand-brackets/lib/parsers.js","hash":"02ebcb798beecfecf5b48f2cd00462cd1406aecd","modified":1481567734000},{"_id":"themes/icarus/node_modules/extglob/lib/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1475373666000},{"_id":"themes/icarus/node_modules/extglob/lib/compilers.js","hash":"44ff9167ccafd9166810cb9d9b2317b56b5032e9","modified":1515795079000},{"_id":"themes/icarus/node_modules/extglob/lib/extglob.js","hash":"4855ef9b3d2675ba58aeefba7afb59e3b39f6e89","modified":1496190804000},{"_id":"themes/icarus/node_modules/extglob/lib/parsers.js","hash":"6e88b985e54bac5195889b0ca6939301dd5599e9","modified":1515795079000},{"_id":"themes/icarus/node_modules/extglob/lib/utils.js","hash":"e10c1d0d15e6aaac20db3b193ada46997f3d42a4","modified":1504835585000},{"_id":"themes/icarus/node_modules/fsevents/build/.target.mk","hash":"a23aad37809f7d16331c1f00e64feaaa035c619f","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/build/action_after_build.target.mk","hash":"2321ffd22889956a830d53fb47f3b81dc9efb67e","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/build/Makefile","hash":"0ff8dccb91baab59965a2c37dcd468fef0f369cc","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/build/binding.Makefile","hash":"9848f43f0ef3de3dd21cccbf6f68dcd74e5f086f","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/build/config.gypi","hash":"475e68968420d58b931e41fbc046166bc8ba5c5b","modified":1542352893000},{"_id":"themes/icarus/node_modules/fsevents/build/fse.target.mk","hash":"fee64c1f3b9a5a6e4c276cfea373038514fb613a","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/src/async.cc","hash":"90f044c6bdc340273fabbc4aadcb00b9104f625a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/build/gyp-mac-tool","hash":"4b4991befbf066c0bf18c3696f27dcfb0bf005bd","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/src/methods.cc","hash":"864f9ea3a2972721de182fbff624b4cb678724a7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/src/constants.cc","hash":"294d4d3825481686170a948bd4e1bbb72871b2c3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/src/locking.cc","hash":"3e7b5e357f7ef32d3acf05b6a4cc22464c3f2d6f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/src/storage.cc","hash":"b12de056e310d86f344274d29fe180c0a7b24057","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/src/thread.cc","hash":"1ec0b3f3a05b464738bd093b5830081f3ed4349c","modified":499162500000},{"_id":"themes/icarus/node_modules/hexo-generator-feed/lib/generator.js","hash":"9ecc80da89811c512c514f357bc76c8e0a73c073","modified":1504706129000},{"_id":"themes/icarus/node_modules/is-buffer/test/basic.js","hash":"9b388dd4724dc9aebaf5fd3ae177a6d7fd629073","modified":1508967181000},{"_id":"themes/icarus/node_modules/micromatch/lib/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542352889000},{"_id":"themes/icarus/node_modules/micromatch/lib/cache.js","hash":"950a838858eabb8ef308055a67628d1c0a4c19cf","modified":1542352889000},{"_id":"themes/icarus/node_modules/micromatch/lib/compilers.js","hash":"fde223df66f150089c62060beae86815ad6f2604","modified":1542352890000},{"_id":"themes/icarus/node_modules/micromatch/lib/parsers.js","hash":"4c4ca5051f0dd6ef42a47e5e61098dd68bcbfb00","modified":1542352890000},{"_id":"themes/icarus/node_modules/micromatch/lib/utils.js","hash":"286f09856db14e48f789155d4017550890cc7a7c","modified":1542352890000},{"_id":"themes/icarus/node_modules/nanomatch/lib/cache.js","hash":"950a838858eabb8ef308055a67628d1c0a4c19cf","modified":499162500000},{"_id":"themes/icarus/node_modules/nanomatch/lib/compilers.js","hash":"8004fbb7c02a5084450a2d0d7922bd479e3dae3d","modified":499162500000},{"_id":"themes/icarus/node_modules/nanomatch/lib/parsers.js","hash":"7a26a9bc958cd2f7f289ee0bdc5e20dfde05eb4e","modified":499162500000},{"_id":"themes/icarus/node_modules/nanomatch/lib/utils.js","hash":"ef9ba1bc1e5201d762160792df6a7da005a316a6","modified":499162500000},{"_id":"themes/icarus/node_modules/nan/tools/1to2.js","hash":"0dbdf595ab94cd0909ddff360058e5f6b5741744","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/tools/README.md","hash":"a5103d8b2150ba5fd2736fbb6fd2a2a819596244","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/tools/package.json","hash":"c8b6de0212f33be85f01aea1581791bd14aa2a73","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/doc/buffers.md","hash":"379d606e2e03de0cbe5ca3f28d6267b59da7986e","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/doc/asyncworker.md","hash":"7e6f67f7c95f3a65c28c9c59ef374151b3b58e81","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/doc/callback.md","hash":"c621094ec117a6230eca1a1035217cbf147a4c28","modified":1519319250000},{"_id":"themes/icarus/node_modules/nan/doc/converters.md","hash":"87a44ab8436a0a2c5ca5878fb0e3b40d067c3d9c","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/doc/errors.md","hash":"7a6a5c360ce4aba606dc708cb8336699a419e855","modified":1510011372000},{"_id":"themes/icarus/node_modules/nan/doc/json.md","hash":"34ca5249961fa63e96073922af3e0711eebbda15","modified":1510011371000},{"_id":"themes/icarus/node_modules/nan/doc/maybe_types.md","hash":"0292cb0dfe1bf94289143fe1c66caf72169975a9","modified":1521215859000},{"_id":"themes/icarus/node_modules/nan/doc/methods.md","hash":"3e590786cf637595dcb36d6fc94c69bd7865ca6e","modified":1535199068000},{"_id":"themes/icarus/node_modules/nan/doc/new.md","hash":"0bb2febac7f984eae0c5a2d0b3a93b274eb81509","modified":1510011372000},{"_id":"themes/icarus/node_modules/nan/doc/node_misc.md","hash":"07d7e9b2d0353de05e14b04247b3c71644636292","modified":1535199068000},{"_id":"themes/icarus/node_modules/nan/doc/object_wrappers.md","hash":"2773731c36a5db2d3f2b2ec4d8a514614fc2f1af","modified":1535199068000},{"_id":"themes/icarus/node_modules/nan/doc/persistent.md","hash":"1e37d731c7ac1c893a8558fd18f2306a89d4ce18","modified":1538208130000},{"_id":"themes/icarus/node_modules/nan/doc/script.md","hash":"220055e14588407088e48d42714b7fa891f8c7d4","modified":1510011372000},{"_id":"themes/icarus/node_modules/nan/doc/scopes.md","hash":"26eb2e24247e864b342b316dc1b5696c4db05d8d","modified":1510011372000},{"_id":"themes/icarus/node_modules/nan/doc/string_bytes.md","hash":"f2d9b8259c38fc4fe88f1f1324273481ac0d328e","modified":1491430036000},{"_id":"themes/icarus/node_modules/nan/doc/v8_misc.md","hash":"3c552e534341b9b3f4102e56b61f14c454fabbd6","modified":1510011372000},{"_id":"themes/icarus/node_modules/nan/doc/v8_internals.md","hash":"f730b9c1bdb8a0a7dcb59c261decc2d5aa11bdc6","modified":1510743619000},{"_id":"themes/icarus/node_modules/nunjucks/bin/precompile","hash":"372fd593b8ece6cade6bc1eda437f27393338c43","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/bin/precompile.cmd","hash":"272034aeaf91666cbb9a070b065e9148d8847aef","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks-slim.min.js","hash":"6701d955aa0d32d1f072971c278daa569e721f61","modified":1541740421000},{"_id":"themes/icarus/node_modules/nunjucks/.github/PULL_REQUEST_TEMPLATE.md","hash":"facbd9cbfd1188f9a72e95913b3b25842f5b59f6","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/src/compiler.js","hash":"fa9c8448c6f42acb7b6274b30512c723fdb1368e","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/environment.js","hash":"ba5fb4cf8884623a8c60b005ff6d5e9fd7597d61","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/express-app.js","hash":"347706be761f1da63004c970c755e1a7c0af89e6","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/globals.js","hash":"929413dd5b83b1584016a24438dfc7ef06418c1d","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/filters.js","hash":"e4a27d6264f088f1eea617cf01900094f85620bf","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/jinja-compat.js","hash":"83c86326bddcaaa5f03c26c88ed124cdbd33f09f","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/lexer.js","hash":"14838e3d7660cb0690dea17834288ffaadd03fba","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/lib.js","hash":"5bae4fd8f8f5b0740802ce0442c33e9a6b71b1f2","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/loader.js","hash":"cc3e610c7c2b529fa2a1c358d3e3f0ef6e6908cb","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/loaders.js","hash":"d23775431bf961f48b607cbcde48533368c36602","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/node-loaders.js","hash":"c539e2d5d1780b6d6b373d90b33208ae5af036e8","modified":1541740413000},{"_id":"themes/icarus/node_modules/nunjucks/src/object.js","hash":"fc3cb5b76c81d125a0654afb03e3ccf8e7a5e7cd","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/nodes.js","hash":"567cf623223a304f897758c7b2b5ff93285849cc","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/parser.js","hash":"bb86c961cd14b02afee01399833a4c7161b0f48f","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/precompile-global.js","hash":"2a4c88ed7a7d756a9503c7a2eae8d6bc57ceb9ae","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/precompiled-loader.js","hash":"40db96254e609d6a01027bc1f4f579fcbd3ae07e","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/precompile.js","hash":"c057560cc991bf03ff49b98fb4512353c98b2f53","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/transformer.js","hash":"cd00074493e8e80918f5af962448da085d10a8ba","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/runtime.js","hash":"9528dbe1cd05b58169571a8c233c8e9230310a73","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/web-loaders.js","hash":"6f224f2e55d3a09f1e08c8a0af8a9d09b4fead0b","modified":1541740414000},{"_id":"themes/icarus/node_modules/nunjucks/src/tests.js","hash":"18532236539304932b04f793aaacbae79592828b","modified":1541740414000},{"_id":"themes/icarus/node_modules/readable-stream/lib/_stream_passthrough.js","hash":"bbe17aece81ead7c39ec8d65f0cf6f146284aa2c","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/_stream_duplex.js","hash":"51384e1f945a0391b0d10aefedae0d9351401c01","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/_stream_readable.js","hash":"aa75ac312226562ce96b6b067777f52697d41dec","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/_stream_transform.js","hash":"e453a114a78f8a73aa5eccefa010895deae1f7a1","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/_stream_writable.js","hash":"7d77f48864ce8495fb30ab2b7e82727d45114cd6","modified":499162500000},{"_id":"themes/icarus/node_modules/resolve-url/test/resolve-url.js","hash":"bd481a478bd2bd40a31a9948a0d0ea1b597dbdaf","modified":1393353693000},{"_id":"themes/icarus/node_modules/ret/lib/index.js","hash":"574ab86509fbff89b2f493c7ee72c8f3c8f5d926","modified":1468808520000},{"_id":"themes/icarus/node_modules/ret/lib/positions.js","hash":"3d1117d4d3542a0c6889e28dee759328b25693dc","modified":1468732991000},{"_id":"themes/icarus/node_modules/ret/lib/sets.js","hash":"0c51c2b17f4c8dc137f8429e51652063afec1603","modified":1468740179000},{"_id":"themes/icarus/node_modules/ret/lib/types.js","hash":"087025209c0ffe960bf3cffa649ef39294ae36ea","modified":1468733447000},{"_id":"themes/icarus/node_modules/ret/lib/util.js","hash":"74e7a49e91ec69d527ac9eb41445fd7deb3f27fe","modified":1468809503000},{"_id":"themes/icarus/node_modules/safe-regex/example/safe.js","hash":"677ad641a56b26061d87611939b2df72ba97412d","modified":1423240318000},{"_id":"themes/icarus/node_modules/safe-regex/test/regex.js","hash":"ff1c81c16ee9207fd8f0a1113f338cd5c9397428","modified":1426725208000},{"_id":"themes/icarus/node_modules/snapdragon/lib/compiler.js","hash":"b7b4f242978bf1d23474f4ca0abe1c63af76b17d","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/lib/position.js","hash":"cb934baa083596ce2f462d9aa3d85dbe1c53e49f","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/lib/parser.js","hash":"1d4451f74a8c2fc094461eb0f7ec70178d52bdec","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/lib/source-maps.js","hash":"f5cf4908301efc1d5f4a2cc41054704a438b66f5","modified":1542352889000},{"_id":"themes/icarus/node_modules/snapdragon/lib/utils.js","hash":"4426a629c3177e2160186e70fa174798797f6e22","modified":1542352889000},{"_id":"themes/icarus/node_modules/source-map/lib/array-set.js","hash":"ad62f4ee15345ba799a00c59dd226690b4d1d1d2","modified":1496683247000},{"_id":"themes/icarus/node_modules/source-map/lib/base64-vlq.js","hash":"493d3d895198dfaefe88d2b066c272552ea35889","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/lib/base64.js","hash":"269e8e4dcb82db12f6e2a6187e7be46bee604ab0","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/lib/binary-search.js","hash":"b4333085d02fb4c091361de85d5cb368a3ce7632","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/lib/mapping-list.js","hash":"68a9ed5c0a48a384f64efaec04444a464952509d","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/lib/quick-sort.js","hash":"e4adf67561f701e7563d7db979e5c9ff8d60267b","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/lib/source-map-consumer.js","hash":"bf1d511c205859d7f157c1e89fd71492fd61ad4b","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/lib/source-map-generator.js","hash":"2e52163409a7d8e48e44e4da60e59e9ad2beae3b","modified":1496683247000},{"_id":"themes/icarus/node_modules/source-map/lib/source-node.js","hash":"731e14ee0e178a85c2db8b5e96aea97c635a29c2","modified":1496683247000},{"_id":"themes/icarus/node_modules/source-map/lib/util.js","hash":"91079da4160ce05a7760b1e2bdc5f3d2cca955b0","modified":1492467891000},{"_id":"themes/icarus/node_modules/source-map/dist/source-map.min.js","hash":"841896492ffff5edd4cbd451102a9c027bf681df","modified":1503322374000},{"_id":"themes/icarus/node_modules/source-map-url/test/source-map-url.js","hash":"20320c591dbae56a9eb7eaa9cef845ca9c9b29be","modified":1447362185000},{"_id":"themes/icarus/node_modules/source-map-resolve/lib/decode-uri-component.js","hash":"82c95b80162c8078c5389f544eca20656f75cfe2","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/test/read.js","hash":"9268d766128a91860b022b0c710d1723b000c28d","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/test/common.js","hash":"962a8da20c1e71a990f9dacc5e1d241b2350a958","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/test/windows.js","hash":"5a59d237228ddd0848eb5a8f250cc4447a29a8fa","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/test/source-map-resolve.js","hash":"a471087cac1f4f41f68fd003ba761d0f7748020f","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/lib/resolve-url.js","hash":"7c4f873dab7f7d596c696aabb89dfce2075843b3","modified":1525971264000},{"_id":"themes/icarus/node_modules/source-map-resolve/lib/source-map-resolve-node.js","hash":"5dfab46ecf7d6ecad2616f7f81029cdb58008f39","modified":1525971264000},{"_id":"themes/icarus/node_modules/string_decoder/lib/string_decoder.js","hash":"440bd1828612d1e583e33a4ec304673a11c782af","modified":499162500000},{"_id":"themes/icarus/node_modules/urix/test/index.js","hash":"bbd5b27d1d19b6039020f3b29de3a3c0fb941cb9","modified":1393707350000},{"_id":"themes/icarus/node_modules/yargs/lib/tokenize-arg-string.js","hash":"09a8af7dac77372a3eaafacce18da57e65e787a6","modified":1452491870000},{"_id":"themes/icarus/node_modules/yargs/lib/completion.js","hash":"c6b42f85a1b277af518e874c85ad8a3372cc215a","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/lib/usage.js","hash":"bd4f76268f9d093a88d9fa04dc3b4b62bcef5f80","modified":1452491870000},{"_id":"themes/icarus/node_modules/yargs/lib/parser.js","hash":"44da675b52d65faab5ad8419771fad5a102447a6","modified":1452838315000},{"_id":"themes/icarus/node_modules/yargs/locales/de.json","hash":"ffcb949051e2a24feb3411a3e9e438b6dfbc41cd","modified":1440020119000},{"_id":"themes/icarus/node_modules/yargs/lib/validation.js","hash":"83412c0cd901237d7d91380ee84880eadb4fda33","modified":1439059377000},{"_id":"themes/icarus/node_modules/yargs/locales/es.json","hash":"e0496c4ff926a1c72141bf12fcea5feb1b5c6ac9","modified":1439528555000},{"_id":"themes/icarus/node_modules/yargs/locales/fr.json","hash":"b1750db0f960b4041d335f3bda2f79ab52b21f49","modified":1439528555000},{"_id":"themes/icarus/node_modules/yargs/locales/id.json","hash":"33f77c9fb11ac72f4d56e1c2f97ecf6436a69768","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/en.json","hash":"f7f3d8d7a8a8367bb6aeed19cc850f598b5c8464","modified":1439528555000},{"_id":"themes/icarus/node_modules/yargs/locales/ko.json","hash":"8c8c8efd420b8cfd0f46ea54e7bc863473cafde9","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/ja.json","hash":"3c7babc2acca76784bd1e0521bc1793ddeec7bf8","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/nb.json","hash":"e59b7beb20a18b9d1ab8bcec6076870f609475af","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/pirate.json","hash":"36c58937b254ae548d9c5bde0b686f5b51e7eccc","modified":1439528555000},{"_id":"themes/icarus/node_modules/yargs/locales/pl.json","hash":"34a0e25894873eded51e616b93f18f77c7b83f46","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/tr.json","hash":"33ed2f793625641a85ea6efd5aaa062c7fae8e13","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/pt.json","hash":"156d95fc019083afcdfc0ded0eafbcdd466a3cf3","modified":1439529106000},{"_id":"themes/icarus/node_modules/yargs/locales/pt_BR.json","hash":"a8f5b2dc5e9e8a6b30231b63c1e6c67b5ac8e42e","modified":1449111809000},{"_id":"themes/icarus/node_modules/yargs/locales/zh.json","hash":"7b7c12fc6a41516254f336dd14bcc23752091288","modified":1449111809000},{"_id":"source/_posts/Ceph_introduction/ceph_object.jpg","hash":"5a87a84e397f3fa37a6d21eaea10fa1b7b8e4bf3","modified":1539743062000},{"_id":"source/_posts/ceph-enviroment-set/ping.jpg","hash":"257e795c596dbfba3b3858f351117da4903d42bb","modified":1542728802000},{"_id":"source/_posts/ceph-enviroment-set/user.jpg","hash":"62d4517bc8e0ac7474c735c53f84795788c7c32d","modified":1542771648000},{"_id":"themes/icarus/source/css/images/favicon.ico","hash":"72e198149b2809bc8af629da284399985e9023ec","modified":1542293809000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks-slim.js","hash":"40abeb9f3e53645614c0cd806f5c05705ed27c7e","modified":1541740418000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks-slim.min.js.map","hash":"5d1dabf271e3db562e8cd79c6a1f6f2a35ce8d56","modified":1541740421000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks.min.js","hash":"a4059c1ae16b8bce05fd9aa08027ddf4adca8705","modified":1541740420000},{"_id":"themes/icarus/node_modules/source-map/dist/source-map.js","hash":"3f8fb771c39895c9a414c886f50792aecf1c1c6b","modified":1503322374000},{"_id":"source/_posts/Ceph_introduction/ceph-architectural.png","hash":"33e78c6fd69cd486205b261ad9b3fb8d4eeecdf4","modified":1539680644000},{"_id":"source/_posts/Ceph_introduction/ceph_all_component.png","hash":"29385e0cc7c9740f79cceb28e54a5208dfeffbdd","modified":1539679006000},{"_id":"source/_posts/ceph-enviroment-set/install_os2.jpg","hash":"eb195b053fb41016d4b5b6b5b04ea8f6ab194761","modified":1542724662000},{"_id":"source/_posts/ceph-enviroment-set/install_os3.jpg","hash":"dfd2efea25d4b2f9c326982117fa9bbcc9a76139","modified":1542779669000},{"_id":"source/_posts/manual-deploy-ceph/disk_part.jpg","hash":"335cd6b4b9c7ebf1d50456ab12ca67052c2d62cc","modified":1542892213000},{"_id":"themes/icarus/source/css/images/horse.jpg","hash":"abe614ab9e08706a84523518ceabb36a3792302c","modified":1542293809000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1542293809000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1542293809000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1542293809000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1542293809000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1542293809000},{"_id":"themes/icarus/node_modules/base/node_modules/define-property/index.js","hash":"f116f1ce7657d27ccd8bb7b73a489d3b1673b2dd","modified":1441002563000},{"_id":"themes/icarus/node_modules/base/node_modules/define-property/LICENSE","hash":"f68c4db2c6e52008367016b77eaaee30acbb2d36","modified":1439429105000},{"_id":"themes/icarus/node_modules/base/node_modules/define-property/package.json","hash":"97a3a73a8c42f0e555e6444a335a49b07991da68","modified":1542352891000},{"_id":"themes/icarus/node_modules/base/node_modules/define-property/README.md","hash":"84087d93a22bf582f200f4416d44ddf5e258349d","modified":1492669019000},{"_id":"themes/icarus/node_modules/base/node_modules/is-accessor-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509516661000},{"_id":"themes/icarus/node_modules/base/node_modules/is-accessor-descriptor/index.js","hash":"47aae8526ab11bae1851975a8fb9f5949fd56857","modified":1509516656000},{"_id":"themes/icarus/node_modules/base/node_modules/is-accessor-descriptor/package.json","hash":"a66c86f450f9b889ef39b1f6954c62bd2f9fcd2e","modified":1542352891000},{"_id":"themes/icarus/node_modules/base/node_modules/is-accessor-descriptor/README.md","hash":"379dbe241fd1d29d74982e9afcfeecdfe813afbd","modified":1451294530000},{"_id":"themes/icarus/node_modules/base/node_modules/is-data-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509517852000},{"_id":"themes/icarus/node_modules/base/node_modules/is-data-descriptor/README.md","hash":"3923de5c69d9f5178a77dca469bff2374950afcb","modified":1509517990000},{"_id":"themes/icarus/node_modules/base/node_modules/is-data-descriptor/index.js","hash":"66b2f353b84f6cd5529a5000b3f164c27f3465c5","modified":1509517932000},{"_id":"themes/icarus/node_modules/base/node_modules/is-data-descriptor/package.json","hash":"76222b4bcef9f574395d2467c0f222fa3e84f985","modified":1542352891000},{"_id":"themes/icarus/node_modules/base/node_modules/is-descriptor/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1500738397000},{"_id":"themes/icarus/node_modules/base/node_modules/is-descriptor/index.js","hash":"54e79e0eba499b81321d63dfefa72035e2c67d45","modified":1514502680000},{"_id":"themes/icarus/node_modules/base/node_modules/is-descriptor/README.md","hash":"12ceec1c2689f3245d70a237e7dd930f9484325d","modified":1488061756000},{"_id":"themes/icarus/node_modules/base/node_modules/is-descriptor/package.json","hash":"ad0e24c60f596732b8dd80ad1c2e133cbf23a593","modified":1542352891000},{"_id":"themes/icarus/node_modules/braces/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/braces/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/braces/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/braces/node_modules/extend-shallow/package.json","hash":"a53415b6ca7dd276125810202d6115b5c1ecb6f0","modified":1542352891000},{"_id":"themes/icarus/node_modules/class-utils/node_modules/define-property/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1439429105000},{"_id":"themes/icarus/node_modules/class-utils/node_modules/define-property/README.md","hash":"731c043ebda3bb6e54e955c5792c4aacaace5aa4","modified":1441002657000},{"_id":"themes/icarus/node_modules/class-utils/node_modules/define-property/index.js","hash":"1779d5d78512cd02819b2814468372d32607c508","modified":1441002563000},{"_id":"themes/icarus/node_modules/class-utils/node_modules/define-property/package.json","hash":"45d66b541cb31f1deaeea3194b6a7ef131aaf450","modified":1542352891000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/define-property/README.md","hash":"731c043ebda3bb6e54e955c5792c4aacaace5aa4","modified":1441002657000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/define-property/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1439429105000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/define-property/index.js","hash":"1779d5d78512cd02819b2814468372d32607c508","modified":1441002563000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/define-property/package.json","hash":"524fd1ccc429c09e324b0844b4a6d3a8e4d08407","modified":1542352891000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/expand-brackets/node_modules/extend-shallow/package.json","hash":"1ee84d29df7e8cba2c92514ab1c51841b2b0e4c7","modified":1542352891000},{"_id":"themes/icarus/node_modules/extend-shallow/node_modules/is-extendable/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1505162047000},{"_id":"themes/icarus/node_modules/extend-shallow/node_modules/is-extendable/README.md","hash":"66faee26251ae3c7e0d8e7ad944044a219a624eb","modified":1505162178000},{"_id":"themes/icarus/node_modules/extend-shallow/node_modules/is-extendable/index.d.ts","hash":"8d26f170fb432eddfaae73a2c58cba1cdbf1bbf3","modified":1505162047000},{"_id":"themes/icarus/node_modules/extend-shallow/node_modules/is-extendable/index.js","hash":"a266d35a093ddb6e8634094d7d967aeb150c8037","modified":1505162047000},{"_id":"themes/icarus/node_modules/extend-shallow/node_modules/is-extendable/package.json","hash":"12bb3106457eca959d8afec0c4d6014c5533ae16","modified":1542352891000},{"_id":"themes/icarus/node_modules/extglob/node_modules/define-property/index.js","hash":"f116f1ce7657d27ccd8bb7b73a489d3b1673b2dd","modified":1441002563000},{"_id":"themes/icarus/node_modules/extglob/node_modules/define-property/LICENSE","hash":"f68c4db2c6e52008367016b77eaaee30acbb2d36","modified":1439429105000},{"_id":"themes/icarus/node_modules/extglob/node_modules/define-property/README.md","hash":"84087d93a22bf582f200f4416d44ddf5e258349d","modified":1492669019000},{"_id":"themes/icarus/node_modules/extglob/node_modules/define-property/package.json","hash":"bc3f586e3c355cc06dbaa5a423858d503d1c6b01","modified":1542352891000},{"_id":"themes/icarus/node_modules/extglob/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/extglob/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/extglob/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/extglob/node_modules/extend-shallow/package.json","hash":"5d9237a0752f9abe130b7b350a153e8cb191135f","modified":1542352891000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-accessor-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509516661000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-accessor-descriptor/README.md","hash":"379dbe241fd1d29d74982e9afcfeecdfe813afbd","modified":1451294530000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-accessor-descriptor/index.js","hash":"47aae8526ab11bae1851975a8fb9f5949fd56857","modified":1509516656000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-data-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509517852000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-accessor-descriptor/package.json","hash":"3174c309e66d95606b6e5d2c32da11d5e54b70d8","modified":1542352891000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-data-descriptor/README.md","hash":"3923de5c69d9f5178a77dca469bff2374950afcb","modified":1509517990000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-data-descriptor/index.js","hash":"66b2f353b84f6cd5529a5000b3f164c27f3465c5","modified":1509517932000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-data-descriptor/package.json","hash":"fec83fdbb5e326516f84ff58c71446696badd859","modified":1542352891000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-descriptor/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1500738397000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-descriptor/README.md","hash":"12ceec1c2689f3245d70a237e7dd930f9484325d","modified":1488061756000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-descriptor/index.js","hash":"54e79e0eba499b81321d63dfefa72035e2c67d45","modified":1514502680000},{"_id":"themes/icarus/node_modules/extglob/node_modules/is-descriptor/package.json","hash":"f812be8658ceb888b9a04238bed257fc21b84db7","modified":1542352891000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-accessor-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509516661000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-accessor-descriptor/README.md","hash":"379dbe241fd1d29d74982e9afcfeecdfe813afbd","modified":1451294530000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-accessor-descriptor/index.js","hash":"47aae8526ab11bae1851975a8fb9f5949fd56857","modified":1509516656000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-accessor-descriptor/package.json","hash":"f0aa71879438601dc2972f458eb3f53dfa2616ed","modified":1542352891000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-descriptor/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1500738397000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-descriptor/README.md","hash":"12ceec1c2689f3245d70a237e7dd930f9484325d","modified":1488061756000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-descriptor/index.js","hash":"54e79e0eba499b81321d63dfefa72035e2c67d45","modified":1514502680000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-descriptor/package.json","hash":"93604671c614963efe7240a6d94f18c007da9e1a","modified":1542352891000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-data-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509517852000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-data-descriptor/README.md","hash":"3923de5c69d9f5178a77dca469bff2374950afcb","modified":1509517990000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-data-descriptor/index.js","hash":"66b2f353b84f6cd5529a5000b3f164c27f3465c5","modified":1509517932000},{"_id":"themes/icarus/node_modules/define-property/node_modules/is-data-descriptor/package.json","hash":"c61fa6594100af41dd74188560d835f39a241e29","modified":1542352891000},{"_id":"themes/icarus/node_modules/fill-range/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/fill-range/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/detect-libc","hash":"6dc7e6eeb69a6e4dbd886675878538b4de21314d","modified":499162500000},{"_id":"themes/icarus/node_modules/fill-range/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/mkdirp","hash":"0dbed17e23d62e8dc9893f9459768531b300c95c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/needle","hash":"86e8ec7f0b313eeea39cacb738c785f1e2e48d54","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/node-pre-gyp","hash":"e54ad6889531772ef309097f7e4d4cf9c30a997b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/nopt","hash":"f2a561712df0e004c712bfd6c9b0fdc70cc26e8e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/rc","hash":"05ecf8a9ba13732583010e691a7daafbffa46dfa","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/rimraf","hash":"8939084052306c67d1f121f06a2c3fd10579d0ff","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/.bin/semver","hash":"a533af52a4f3f84a6dfcbb95852a6b056f3de930","modified":499162500000},{"_id":"themes/icarus/node_modules/fill-range/node_modules/extend-shallow/package.json","hash":"d7654507ee9312a6d4529cc29ec7221dd42e508a","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/abbrev/LICENSE","hash":"34d4249a8ef23970810fd3018b9399b1268dc052","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/abbrev/README.md","hash":"c520bc857ec612ed88e13d794c47882d5aed3286","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/abbrev/abbrev.js","hash":"e33940719dacc3ea04a0fb3efd7f5a57987b6257","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/abbrev/package.json","hash":"7671cdc16fff2f7b0bba68b3233266ecb425915f","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ansi-regex/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ansi-regex/index.js","hash":"8e2fe7fc814a39d590cf170ccc989a166d505c1e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ansi-regex/package.json","hash":"ef9d3ccb0967c3795548aa7c87991717245cb9fc","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ansi-regex/readme.md","hash":"79b8bd5d8af7fd6d79dcb7c24b3f2e03e1d2a029","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/aproba/LICENSE","hash":"279f47bedbc7bb9520c5f26216b2323e8f0e728e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/aproba/README.md","hash":"b8e00448fe7f8445c8e81302b03a852ee0f7e5cc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/aproba/index.js","hash":"0fdb9dac7e82e5156f5d4237175f00313cbb3e44","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/aproba/package.json","hash":"3bd4aee4bd622550473bfbab3d0731a86ee91fc9","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/CHANGES.md~","hash":"26683b5ba0e3ccc4e7298bea22348e6189d3ea6f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/CHANGES.md","hash":"0c494d8acb491484bbb4ff28eec03afa8e79f5da","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/README.md","hash":"34b661fbb1237d51bdab932626d19518225841a0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/LICENSE","hash":"13b22b5c5f89edc3f31e092b7298cd65687e7250","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/index.js","hash":"d154805f279e1f7708732426e960ab7990fffbe2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/package.json","hash":"39d24203971c65ed2d73b4c0a77c7ab3d2ba5fca","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/tracker-group.js","hash":"7dd60bcd62aa5385de69e4b5d6e91362ed305616","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/tracker-base.js","hash":"7246c8d6f9faa94a98ed31353cbdf41c62ce20fb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/tracker.js","hash":"6afd823dfe51e31c67fd4e79a9db24790e7770d9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/are-we-there-yet/tracker-stream.js","hash":"f0f0d608c7bc4dbf6adbf1af52baf68f84905a2d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/brace-expansion/README.md","hash":"61dcf7b367d852a36fbb50de9824ec92edfa2a5a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/brace-expansion/LICENSE","hash":"433c2b9c71bad0957f4831068c2f5d973cef98a9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/brace-expansion/index.js","hash":"a2f937621d39c20ce582f697c3e4273d1e14b2e0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/brace-expansion/package.json","hash":"7b57b109d3bc7e440bdda39f3c56638ea74eeb83","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/balanced-match/.npmignore","hash":"bf3481c896126bd5395e5095c994fb82c9e4fa8a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/balanced-match/README.md","hash":"1386baac658274264e12701b085143357d817bb1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/balanced-match/LICENSE.md","hash":"09013c002fbdd686da2ec13c5a6d014f0a294ba9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/balanced-match/index.js","hash":"2715b99298649413a681212f3220b1fd0bee0309","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/balanced-match/package.json","hash":"cff928fea02949a7f27ed18628c58d44f58da2ed","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/chownr/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/chownr/README.md","hash":"9311846d7edecf37eb87f6b561abce96c0c7c76c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/chownr/chownr.js","hash":"963ef3f3a6912996ecb4d1a085306444fb0c1cff","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/chownr/package.json","hash":"a53ef9c687a55a933f3ddb52dcb5b795b4baa502","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/code-point-at/index.js","hash":"280ea6787e2472d6001554ab9513814ef27695bd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/code-point-at/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/code-point-at/package.json","hash":"2c7f8c8381ab668ce5ee95252f7eadd0397035f3","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/code-point-at/readme.md","hash":"821d0f3d8140f560309f58e197b9ddc5b158355f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/core-util-is/README.md","hash":"d4987293f1078d937454a14a5ca6f386d227679d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/core-util-is/LICENSE","hash":"a95471326a84657b0e164f84e1285685f63011e0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/core-util-is/float.patch","hash":"d7f073ceb05c6f6dd1bb852fc00f5379a3e41301","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/core-util-is/package.json","hash":"ee2e6cc00a53f2b9037cfb326a9ed36aeb2a104b","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/.coveralls.yml","hash":"90709e4fb4ce17729974b3a140ccbf330519835c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/core-util-is/test.js","hash":"2837ee1d57f385943ba5ccc7fd0ec4ed1cb8cfdd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/.npmignore","hash":"90fef7cc1058bd0f85b0959c4fcd49230a29593e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/.eslintrc","hash":"8d154aeddf66a7bcbd433e3c619f76bb0d920ae2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/.travis.yml","hash":"e87a69a064f6a95b166333d46b919afbc5487f59","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/LICENSE","hash":"d16a2786962571280a11cae01d5e59aeb1351c9a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/CHANGELOG.md","hash":"c35e6a85b4a8732ec8af63beea964483e1b2dd94","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/Makefile","hash":"89eb5a7b8385734ef7ff4f910d4605cde0bc12fd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/README.md","hash":"38096a9c10830714695a97a8501b817eb0a7534e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/karma.conf.js","hash":"93fef7cf3ed6f04d2cfc3cd0b8d5d972d35cfd29","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/component.json","hash":"4963889b7905abd5a8955b8d27c3079e2d449564","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/node.js","hash":"aa7655ee80c9a485313675f9379c2f18d33ea061","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/package.json","hash":"6c32c6dd7a671ed46d30cffbb658f9fcc4fe4704","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/console-control-strings/LICENSE","hash":"ce0c4782bdbd720baf4d2484e5b71728d3a943af","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/console-control-strings/README.md~","hash":"52143f6d5b872e8195a990d94f28cbb7ba02402d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/console-control-strings/README.md","hash":"92bb88022a6dbb3c43e3e75f4dc5ff3338761e10","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/console-control-strings/index.js","hash":"595ec205c05580516996aa88de64adc088fddd66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/console-control-strings/package.json","hash":"01eba32659f24b0a2e77a1c002affdb2987cb5e4","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/.travis.yml","hash":"994e65474ac75a6687de118e175526bc106cef57","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/README.markdown","hash":"132e6e8fd1d19ec2422fdcde00840d8237e44094","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/index.js","hash":"a3063f014cc693b320dbd64de3243a79247c1e05","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/package.json","hash":"ac9c38ef43be17ca19abb2f9ac2a1d9c1f1e68f4","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/.npmignore","hash":"3ca0e72fdfd533e411cc95dc9c91c5ec59661f95","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/History.md","hash":"37e8641729544115b9d3a566ead3480e47d44a9b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/License","hash":"9d414bd96ce8326fadc2f959781154de49af5b00","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/Makefile","hash":"abd4a7cd4a519df349900dd853a307f58a5cd4a5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/Readme.md","hash":"b0afdd75170fd52fc87f9d0bbaa713054fdf42c7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/index.js","hash":"694697be68fb102fb7e9f70d9f35a8827c6d6943","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/package.json","hash":"f1664bd5f0f5b6b9fb6f4eeaca7042a66f0d9ecf","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/detect-libc/.npmignore","hash":"5c660b7881a82953dbe01ddafb7df99cbf062b6b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/detect-libc/LICENSE","hash":"92170cdc034b2ff819323ff670d3b7266c8bffcd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/detect-libc/README.md","hash":"62ec6880a3e3b2a52d60ca46578b47a88379c266","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/detect-libc/package.json","hash":"efaa7f3262109f35cc3978943f73b3d8fc51feed","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/deep-extend/CHANGELOG.md","hash":"f4d4131a8fabbd5282b305f144769bf035cc90f1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/deep-extend/LICENSE","hash":"5b612c5c72c895fcfdd9d12882163ba43f06f0ed","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/deep-extend/README.md","hash":"dee934eeb0389a2d13315bdac8eec3413f7638a6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/deep-extend/index.js","hash":"b88a0d6a70660e804a88f0cf89b6bfd978f900f5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/deep-extend/package.json","hash":"aabe69951e5eb4123ccfa6a0c4d11e43b343422d","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs-minipass/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs-minipass/README.md","hash":"325946181bf7eae9df14ad5ff54e005be44ddb46","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs-minipass/index.js","hash":"b7020584b861ab76d408c070eb1b2acb1942f252","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs.realpath/LICENSE","hash":"cdf711a72ab90a1b193aea27e96cccf491e157e2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs-minipass/package.json","hash":"9e51ea3cd735628bebd1f476e5b78660df04cfce","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs.realpath/README.md","hash":"325af4f63ad42821a34e8df60f6e3b502f1a3f64","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs.realpath/index.js","hash":"9b5cdf4ef79264959ed0a23e4c35efbe6d64b0df","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs.realpath/old.js","hash":"d2d656e98e4d0735902068408824f8d08aaea84c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/fs.realpath/package.json","hash":"51b198d1efbad7c6720e21c244625c917b3f95e3","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/changelog.md","hash":"97bfa68176e50777c07a7ba58f98ff7a1730ac00","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/README.md","hash":"449f1592c9cf2d32a0d74bead66d7267218f2c4f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/common.js","hash":"2f948b495467f2a7ac0afbb1008af557ab040143","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/glob.js","hash":"c2e95cdccba36eaca7b12e2bcf9b383438cee52d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/package.json","hash":"cfbba05caa2712365d3ea610dbf5c8fe34e370a7","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/glob/sync.js","hash":"7482bc56682b97175655976b07044afcb65b0cc9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/CHANGELOG.md","hash":"6be7a11235a29be659a4a300408bd36e64b51768","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/LICENSE","hash":"ce0c4782bdbd720baf4d2484e5b71728d3a943af","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/README.md","hash":"81fd1455668c9343defe69cbbbff10d48b1f97ef","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/base-theme.js","hash":"abe6cba0fc12d2b82d5bd84543f5c3e9b2ba5e3a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/error.js","hash":"04e38f90829460d150c24677f678be9c59a1986d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/has-color.js","hash":"a1e073083f20b6cc77b8d164267e14e58771c909","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/package.json","hash":"8e0d3c6cb5e90d7a0b8fb5ef9ccb6a60a765fcb2","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/index.js","hash":"5961edcf3d4483cbe20646a2be39e7339fd21f09","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/process.js","hash":"8710bc75e47006d96f52c5a8ce8ac224f3e2356d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/plumbing.js","hash":"f6183d68482b5eb91d0d4fcea01d66739b36faf9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/progress-bar.js","hash":"285abdf17d57765ebe2d807d484851e83f932292","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/set-interval.js","hash":"5c2c33590101b8947fdfe9a22ba1d17b1f1e4d70","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/render-template.js","hash":"1d4b5d10409ff9258d8c8459080a98bbeb7189fd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/set-immediate.js","hash":"0ee3511b6dac6bd821ff613bc07feafe664ccf3f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/template-item.js","hash":"44ea3e6d6ce673580fb2d20cb6a83e53ba59c197","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/theme-set.js","hash":"6916f70ae783e1b92b6f4089b95a0d1b15280755","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/themes.js","hash":"2556b438216c7f2ce9985c2e3350a8dd7e419394","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/wide-truncate.js","hash":"684a2d866c9dba4f80f0b645600a096883f79b5c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/gauge/spin.js","hash":"b2a1975a8a0d714909fe8d5056804700fefd11d3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/has-unicode/LICENSE","hash":"0478d8708f5ff5e49c150412201cb066a9b2006d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/has-unicode/README.md","hash":"ace56f38c5b7a359fa99a9338a7d93a85a1d24ab","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/has-unicode/package.json","hash":"c523e75088b072b7a932ee5c7d69e5bffc467f7a","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ignore-walk/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/has-unicode/index.js","hash":"38b6c5bcc04ade8672f9227840e6b9f57be816c7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ignore-walk/README.md","hash":"d61c70411c9c9cae84040aebbb2e3d6aa49251eb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ignore-walk/package.json","hash":"6d5969146bd750d65a76cf442dba6f723142f44f","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/.travis.yml","hash":"1c523d707b2938ebadfba5abe992ba63cdbe4b27","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ignore-walk/index.js","hash":"bb4b3811665fcc1beec125811ad3e727088d5d2b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/Changelog.md","hash":"7d56c7fa46dc939ec7f5d83564732c63af81225f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/LICENSE","hash":"4f3ca49a793f6bb8465a3731fd965a128757b8ce","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/README.md","hash":"8069bc17bdd2fa876e304baeb37ba82a5046abc8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inflight/README.md","hash":"cabcd4da1794331188da1f8f864ea1aa0ca68657","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/package.json","hash":"0c67ffc111057195ac5640bc16081e4fa23ab617","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inflight/inflight.js","hash":"84aed0b47c15de35a85a5aa6c641342ba4dd5a88","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inflight/LICENSE","hash":"515ec4469197395143dd4bfe9b1bc4e0d9b6b12a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inherits/README.md","hash":"f2f8d26f1cf5fb1e3a68aa225221b064f999fefb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inflight/package.json","hash":"5d2f3c9276f88fa1e39d012943b131229500a852","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inherits/LICENSE","hash":"3b0e8d58a362b1787ef3504fba4f593b22f3cee4","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inherits/inherits_browser.js","hash":"7c13eacf36e79e5e7dd257d80ec25846e4df7eb3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inherits/inherits.js","hash":"491caba7b70590f6dcbe37d7edccd9f89ac1b9fd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ini/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/inherits/package.json","hash":"595874913f7a99bb723ea9fd06b53745b2e4078d","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ini/README.md","hash":"1997c778eb616617ba9d369f6a27828bf83af8b8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ini/package.json","hash":"de8b2b51169571da36002604e4e17b8b05d76b7a","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ini/ini.js","hash":"af2c18a4d9971292982d0a43c802953e4497312f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/.travis.yml","hash":"a88152a7be9167603b19549ff75cd80d22501731","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/Makefile","hash":"6ab383baa5dc5f695793d66f5b30f0c271e15807","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/README.md","hash":"b4a604915101db16bb5aebc51cb5385b40c709b6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/component.json","hash":"88615028e91d7872104932a02b78a75f04df8465","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/index.js","hash":"5c3d1f3ad38be1bded1ec4e065f9463c9bbe359d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/package.json","hash":"5f2b2bc8df7c70d780f0664c7cd9444ce02d5d4c","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/isarray/test.js","hash":"d822e1a795c5658736d31abdaed0608e01d25183","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimatch/README.md","hash":"c5acb4041ec3730165d4d6ce835a6bd801c8ccec","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimatch/package.json","hash":"78587125385881b997a005534a00746b96cc0e67","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimatch/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimatch/minimatch.js","hash":"c2ee9ea234b053f5177e703334036d505eaa0978","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/is-fullwidth-code-point/index.js","hash":"7647b9a016393c95e9694ff1dafb3e4ee66fd795","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/is-fullwidth-code-point/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/is-fullwidth-code-point/readme.md","hash":"51b58cdc5cdf9b9e20396c9daaa411a7337280c3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/is-fullwidth-code-point/package.json","hash":"7423a5525d3cf666b63dd0ced58127c546a83e5f","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/.travis.yml","hash":"a88152a7be9167603b19549ff75cd80d22501731","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/index.js","hash":"c69b3860fa8b40337db188fdfb201077df93ef5b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/readme.markdown","hash":"b037b8453fa008383cf7495b3736aa7cc217deb1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/package.json","hash":"53e8b67d4df5f8fac3cc7af13992244db5e347c9","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minipass/README.md","hash":"000f22e7165df4c757831c672b9d323356cb9bbf","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minipass/index.js","hash":"17f901437eb44216591aca966ee8e43e8324de85","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/.travis.yml","hash":"6f47845eac101b08d34b0cfb4cb6d0614b69b4b2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minipass/package.json","hash":"a617dd935d4172c81f7857b22291cf9f6b84321b","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/LICENSE","hash":"35d8442a9599f876c805b2c7d31178ecfa18c829","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/package.json","hash":"9d763fc29225cda7e11942c85974b48929c1cb62","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/readme.markdown","hash":"e4ffd1099773d1e612dc9ecea76dbb791ef355f5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/index.js","hash":"e4aca996fb54ff20c3dad61f1fa7807fcb44409f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ms/index.js","hash":"0d10ee921436fa5ff5988445cc67676219dfffbe","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ms/readme.md","hash":"e875d9fa741fe44893c778974860f362724e35ec","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ms/package.json","hash":"79a09d3b0e69484c0836c263177b8042e707d013","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/ms/license.md","hash":"884e84ebfddafd93b5bb814df076d2ebd1757ba8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minizlib/LICENSE","hash":"73a4b83ee6dc57f6baec7a105c4e842688200a3b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minizlib/README.md","hash":"601da484101f0cf1aaae351bcd7f1e2505d9de68","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minizlib/constants.js","hash":"491b6a06b230ebd9cc0c63f8a95e11bfada86ba5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minizlib/index.js","hash":"f8c9b9059a8a4c1b59fa2f95840377c2c5f9046c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minizlib/package.json","hash":"177a1cf2f936e65d507b69405e9bea6b92022cff","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/CHANGELOG.md","hash":"0b2fb16d4f438c39273e393dc8b740b21639aa82","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/.travis.yml","hash":"e42c9ef6c816086f2cab781af5149ec4829cfeaa","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/README.md","hash":"446719f3833ed7eb8c123eb338f6ce02a1c4b9b7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/package.json","hash":"ef2db74dc605f9926cfb6308570542d9ed2016de","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/README.md","hash":"ba4c2e3680a18ccb644c837d892f18ce7274f371","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/package.json","hash":"fd2aaa492245aba8cf7ff23d89613591d15c9f6a","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/license.txt","hash":"bc6de209ab9f3d24a176d7ec2ed2cd78be48d5e2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-bundled/index.js","hash":"210e6968c15ab04fa623956e0aee752f319ad94f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-bundled/README.md","hash":"829838162b7deaec9db072c340753ce6db012a12","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-bundled/package.json","hash":"d806f6a7a4c9cc20f2985edc4ffa9ed285a9bc66","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-packlist/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-packlist/README.md","hash":"cfea5f814390b44e6f02b12961ce26400c8202ae","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-packlist/package.json","hash":"0e9ca1acf7d880c91d9edede6e351f22c7ce1b07","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npm-packlist/index.js","hash":"3af60294a145b0922b9766a9d00c4af600798b97","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/CHANGELOG.md","hash":"81f31be0aaef580a3c0c2886e2f1e39a78fdc5e9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/LICENSE","hash":"0917a1370f9878d391966436c6029f7b84b0cefb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/contributing.md","hash":"2801bd3a9f4750a974969dc755fef44e15034206","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/appveyor.yml","hash":"3e81010d504c2d96af27b977d0d6b80448e91c7d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/README.md","hash":"99c54822287ec5da1fd90c79cc80dea103512b46","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/package.json","hash":"8125ad5c0515cd7a8bfa13db40d2c26efb9e4545","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/once/once.js","hash":"f78c8cb8d754261b59d03e867f329c2ffdefae45","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/once/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/once/README.md","hash":"69b0a9165715c6cd0e8de37ddb4abad94de2b102","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/number-is-nan/index.js","hash":"f46fa63ddeeaf817837ade36c96a37045c36b5bf","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/once/package.json","hash":"e2645107318b63724f21f6f1149077003605d1d3","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/number-is-nan/package.json","hash":"96666dc5c84a2e5f93d798396e53ec7a64770c0c","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/object-assign/index.js","hash":"519ffd5a4c91b67302cc9947b794966d629860cd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/number-is-nan/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/number-is-nan/readme.md","hash":"d579efeab4be85082383108869ebd212ba56ab5a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/object-assign/package.json","hash":"97345bacb6bace89e05021a9e21af2c0b5f6c2e3","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/object-assign/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/object-assign/readme.md","hash":"572b4503897c85bbef9ba7d01839242a507acf7b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npmlog/CHANGELOG.md","hash":"fd558b8595dc6ff68c4558951c6c0ed7032eb3b0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npmlog/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npmlog/README.md","hash":"f445a828ea5ae5cba850b910d938f10a783a7ed8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npmlog/package.json","hash":"a00486d5592695dff40435de55f00e449fcdc3a9","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-tmpdir/index.js","hash":"b1a22431f527e2927d04706f8468e255080e0bcf","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/npmlog/log.js","hash":"570812e6ea9fb88545f80b5caba303417959cf31","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-tmpdir/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-tmpdir/package.json","hash":"fc8890c6e57d6e12870cc2cb06055d568ada27d7","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-tmpdir/readme.md","hash":"37cc522ae1365a1553c3f5eb4e6ff861dc9048e7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-homedir/package.json","hash":"9938fea6ad1d58e66f7382fa3efc9d71762ce81e","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-homedir/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-homedir/readme.md","hash":"847929d396aeddb06d6333c384748c2df15ce13a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/os-homedir/index.js","hash":"d4e4abbe8e2a8169d6a52907152c2c80ec884745","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/osenv/README.md","hash":"f62f968b504e2a53b9b089579ee7bbb55cfd4ba6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/osenv/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/osenv/osenv.js","hash":"9b8db8347dc3430dacf82cd3438c9acc88bf7c30","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/osenv/package.json","hash":"aec43bc724668383d03be7b9b56ee64e152f0d56","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/path-is-absolute/index.js","hash":"6de38a82f68960de2bd07fd9114541f02bee2f62","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/path-is-absolute/package.json","hash":"5243803a48550eecce400c787123f471506b70f9","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/path-is-absolute/readme.md","hash":"b09eee74fdfb9195b8b81401654da2a403886d2d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/path-is-absolute/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/process-nextick-args/index.js","hash":"b84634ced03bbef27bc6563b39f0c90872235d50","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/process-nextick-args/license.md","hash":"9def7167175d2ac68505dd2ae0c7b8dd63bc4c3d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/process-nextick-args/package.json","hash":"2f07b26a3bdd1558a91c9d79f53d72bd055cfc73","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/process-nextick-args/readme.md","hash":"730e339064290d377b6b2505f8d4a1fdd1c7ac85","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/LICENSE.MIT","hash":"6a911843ccabdd6bbdffaffc0083a03435ceb2b3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/LICENSE.BSD","hash":"a93b16b3298b9ed28337b75b382b10ef616d404b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/README.md","hash":"4f70d9e1d8895757244ec8464f178ff3068a36bd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/LICENSE.APACHE2","hash":"e66a2c506febaaf8c744908ec3e5be148ffd1d86","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/cli.js","hash":"05ecf8a9ba13732583010e691a7daafbffa46dfa","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/browser.js","hash":"7981b353221fdc9c2c9d92dc1f5ba0620d4c6280","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/index.js","hash":"950adecc52598c5b6f1c1eee91f444c55dd4d2b3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/package.json","hash":"70a9d5c98b85a19485b9751d29069bcd983cc535","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/.travis.yml","hash":"3e9186d540b909db7529af866d75ac160856ffc7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/CONTRIBUTING.md","hash":"1b97e91ac67fcbbd711dedd3b5c388c08489eeaa","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/LICENSE","hash":"d3622fac093fe1cbcb4d8e8d35801600b681fc45","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/GOVERNANCE.md","hash":"f30fd9ba0fa4f12c900d1b7bb248aa568a72cc3c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/README.md","hash":"f48fb91f1cf767e1665a3cf209774cb5b975e08f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/duplex-browser.js","hash":"9fa4bc0f1f8950e8525e33c376e0722b5be92660","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/package.json","hash":"a6133a8594b442a2288d605940cb2ce6688311cf","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/duplex.js","hash":"65d2569a9805988eb48fc26ed9fb7123bb062c12","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/passthrough.js","hash":"1498c28497ca568d3dd207eac8b236c221a17988","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/transform.js","hash":"50856785dfc8c7cd64838ceb52124fd30378a812","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/readable.js","hash":"8fcd80b248d1dca48a678abc8cac9d9a0664c7d1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/readable-browser.js","hash":"c72b2b1c4f810d22237ffe40a6a2fd6e3f7c8c16","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/writable-browser.js","hash":"56a4597f339df94654933e8e8264b2edcdbcf2fb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/writable.js","hash":"d1906d0190fe89683d34219a9407ae905cd91233","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safe-buffer/LICENSE","hash":"07d9563f6153658de124707787ff43f0458ab24a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safe-buffer/.travis.yml","hash":"3923a0917e881c4269a097918307f0f63d90f7ac","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safe-buffer/README.md","hash":"75916065970faa645bca603327ecbaea09afe12e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safe-buffer/index.js","hash":"f67b8decb99eed068f28c9ae56df08c21bf4c33d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safe-buffer/package.json","hash":"af95560f6fbffd05ff29622602aeee73cc456096","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safe-buffer/test.js","hash":"66ce1eafbd2161cd00e087ec90a8cbe79b4527e8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/LICENSE","hash":"cfcb19ab237382e4ce1253c5f0e28ad153a3c77a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/dangerous.js","hash":"f5d11729706b0de3ed7d6f35060eb73680cce42f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/Porting-Buffer.md","hash":"1f23a158dc57c02812baef3334ef96ba1c940e5c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/Readme.md","hash":"133890ecc4218d9c67890f0e5884e754e824c859","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/package.json","hash":"977ee4c06d4e44dda257379e20fd7e22a74357eb","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/safer.js","hash":"ad919cad501061f663026f382334cc6ce5a8b381","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/sax/LICENSE","hash":"fe4ff75272675c27279ddf101a2d6d7cd1e9ad64","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/safer-buffer/tests.js","hash":"dc7fd8ad11f6c0a7de689697afc870f58f7a2844","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/sax/README.md","hash":"c199b68fe859344fef10880cfbe52793ffbb0d1a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rimraf/bin.js","hash":"8939084052306c67d1f121f06a2c3fd10579d0ff","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rimraf/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/sax/package.json","hash":"c84a964c8003cb685f2a65f2117b4b933d269543","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rimraf/README.md","hash":"fec5cb034f99088fb8ceec58b6de8ac5f5fc04e7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rimraf/package.json","hash":"9fea76af9bbf55e615523004b7617c211e054661","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string-width/index.js","hash":"488a7f558004cde30cd57c2eeac1aca4e2947a7a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rimraf/rimraf.js","hash":"7fbd16e8807e66393593311e03fa4928bbb103f9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string-width/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string-width/package.json","hash":"caab3212696c7c93a72e850120b1aed2cc7b24b9","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string-width/readme.md","hash":"31d4db706cd6186a3a8e4c69ec499663f3a97f23","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/set-blocking/CHANGELOG.md","hash":"9a81dc600ceb7c49455c73a6a00c5aa7fd9b1e68","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/set-blocking/LICENSE.txt","hash":"47edc4b4e929248ad6e423bf3a6736c320a3277c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/set-blocking/README.md","hash":"ef6f304599d1f60fe91f5197d5aa502325733b67","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/set-blocking/package.json","hash":"b4036c3f2444aa456aa2c482da590637c1b05a36","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/set-blocking/index.js","hash":"1f4153febaba6617978eb38bafedfca5cecb9ee3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/signal-exit/CHANGELOG.md","hash":"84fecbe3e1a39423c5992a6eef6e27e4d847f317","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/signal-exit/LICENSE.txt","hash":"ffffda22e521943bc894935cfae5dd16aaf35897","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/signal-exit/README.md","hash":"c34b15d11371d951320d5ad8518e69fcbd979639","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/signal-exit/index.js","hash":"4c79d6ab52a7473a4e5e096142c619e4fbbac3a6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/signal-exit/package.json","hash":"635190372a0d3e02696ecf0050e5dfbca6d2e5f4","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/signal-exit/signals.js","hash":"6e1c2ff72044c1901590ffd119245461fb85a6bc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/semver/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/semver/README.md","hash":"5f54f60154402a5f0df4c1a32755ad5bda245713","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/semver/package.json","hash":"8f2c86de5c6509c6d1effbfccdeec4e2a61a501b","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/semver/range.bnf","hash":"5c6f063e0ec60f2d04686f73a12ba5f389988a2b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/semver/semver.js","hash":"36ecf3ad4a6fc7f8d97cb3fdd3bdb28a46b7e329","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-json-comments/index.js","hash":"c92451d67b8c50298058547b8d9e569d4670110d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-json-comments/package.json","hash":"497f70d5b937c6a436c58645a5f4aefa3f3bf167","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-json-comments/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-json-comments/readme.md","hash":"4a98bbe81c9d5b9a6de7db4620944362a75eca12","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/index.js","hash":"66ebbdbbc53c79a8cc58c7d009255abe50569bbd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/README.md","hash":"c4d1d299ff56ac0d41bd4ff61808851e255113c9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/package.json","hash":"43aff6b164e741dd750f3be1a290273867387c94","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string_decoder/LICENSE","hash":"36791ee8e28518f9fb92b51ad9e4247708be9c55","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string_decoder/README.md","hash":"324e83b5b018b9e290e3650ee9dc907332df7ddd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string_decoder/.travis.yml","hash":"7b7251ecc270c4ee9ed7ae4255a15ca3cb75db08","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-ansi/index.js","hash":"fa7b64a04c5989a1c9b78e83768b90384ac9abcc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string_decoder/package.json","hash":"f78a0c37aa0c567ca07c57e0bf59217d8a4c6dc0","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-ansi/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-ansi/package.json","hash":"7ac210652de6041fd007f674de80a50c56d67bd4","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/strip-ansi/readme.md","hash":"ee19204de1797a46e3101e8b064a3cfd4741fd6c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/util-deprecate/History.md","hash":"1fc5b9cf603a0b6abeb852b35bec607a411e5b9b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/util-deprecate/LICENSE","hash":"cbde92577cb69b3b45dd33f8dc600732cf9e14cb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/util-deprecate/browser.js","hash":"335965112d6117af8926dce4497a1fb9fca022eb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/util-deprecate/README.md","hash":"8e590b24df7b037031e571b7b2b9600217b83ae0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/util-deprecate/node.js","hash":"26bb9fcabaf57f0bb50e5e026c13de394bc0c478","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/util-deprecate/package.json","hash":"b3800306fb95676d46513126f9f2b8fbe06c3f1a","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/yallist/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/yallist/README.md","hash":"930460a06c3414c2dceeeca378fbe0057779fab5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wide-align/LICENSE","hash":"279f47bedbc7bb9520c5f26216b2323e8f0e728e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/yallist/iterator.js","hash":"196000326037c2df052a6fa78e594a068c92b847","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/yallist/package.json","hash":"80beae1fce2e18abdeabb31ffc8252b74e518eb8","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/yallist/yallist.js","hash":"aac07fc18d23f6996574e6f45e089059e6c72356","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wide-align/README.md","hash":"6b496aa0869b5459804407d01ecd0382fb561df1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wide-align/align.js","hash":"eea4b4e96fe2438794a9ce2d851d77320c754403","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wide-align/package.json","hash":"0e59c443d0ff0231cabe1384ebbd09219d9cbe9f","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wrappy/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wrappy/package.json","hash":"b5eb720c85c26a88974dd2c2c15a23ca5b5ab212","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wrappy/README.md","hash":"582d7139d169b0fc0b1014f2372a0aa26a52cfb8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/wrappy/wrappy.js","hash":"7d5c1c908664b3df4a9b72400a126652ba0dd905","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/.node","hash":"667941ecb52c3b61289b2b68558eeaf49d1c84bf","modified":1542352894000},{"_id":"themes/icarus/node_modules/glob-parent/node_modules/is-glob/README.md","hash":"fd30c761aecd1df64c69c86597146a6a7870a1f5","modified":1472930066000},{"_id":"themes/icarus/node_modules/glob-parent/node_modules/is-glob/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1424431146000},{"_id":"themes/icarus/node_modules/glob-parent/node_modules/is-glob/index.js","hash":"cbafd6adccc7943344b0bf27ce19fefb1bc6cfc3","modified":1476311706000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/fse.node","hash":"8677586c896156413ac3b1b658d4350affce7f76","modified":1542352896000},{"_id":"themes/icarus/node_modules/glob-parent/node_modules/is-glob/package.json","hash":"30fdcea1a0783e0fe384aba76a8e54b6ab57e39e","modified":1542352891000},{"_id":"themes/icarus/node_modules/has-values/node_modules/kind-of/README.md","hash":"e87b08ad601a2861446567f487bcf187bae76633","modified":1495218171000},{"_id":"themes/icarus/node_modules/has-values/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/has-values/node_modules/kind-of/index.js","hash":"655a7c03bc48c43ca0445e447835eef0e840b2e6","modified":1495217934000},{"_id":"themes/icarus/node_modules/has-values/node_modules/kind-of/package.json","hash":"9ea8aa9c46036c2a92969df63033e4e3d5a9c620","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/node_modules/kind-of/index.js","hash":"f9e8418f23f97452410088786d5e0c7a981ced74","modified":1493120356000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/node_modules/kind-of/README.md","hash":"f287584b785807e175d878885c66455a672217bd","modified":1494958295000},{"_id":"themes/icarus/node_modules/is-accessor-descriptor/node_modules/kind-of/package.json","hash":"71ff5a9d9f59408351d386b79fc8a17d7c16d9a1","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-data-descriptor/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/is-data-descriptor/node_modules/kind-of/index.js","hash":"f9e8418f23f97452410088786d5e0c7a981ced74","modified":1493120356000},{"_id":"themes/icarus/node_modules/is-data-descriptor/node_modules/kind-of/README.md","hash":"f287584b785807e175d878885c66455a672217bd","modified":1494958295000},{"_id":"themes/icarus/node_modules/is-data-descriptor/node_modules/kind-of/package.json","hash":"eba03e74cf2139077d6cdfd760fc94b825d7b3d3","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-descriptor/node_modules/kind-of/LICENSE","hash":"d0ee9aa349ad4a47b319f691d67023e255ef81ba","modified":1507878123000},{"_id":"themes/icarus/node_modules/is-descriptor/node_modules/kind-of/README.md","hash":"1b2dad314e9dc345c6e527b73e983041271a3f20","modified":1507878123000},{"_id":"themes/icarus/node_modules/is-descriptor/node_modules/kind-of/index.js","hash":"0bae63095c3bc1b24271342691bb8e569d981b35","modified":1507878123000},{"_id":"themes/icarus/node_modules/is-descriptor/node_modules/kind-of/package.json","hash":"b4d03b30a961a8211fb3d3e8375567c7fa55215b","modified":1542352891000},{"_id":"themes/icarus/node_modules/is-number/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/is-number/node_modules/kind-of/README.md","hash":"f287584b785807e175d878885c66455a672217bd","modified":1494958295000},{"_id":"themes/icarus/node_modules/is-number/node_modules/kind-of/index.js","hash":"f9e8418f23f97452410088786d5e0c7a981ced74","modified":1493120356000},{"_id":"themes/icarus/node_modules/is-number/node_modules/kind-of/package.json","hash":"5b4e5c8f9a6ec2bc8c6ff54ea6dfdb53e463131a","modified":1542352891000},{"_id":"themes/icarus/node_modules/mixin-deep/node_modules/is-extendable/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1505162047000},{"_id":"themes/icarus/node_modules/mixin-deep/node_modules/is-extendable/README.md","hash":"66faee26251ae3c7e0d8e7ad944044a219a624eb","modified":1505162178000},{"_id":"themes/icarus/node_modules/mixin-deep/node_modules/is-extendable/index.d.ts","hash":"8d26f170fb432eddfaae73a2c58cba1cdbf1bbf3","modified":1505162047000},{"_id":"themes/icarus/node_modules/mixin-deep/node_modules/is-extendable/index.js","hash":"a266d35a093ddb6e8634094d7d967aeb150c8037","modified":1505162047000},{"_id":"themes/icarus/node_modules/mixin-deep/node_modules/is-extendable/package.json","hash":"433377e735a721af127745342a3058ff5dfe9a3e","modified":1542352891000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/main.js","hash":"b2a467d8120b987b09f8e90eeacef1590836c37d","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/pre.js","hash":"d3013c0386b642539fe28d790539c68a044fbe7c","modified":1541740356000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/define-property/README.md","hash":"731c043ebda3bb6e54e955c5792c4aacaace5aa4","modified":1441002657000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/define-property/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1439429105000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/define-property/index.js","hash":"1779d5d78512cd02819b2814468372d32607c508","modified":1441002563000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/define-property/package.json","hash":"7ede41d760ef63add73c8612a8223111b0a26f82","modified":1542352891000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/kind-of/README.md","hash":"f287584b785807e175d878885c66455a672217bd","modified":1494958295000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/kind-of/index.js","hash":"f9e8418f23f97452410088786d5e0c7a981ced74","modified":1493120356000},{"_id":"themes/icarus/node_modules/object-copy/node_modules/kind-of/package.json","hash":"ce953ac702badd394c89643abaf784aeecc05f58","modified":1542352891000},{"_id":"themes/icarus/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md","hash":"1fafe6e2e28a4404db90ae6dc867199b74468ca4","modified":499162500000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/define-property/README.md","hash":"731c043ebda3bb6e54e955c5792c4aacaace5aa4","modified":1441002657000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/define-property/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1439429105000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/define-property/index.js","hash":"1779d5d78512cd02819b2814468372d32607c508","modified":1441002563000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/define-property/package.json","hash":"a169370915cc46a3b08294dc6dcd8890d0b095da","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/snapdragon/node_modules/extend-shallow/package.json","hash":"9bf3e32a1f8d47664f8e5acb1abe875ea3e368a0","modified":1542352891000},{"_id":"themes/icarus/node_modules/set-value/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/set-value/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/set-value/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/set-value/node_modules/extend-shallow/package.json","hash":"c47be1bffc09945a89a74c9769f61a6c804ddfe0","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/define-property/LICENSE","hash":"f68c4db2c6e52008367016b77eaaee30acbb2d36","modified":1439429105000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/define-property/README.md","hash":"84087d93a22bf582f200f4416d44ddf5e258349d","modified":1492669019000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/define-property/index.js","hash":"f116f1ce7657d27ccd8bb7b73a489d3b1673b2dd","modified":1441002563000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-accessor-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509516661000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/define-property/package.json","hash":"b43b9afc02c0cb4934f724f6c0a9f4264df7c88b","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-accessor-descriptor/index.js","hash":"47aae8526ab11bae1851975a8fb9f5949fd56857","modified":1509516656000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-accessor-descriptor/README.md","hash":"379dbe241fd1d29d74982e9afcfeecdfe813afbd","modified":1451294530000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-data-descriptor/LICENSE","hash":"57c4fbf72d7f9fbd417aae78527d76653fa63245","modified":1509517852000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-data-descriptor/index.js","hash":"66b2f353b84f6cd5529a5000b3f164c27f3465c5","modified":1509517932000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-accessor-descriptor/package.json","hash":"f3962fc0a335f43ec0c3db870419bcf7b96b0cc5","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-data-descriptor/README.md","hash":"3923de5c69d9f5178a77dca469bff2374950afcb","modified":1509517990000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-descriptor/LICENSE","hash":"abb6bd03bea71e8684cd8036a3383bb0839a84b6","modified":1500738397000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-descriptor/README.md","hash":"12ceec1c2689f3245d70a237e7dd930f9484325d","modified":1488061756000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-data-descriptor/package.json","hash":"943182d47790d73825650590d96683b2926b1557","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-descriptor/index.js","hash":"54e79e0eba499b81321d63dfefa72035e2c67d45","modified":1514502680000},{"_id":"themes/icarus/node_modules/snapdragon-node/node_modules/is-descriptor/package.json","hash":"15d164e204f46c52256ba0fd77762459f56ac453","modified":1542352891000},{"_id":"themes/icarus/node_modules/snapdragon-util/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/snapdragon-util/node_modules/kind-of/index.js","hash":"f9e8418f23f97452410088786d5e0c7a981ced74","modified":1493120356000},{"_id":"themes/icarus/node_modules/snapdragon-util/node_modules/kind-of/README.md","hash":"f287584b785807e175d878885c66455a672217bd","modified":1494958295000},{"_id":"themes/icarus/node_modules/snapdragon-util/node_modules/kind-of/package.json","hash":"b9898f33ac2c962816ab770af16547754f2e2181","modified":1542352891000},{"_id":"themes/icarus/node_modules/static-extend/node_modules/define-property/LICENSE","hash":"f6794e2167dc92e7ab5f2b00a15f0af45639a5a1","modified":1439429105000},{"_id":"themes/icarus/node_modules/static-extend/node_modules/define-property/index.js","hash":"1779d5d78512cd02819b2814468372d32607c508","modified":1441002563000},{"_id":"themes/icarus/node_modules/static-extend/node_modules/define-property/README.md","hash":"731c043ebda3bb6e54e955c5792c4aacaace5aa4","modified":1441002657000},{"_id":"themes/icarus/node_modules/static-extend/node_modules/define-property/package.json","hash":"13bfbca2865245f4837749e30936fd9f6221c1eb","modified":1542352891000},{"_id":"themes/icarus/node_modules/to-object-path/node_modules/kind-of/README.md","hash":"f287584b785807e175d878885c66455a672217bd","modified":1494958295000},{"_id":"themes/icarus/node_modules/to-object-path/node_modules/kind-of/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1447758397000},{"_id":"themes/icarus/node_modules/to-object-path/node_modules/kind-of/package.json","hash":"351962cd11f72663b1688d544e134e128cc198cc","modified":1542352891000},{"_id":"themes/icarus/node_modules/to-object-path/node_modules/kind-of/index.js","hash":"f9e8418f23f97452410088786d5e0c7a981ced74","modified":1493120356000},{"_id":"themes/icarus/node_modules/union-value/node_modules/set-value/LICENSE","hash":"b4e100fe8f109af7c7a5eba6b8ddb4c75be99a5a","modified":1431415594000},{"_id":"themes/icarus/node_modules/union-value/node_modules/set-value/package.json","hash":"2d839221a84b922e3707aa6fbf6f48e3b6cdaebf","modified":1542352891000},{"_id":"themes/icarus/node_modules/union-value/node_modules/set-value/README.md","hash":"814b7b4bb8d9c24d404611a8071c6db5307c4724","modified":1486963548000},{"_id":"themes/icarus/node_modules/union-value/node_modules/set-value/index.js","hash":"28bc519051b126cd0fc8387a608626042acbb800","modified":1487799530000},{"_id":"themes/icarus/node_modules/union-value/node_modules/extend-shallow/LICENSE","hash":"cce8f85bce93fb036bc1846f001ffea1b098108c","modified":1425326601000},{"_id":"themes/icarus/node_modules/union-value/node_modules/extend-shallow/index.js","hash":"50d4474d1d223c4059319b3491832064d5b78b05","modified":1435564532000},{"_id":"themes/icarus/node_modules/union-value/node_modules/extend-shallow/package.json","hash":"d9b8f5f5d7a84426c0d14a1579e8ecaf777153b7","modified":1542352891000},{"_id":"themes/icarus/node_modules/union-value/node_modules/extend-shallow/README.md","hash":"38ad3cd3bbca00d5d00f4fa9f3c15e3af88d5610","modified":1435564577000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/README.md","hash":"798bbcee796e75773f4909eb3d0e74e2719200fa","modified":1459091762000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1427312717000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/index.js","hash":"d6cd21f716fdb95f09c9463a649eae9c9e155d37","modified":1459091782000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/package.json","hash":"deaba166e694a7520569c75e910abfee4eb3f368","modified":1542352891000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-values/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1427249090000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-values/README.md","hash":"d402b322829c490afe79d7e9bdd492fde44f4e5a","modified":1459080640000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-values/package.json","hash":"2bb18f9160c9f7c073a04d2c31205ac31fd1b200","modified":1542352891000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-values/index.js","hash":"135c2b8cffce7301d1bf23f2d6142c07395be98e","modified":1427249090000},{"_id":"themes/icarus/node_modules/upath/build/code/upath.js","hash":"b362dc346f8cc44b60f1ca56ae597d599ba8395a","modified":499162500000},{"_id":"source/_posts/ceph-enviroment-set/install_os1.jpg","hash":"8caaac027d3d2e88846bd884ab1e2da0476bce91","modified":1542724523000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1542293809000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1542293809000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1542293809000},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1542293809000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1542293809000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/obj.target/action_after_build.stamp","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542352897000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks.js","hash":"43564942e7cfb76e7e97a7e3e9a6d5f5d893c5bb","modified":1541740417000},{"_id":"source/_posts/ceph-enviroment-set/clone3.jpg","hash":"340898a91872632883a1305337d7f937d697030f","modified":1542783796000},{"_id":"source/_posts/ceph-enviroment-set/virtualBox.jpg","hash":"d7174ed5786307d6729c326b840843c400947425","modified":1542714681000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1542293809000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/core-util-is/lib/util.js","hash":"7d34435928ee9228995c04eaa7bdcef875c41e65","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/src/browser.js","hash":"c41adc79487f377d3dfb397c531812fb9cc429a2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/src/debug.js","hash":"a2b8a915c86fc750f56a7137860f19ec1182ee21","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/src/index.js","hash":"182314d32e789e4f9c29e3150ae392f1630f171c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/src/inspector-log.js","hash":"b2f2996b1f38b6cec0b1746be6cfe458f2585eac","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/debug/src/node.js","hash":"f24d52cbc9144b011def218234ff7b50e7ddcb19","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/example/map.js","hash":"022a614b8d9f5ccb67b6ce1f478b1efd7aff298e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/concat-map/test/map.js","hash":"162cce32c23628192cef64924a1ce768af399a4b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/detect-libc/bin/detect-libc.js","hash":"6dc7e6eeb69a6e4dbd886675878538b4de21314d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/delegates/test/index.js","hash":"f1c8ec4cfea947c03d8dd7c2ce43e7e878794284","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/detect-libc/lib/detect-libc.js","hash":"4341118000599a96669629929534a91d0a0b8f02","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/deep-extend/lib/deep-extend.js","hash":"44d3d3f1b030720e5ffa954a3b4badd05c744102","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/dbcs-codec.js","hash":"4ea89eb73a2b3cc3c0ca945280ba2783fcf946bc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/index.js","hash":"79e395b6dfafd0ae516e18c81b828ef3de0c76aa","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/dbcs-data.js","hash":"1cccef8583ac6e070e9d911760633ca8d9f7ca8c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/sbcs-codec.js","hash":"180bea4536e2d8045af969ad6a93b0634e3547c2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/internal.js","hash":"6b0e421bfd6fa701d0fdb42fbf5a512778774757","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/sbcs-data-generated.js","hash":"8ceb7540842b7fb237391ec3c324035a3feb7336","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/utf7.js","hash":"5dacc76c685aeda5c4890d5f8d8e7aabdd852161","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/sbcs-data.js","hash":"c62371ecaf00a91881b8bd38af18940a44a3844c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/lib/extend-node.js","hash":"e43698fce6870e58ecf2efc5e6878bd1e67360e4","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/lib/bom-handling.js","hash":"5c6518ce3acc35c3e1da961bc02c110e08f81db2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/lib/index.d.ts","hash":"13f473bf92d94868d3d1942fd367370928f4d482","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/lib/streams.js","hash":"3982c3e4c6abe5ec4064a8c5196395067d0c504b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/utf16.js","hash":"d3c63ce106659f00d6f2dbb40ba4dc853fbc8703","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/lib/index.js","hash":"68ccc5b53b1b7aa66dae594ad3150b0f66d158a5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/example/parse.js","hash":"7684d952ceaa32a8c9e3cd21ba26a62e7ee14387","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/dash.js","hash":"27fa6e19e26916edd7fd46ccc2d0b2301b3042a3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/default_bool.js","hash":"ecdb759c4275fb23bd5d072c3c6a7baa74b407c7","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/dotted.js","hash":"51664f4efb36d519b2e439f1156e05e917c08bda","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/parse.js","hash":"e240ae50a049d7b4b4b625467df34bcfaef7dceb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/long.js","hash":"f0ccd5d55358f78efbc928753264e4a32f7724fc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/bin/cmd.js","hash":"0dbed17e23d62e8dc9893f9459768531b300c95c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/parse_modified.js","hash":"5c3cf170e2a2476e0f5bfee9af78556a1958d503","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/whitespace.js","hash":"ea3a87137fa34c00a7d84a4d0350770e8d85ed9c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/minimist/test/short.js","hash":"2ce00fdfe4906fc504286974c143c4ced6a11b12","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/bin/usage.txt","hash":"682ca66d4def0ba4af814be4e6363eff5fcede0d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/examples/pow.js","hash":"6d34dfc0f5f17a971dee0f5ba40eba5219bdd803","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/chmod.js","hash":"ee02690748279a5bad6179dd3feeb66a48d330c8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/clobber.js","hash":"4d00dc55c23f21600adbceb6760587b3ca861626","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/opts_fs.js","hash":"8dd756971f7443eb340b846acee0c17cbadbcb87","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/perm.js","hash":"11382491d90f70fce17e9d183765c343c7870c3c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/opts_fs_sync.js","hash":"0f949a29099c6206e617d6e9e39cb3a41d0daab4","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/race.js","hash":"237f49a5262bc2c668653897e8cc1af8eaa5bd89","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/perm_sync.js","hash":"1759536f89220a608a3987a3038cbaaa0e7458ac","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/mkdirp.js","hash":"628f2dbd4137f64e69454708ba513870b85af4c8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/rel.js","hash":"2488c0b77bc0419a4646c7d0bcfaaef5651995a5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/return.js","hash":"dc2bf5dd5eff2e6a914fc1f731f50ac887ef9d31","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/root.js","hash":"b034b5fdf0da3932263437d9d52b53642a2b40ad","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/return_sync.js","hash":"ef9a789aeb65bafbbb7bceb048dc33ec24a41e3b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/sync.js","hash":"22a3775a59d8994c368e5574ba8ffbe19c8b8648","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/bin/nopt.js","hash":"f2a561712df0e004c712bfd6c9b0fdc70cc26e8e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/umask.js","hash":"d08a2f100ddc37e563e548fd9f7730599009824c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/mkdirp/test/umask_sync.js","hash":"917a95e95427eecd9a0cb7807e0ab6ab3c653fcc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/bin/needle","hash":"86e8ec7f0b313eeea39cacb738c785f1e2e48d54","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/lib/nopt.js","hash":"17f4cb07fa2fe921d394cca5d0e892e99a6a1b41","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/test/basic.js","hash":"4c7c605867599874908e8e1cc4d14c87369a6318","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/nopt/examples/my-program.js","hash":"de3d4a6a7f350fd6846d3ae06334d1fafffc7054","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/deflated-stream.js","hash":"0ac964cd72a5aef45a3b71080e71f4f28faba6e5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/multipart-stream.js","hash":"3ef3d29d497756fd11177038903264b334a1c8a8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/digest-auth.js","hash":"e909da4b8fa6ef8ade3f892f04f7ac5d0266e3ab","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/download-to-file.js","hash":"0fc64091ff3734ef98394dfd239016c628c221b6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/parsed-stream.js","hash":"3ea604d5798388f5bfda8a35f145ecb602c2c805","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/stream-events.js","hash":"37f4ccc463be2e6adb04661fe7dccbd8f5c908b8","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/stream-to-file.js","hash":"1aaa8fa361fcb61a36d0abf7053923628449bb8f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/parsed-stream2.js","hash":"2fa2561467ca577a9aad4e291907da0aee22173c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/examples/upload-image.js","hash":"afcfb80503a1dd3b67594561fd37c346950968d1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/auth.js","hash":"45f1f0141390e688710233c29866f3f7213acd7c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/cookies.js","hash":"c5d0f32c64ee0ce097117004361067acf2bcafc2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/decoder.js","hash":"6fb9e9974ba45c79b4506dc0cb7a22be5950c901","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/multipart.js","hash":"28e9c5f346753dcf799cb6c28a8a7db0837fbfff","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/querystring.js","hash":"5716eb68dbe71586cf2601d9a65ecb4aa23865f0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/needle.js","hash":"76b9b31e5b625f61df5afbdda65ab3b0b51e03e9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/lib/parsers.js","hash":"1e741e505105463bd1096035d40c80a83b91bb04","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/basic_auth_spec.js","hash":"28b41d49be2b5c44b60f2280a141e6624548676e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/decoder_spec.js","hash":"b47c43e80cec5a407782570f66fbf1d855e710a0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/cookies_spec.js","hash":"8a17ddea97a9e2966f03475d5eec35a79f55b47e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/errors_spec.js","hash":"2a100a971740b4f5f9c12c90924a608b040a42ff","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/compression_spec.js","hash":"e71973276fb8af149693b50a1c3ee8bfc92a474f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/headers_spec.js","hash":"91fc30164fcb7f7373c91f752980b96ff8d830fb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/helpers.js","hash":"2618da4eda9d59d5649c99d53b1583efc1200fb6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/output_spec.js","hash":"e8834a6fb6bec1f5dafe81055953e84214c1b6f9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/parsing_spec.js","hash":"fa996b9e5e17c8a6dc022e28aac9fae151f1b175","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/long_string_spec.js","hash":"c11b82eb043dd1ce3c3d10a745001ad4502cfed2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/querystring_spec.js","hash":"2509bfb7afa61bd354a625a0dcc422b4c309cb20","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/post_data_spec.js","hash":"1a3b274d7d4de744830869e6f38963068b4be086","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/proxy_spec.js","hash":"e6a9da198bedb71dc8f448b54e46a973ce072941","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/redirect_with_timeout.js","hash":"0ad505aebc522d5a6719fd1723fc099ec29e10c5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/redirect_spec.js","hash":"7ab1f8d730f16e127c9738410629d6c05f31eb79","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/request_stream_spec.js","hash":"aec15941c1ebdb3ae2d68a94023b4b02f61dd8cf","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/response_stream_spec.js","hash":"67f4cc227720c9d8595b65a0698e7964adb3e258","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/bin/node-pre-gyp","hash":"e54ad6889531772ef309097f7e4d4cf9c30a997b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/socket_pool_spec.js","hash":"3e6a30cf93a22af4ff2025a14af97487ebc0ead5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/url_spec.js","hash":"79a787404b75128c0239941b9460ceb713e40917","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/bin/node-pre-gyp.cmd","hash":"b12c5e56438c650e4062bea15e6d00a07435b4ca","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/build.js","hash":"0fc6af1ddcc9d02c0ad6d513b332471802c2bbf9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/clean.js","hash":"7ea10f618e90c348fe756187294be717dca4d083","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/configure.js","hash":"51f9ea1f55ab318ff804b87fd1e7db0ed0368167","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/info.js","hash":"5d625595e04cf4547122def865fa775c0dd646ba","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/install.js","hash":"8f547d019e44709ff5cca7e8669c53c8f97a9ba4","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/package.js","hash":"f26e04e38406cd2b3c997438dd9e1fde5bd648bd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/node-pre-gyp.js","hash":"5751981d111bde32a501d28d0ba785717e538fd1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/pre-binding.js","hash":"e4368c07b38f05612173fdf4e3713b0060a4248e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/publish.js","hash":"e7aed726b6199e772964b0474cd5ecaee7f884b1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/rebuild.js","hash":"8301fb88d12fc88eb9fcb9a32edeb7092f8bad93","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/reinstall.js","hash":"abeaaa0a77abfac9ddf1be5f16cac0de999ad516","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/reveal.js","hash":"336a59c717a3b32ceb37313d966897e1c2f2bcd4","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/testbinary.js","hash":"929f3164d2160515a0171bed6f439b3ca5f07c2c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/testpackage.js","hash":"ab198c714f43b0dd8790f6dd75b4380b4ddf581f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/unpublish.js","hash":"f3abd12e3bc32852ffaef89527a9fdcfa7a7eb99","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/lib/utils.js","hash":"82070693c1b17169b02cd365968e3200fc8c512d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/test/ini.js","hash":"aa73cff807f34a5c00d03064a4748e6936163b42","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/test/nested-env-vars.js","hash":"f57143383ea4a217220a88bd66f8b0adb3f2beaa","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/test/test.js","hash":"81b87bc710c4d0b8c0360a247ecb3817d71f3ffb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/_stream_duplex.js","hash":"51384e1f945a0391b0d10aefedae0d9351401c01","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/_stream_passthrough.js","hash":"bbe17aece81ead7c39ec8d65f0cf6f146284aa2c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/_stream_readable.js","hash":"aa75ac312226562ce96b6b067777f52697d41dec","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/_stream_transform.js","hash":"e453a114a78f8a73aa5eccefa010895deae1f7a1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/_stream_writable.js","hash":"7d77f48864ce8495fb30ab2b7e82727d45114cd6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/sax/lib/sax.js","hash":"dcb93c310c07d19e54b2d83ed235b25f3258bdbb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/semver/bin/semver","hash":"a533af52a4f3f84a6dfcbb95852a6b056f3de930","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/buffer.js","hash":"abfca22028ece409b58bdfed168aa420fc47544b","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/extract.js","hash":"58b4aeefc05ac271844c22ac474aeaf1544efbbd","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/create.js","hash":"0f2d593dc359b62a513f1d5b448c39435f30937c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/header.js","hash":"f1d106db97bb4bf9912b1ad6a373ea6709830178","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/high-level-opt.js","hash":"3d7cf2adf41b3b14b4d9713bd9f8f535e5c4dee3","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/large-numbers.js","hash":"c2104d1a15cc4a9ea0bb4d4b3bb10cf1d20bca58","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/list.js","hash":"40d17a892221b13f489d3aff53450380d0e05460","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/mkdir.js","hash":"63315ae6f5692ce482bc626f7991146992474f8f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/pack.js","hash":"7b1abb6828dde517d2126af81a19127032f4ed5f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/read-entry.js","hash":"46eb65a943660f0447ad60969a433399d0607fb6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/replace.js","hash":"f3a1e3b7a2c346747d056512f7909e0d6154096a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/pax.js","hash":"02ca4be22294eab523e3fc30d3356b4738867ff6","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/parse.js","hash":"1c28040e43f5a1aec4c549cac5ad08051db40f2c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/update.js","hash":"6d861384749f59b68b653dfc87a3f73baef3178c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/types.js","hash":"80ac27d296a541947ce91bca052a7cb9317ac545","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/warn-mixin.js","hash":"5f86958eeff21d4b14775ce24c6e6fd231767f58","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/winchars.js","hash":"910fadf590ebd84a7257aca7a1c64089c208c88f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/unpack.js","hash":"36bf4cf3afee49a96befaca31b51b9dbbb9c9465","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/tar/lib/write-entry.js","hash":"ddfa2377257ad7e1c8d0d98bae3132e499679d6f","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/string_decoder/lib/string_decoder.js","hash":"440bd1828612d1e583e33a4ec304673a11c782af","modified":499162500000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks-slim.js.map","hash":"2ceca14d611cf047dbad2777bcb2e1268fe68496","modified":1541740418000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/js/app.js","hash":"d577db184481af07c045c31f12a57ee67ef2a35e","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/js/extensions.js","hash":"ad2806f6d99301580ba3e99beb390388f8c071d6","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/about.html","hash":"94d98630a64b430190915ee1374fa8c1ddeb34ac","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/base.html","hash":"ed2696b9a9c39b79217dacf5f5ef4c67b2cef26e","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/import-context-set.html","hash":"b6613e16df60603e855b299522d0138984b34b2a","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/item-base.html","hash":"2075ec6ddf72fd73fbd06d8ceb7a97d36154714d","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/index.html","hash":"556fbaeb3118c83ee1703ee9aa0a0cc403d5494b","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/item.html","hash":"efa0e779afd406f2c8ebe19899da9c7580cf44b3","modified":1541740356000},{"_id":"themes/icarus/node_modules/nunjucks/samples/express/views/set.html","hash":"111511efdcfe726191a4a06286b9d7a3c757560b","modified":1541740356000},{"_id":"themes/icarus/node_modules/readable-stream/lib/internal/streams/BufferList.js","hash":"8fd98c787f1764c80b11306d6acfb7d3b35c7d27","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/internal/streams/destroy.js","hash":"d0307824af8519303bdf619abfd31633e68bd6dc","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/internal/streams/stream-browser.js","hash":"0167a0dc72daab83989846563aae870f37549151","modified":499162500000},{"_id":"themes/icarus/node_modules/readable-stream/lib/internal/streams/stream.js","hash":"90b89ec87417d1301e7615a3ba50b04626c2796c","modified":499162500000},{"_id":"themes/icarus/node_modules/source-map/dist/source-map.debug.js","hash":"a26c8de3235c7942b54c8bad310347d54300fd90","modified":1503322374000},{"_id":"themes/icarus/node_modules/source-map/dist/source-map.min.js.map","hash":"28941678b7356d721f17a74c4d0bf945d6bccc04","modified":1503322374000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1542293809000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks.min.js.map","hash":"f031dd0230bb752593437b8a3bb6d910ce9b27b3","modified":1541740420000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v46-darwin-x64/fse.node","hash":"83954ee3dd70f01a7415fbd279f40bec31ab3191","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v47-darwin-x64/fse.node","hash":"c2a3c4a23fe51fd2a085b48f84671ee672ab6af2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v48-darwin-x64/fse.node","hash":"92782dba348d699bb5069449d55ff2a695e16053","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v64-darwin-x64/fse.node","hash":"ae3b1b65594fb0f3bc6daa973a4af3417044c054","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/big5-added.json","hash":"e61b2d77a36bce976f563f659300e06a33c9e6e9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/cp949.json","hash":"a3a6e6f61a78b50e54947f11ce8daebb8756209d","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/gb18030-ranges.json","hash":"bfce88fc92e98c19910fbef1b02b85fb5d2cf2f9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/shiftjis.json","hash":"e02d26e47a7b295222c3ca70015024ca163e7381","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/eucjp.json","hash":"9beb6afa39229a044fd6935a92ca5e997f6fac78","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/gbk-added.json","hash":"918eecca2f76db2aa3fe0bf8634816584bf31d78","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/utils/formidable.js","hash":"ed046ce893319ec187be9fe03f3deeb4fc043211","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/utils/test.js","hash":"62a71e477c5dbfed7f1551b641f2a36bc0fc4be2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/needle/test/utils/proxy.js","hash":"0506ff0927e0672f6091eea181950722f4ea101c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/abi_crosswalk.json","hash":"7f03497595528f412a5396e9b94b3843806396af","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/compile.js","hash":"7088bb5462fb2cc4ad9b026f879bb288414e0537","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/handle_gyp_opts.js","hash":"9f97d6e047c04bc85a316970df84de9275eea2b1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/napi.js","hash":"1ada5e1d3d03df7152aa4c532559409e5905e5e5","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/.travis.yml","hash":"6f47845eac101b08d34b0cfb4cb6d0614b69b4b2","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/s3_setup.js","hash":"967f7f5dae61a38a86c3c7a4ffebb7df13eb1740","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/versioning.js","hash":"78ded016133efabf286f5d9386132b08e87343bb","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/package.json","hash":"303c6efadf2ebe4e3d6f64f4ab361812880d1a0f","modified":1542352891000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/index.js","hash":"cfede1ccd2ee41f74022c002b5c6d05e65c482c0","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/readme.markdown","hash":"067b8f01bd1fcf09a6418e3db4b323c8eb9ad479","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md","hash":"1fafe6e2e28a4404db90ae6dc867199b74468ca4","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/.deps/Release/.node.d","hash":"aaf732bfac51c8ed1a5d8e3e41cbd03a32456b09","modified":1542352894000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/.deps/Release/fse.node.d","hash":"f78a642919c9cdde456f9e6e3751a87661d92c71","modified":1542352896000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/node_modules/isobject/index.js","hash":"8da9927ffb038a7aa79044b181f555522f52e102","modified":1461618070000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/node_modules/isobject/LICENSE","hash":"3693ecd333cf832d150571c8cf7448da1434c8a6","modified":1429583250000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/node_modules/isobject/README.md","hash":"0a45cf971072445d3a2ca2d52920e6e668c015eb","modified":1461618236000},{"_id":"themes/icarus/node_modules/unset-value/node_modules/has-value/node_modules/isobject/package.json","hash":"94e1235d90e786da9c73862fea9b9adff94eb763","modified":1542352891000},{"_id":"themes/icarus/source/css/images/profile_pic.jpg","hash":"dec900407c9f26db3e7475823e4f65d8bf3c19f2","modified":1542293809000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v11-darwin-x64/fse.node","hash":"1ae7d5fa4856e753e326461d187aa5ec784dc500","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v57-darwin-x64/fse.node","hash":"ad255ff51bdf826d39c93cae0423a55a4f9d9c76","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/lib/binding/Release/node-v67-darwin-x64/fse.node","hash":"8677586c896156413ac3b1b658d4350affce7f76","modified":1542352896000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/cp950.json","hash":"33ad3790a0660cd2b7c0c599a7f5d3c147596bec","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/iconv-lite/encodings/tables/cp936.json","hash":"22b95ce3e9743dc8df815b8a6b9c13d1a9f7c229","modified":499162500000},{"_id":"themes/icarus/node_modules/nunjucks/browser/nunjucks.js.map","hash":"706a5c2fa8a433c85b51951debcb96968afb7810","modified":1541740417000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/nw-pre-gyp/index.html","hash":"a98470c7571d877e59dab48204848ea87b2f0d8a","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/node-pre-gyp/lib/util/nw-pre-gyp/package.json","hash":"3a785cd04b35cc9a5fb36ad1a97561e7d3c3cf53","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/example/parse.js","hash":"7684d952ceaa32a8c9e3cd21ba26a62e7ee14387","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/all_bool.js","hash":"d5f1721995050d6d9de35c56222e578d6a2a8b5e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/bool.js","hash":"a0ef26a085e4d5530ea59880049cf7aeeaf9bead","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/dash.js","hash":"0fe20783b683b525cb3ff6872474ac6fd89a8b63","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/default_bool.js","hash":"71da47b49e90b77c88caccb077c1bcfb555399f1","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/dotted.js","hash":"edbda6ea34cff9e7dc3fe1953b72eca2f955cda9","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/kv_short.js","hash":"e87208f3f2695b7de0c27e234bc4810cd6d49b8e","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/num.js","hash":"6a52983a855113284f2aa9633876c1adf3710463","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/long.js","hash":"f0ccd5d55358f78efbc928753264e4a32f7724fc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/short.js","hash":"2ce00fdfe4906fc504286974c143c4ced6a11b12","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/parse.js","hash":"a9672d89e1623b05aed85a4b4afcfec7fbaa359c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/stop_early.js","hash":"dc728f383a53ce9e44c9c1c21360bb7ad71d6205","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/whitespace.js","hash":"ea3a87137fa34c00a7d84a4d0350770e8d85ed9c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/parse_modified.js","hash":"310215056f588e8c04e92f0cf6337ca28a8e0d78","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/internal/streams/BufferList.js","hash":"8fd98c787f1764c80b11306d6acfb7d3b35c7d27","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/rc/node_modules/minimist/test/unknown.js","hash":"b55d1e1d6ff269730e4578a108f4c340e70da262","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/internal/streams/destroy.js","hash":"d0307824af8519303bdf619abfd31633e68bd6dc","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/internal/streams/stream-browser.js","hash":"0167a0dc72daab83989846563aae870f37549151","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/node_modules/readable-stream/lib/internal/streams/stream.js","hash":"90b89ec87417d1301e7615a3ba50b04626c2796c","modified":499162500000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/.deps/Release/obj.target/action_after_build.stamp.d","hash":"356c1293aaedfb2ee7509b5bee8160ab5d6be0f8","modified":1542352897000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1542293809000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/.deps/Release/obj.target/fse/fsevents.o.d","hash":"ccae229d13d232fae18b50edc6b3b024fb5f6410","modified":1542352896000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/obj.target/fse/fsevents.o","hash":"b4fe0271ce265ddf3141ba7a6fd26a257a7d5561","modified":1542352896000},{"_id":"themes/icarus/node_modules/fsevents/build/Release/.deps/Users/yangzuo/Blog/hexo_blog_icarus/themes/icarus/node_modules/fsevents/lib/binding/Release/node-v67-darwin-x64/fse.node.d","hash":"337e40e8e5df9dd4a55b5e3e66ff1f7becd3e440","modified":1542352897000},{"_id":"public/content.json","hash":"b246fdc2251bdfe215cf6c07dbce45984f0e5dba","modified":1542960405316},{"_id":"public/about/index.html","hash":"b2067e73dd271c7b35f1c34f67b7f38d02ca2832","modified":1542960406008},{"_id":"public/categories/index.html","hash":"ab158274501fe852af8eb1c1a3353bebb98c5d58","modified":1542960406008},{"_id":"public/tags/index.html","hash":"9f13fe46943497a3b10a22a9877f361ab4fcf920","modified":1542960406008},{"_id":"public/post/f249b7a1.html","hash":"6383f85835877d215e05bef11e83e7c91e222e96","modified":1542960406008},{"_id":"public/post/a10d34fe.html","hash":"71b4ff6ac343ca40b9e9b7bc81b3b95ff260c548","modified":1542960406008},{"_id":"public/post/2c2d1f13.html","hash":"b3ad9f83e7bb1c1e5dbf0a36e9ab6adea32e7fd4","modified":1542960406008},{"_id":"public/post/f4467b0e.html","hash":"85eeed62363b0f2617a4e088805318500ad7c249","modified":1542960406008},{"_id":"public/post/20d2cb13.html","hash":"de722918aba7e2e4787e23cfae5d2a1ff0decbba","modified":1542960406008},{"_id":"public/post/8a5e7d39.html","hash":"21fca7dad22f84158d92cf61220f0f04a0956c58","modified":1542960406008},{"_id":"public/post/c94099d8.html","hash":"936c2213b10bd34164d1b0b3c4fd18b7558dd668","modified":1542960406008},{"_id":"public/post/1d8b65b1.html","hash":"ec48eedd9455f36971caf380487b8352ecb9f7fb","modified":1542960406008},{"_id":"public/post/61984fa2.html","hash":"61eba390a64ac0daaf9649f8117a339b85611e28","modified":1542960406008},{"_id":"public/post/5c1c4dd0.html","hash":"c9171e0f8684128eb8c829ea31bc1c0bc67c11c6","modified":1542960406008},{"_id":"public/post/ed8e0613.html","hash":"c278c86a6068a79105fadc9a06272e4c819c78cf","modified":1542960406008},{"_id":"public/post/50445eba.html","hash":"3db781e1c5aa4e79f3ec93b7e0b37f0212387429","modified":1542960406008},{"_id":"public/post/f055ffc7.html","hash":"3b28c732178190d62c0ca5d92a628dd45b234387","modified":1542960406008},{"_id":"public/categories/leetcode/page/3/index.html","hash":"0a8b4ebac3624f9c34ed620f9b148f0df211e339","modified":1542960406008},{"_id":"public/categories/ceph/index.html","hash":"7ab1d999380462fc0bb8d5965141e97ad6cd6e51","modified":1542960406008},{"_id":"public/tags/C/page/3/index.html","hash":"d190083e7d08e8769ee455bd7446d614a6d6905f","modified":1542960406008},{"_id":"public/tags/List/index.html","hash":"8707eb144f8bb942edfcc3398e2f1f4272f411cc","modified":1542960406009},{"_id":"public/tags/DFS/index.html","hash":"e1bd8a611d1a945355d138b3b369608127a59a9e","modified":1542960406009},{"_id":"public/tags/BST/index.html","hash":"8fed870048f3f4f28310ae6e245986cc062acf89","modified":1542960406009},{"_id":"public/tags/String/index.html","hash":"9298eb3529c9961ae6c6f5c2302647a0dcf94748","modified":1542960406009},{"_id":"public/tags/Stack/index.html","hash":"f54d89b47661e09e1cf265d165304fdd96f6a91e","modified":1542960406009},{"_id":"public/tags/ceph/index.html","hash":"87b32f00904d16f1e432758ea6525c980b0f0d51","modified":1542960406009},{"_id":"public/tags/virtualBox/index.html","hash":"bdba77491a34e52891eae38304ce772b5debf021","modified":1542960406009},{"_id":"public/tags/cephfs/index.html","hash":"bda1b568890325bad5fa126e6cf1db2bb7cf2862","modified":1542960406009},{"_id":"public/tags/ceph-mon/index.html","hash":"fb75048637b3a8b5f66297bf79e92fdbc7175a94","modified":1542960406009},{"_id":"public/tags/ceph-osd/index.html","hash":"41e40262086cbb39e9ecd8a5c76c2a885f88c3db","modified":1542960406009},{"_id":"public/tags/ceph-mgr/index.html","hash":"11b9b08f942da035617e97f0eb41c9cafeeb204d","modified":1542960406009},{"_id":"public/post/4a310db5.html","hash":"37e4f00ea02018c778537bea6f98f46f78241e1c","modified":1542960406009},{"_id":"public/post/28a4bfb3.html","hash":"88b671678e48e63bf6ee4f340869830f17b61e3d","modified":1542960406009},{"_id":"public/post/ad293d8.html","hash":"05ab7c6e79edf3fab13b306f5b69fd1b38adc23e","modified":1542960406009},{"_id":"public/post/3a6a8a8c.html","hash":"b58f407b04ab5787c8a77d405a16d4a683b40e5c","modified":1542960406009},{"_id":"public/post/8adb33dd.html","hash":"7043f39a11383f5f94b5561076c5aa21f3b25527","modified":1542960406009},{"_id":"public/post/a971a08f.html","hash":"12645671c50d59cb8b184a3793de38bf007246cf","modified":1542960406009},{"_id":"public/post/d13d2726.html","hash":"68b6a0bf17bc15ef2b5ed20f18c04db4d2607c93","modified":1542960406009},{"_id":"public/post/42870ae4.html","hash":"eb6283416b3b534c10d27669796a5b507af27716","modified":1542960406009},{"_id":"public/post/b216f26b.html","hash":"26af08c250549240ccbc5b6b83226ac8b17d03e1","modified":1542960406009},{"_id":"public/post/74d7ef89.html","hash":"fe2fbfc56e6be87d45dff91dd69f2c03bb700ab4","modified":1542960406009},{"_id":"public/post/cc6b88ec.html","hash":"de920dc5551e1d97de560534d2a0730095fca2f8","modified":1542960406009},{"_id":"public/post/c85f0a37.html","hash":"f8c94369cea0f74a371064dc6253a8b415089da6","modified":1542960406009},{"_id":"public/post/51bcb055.html","hash":"8989c9a1f5a7e7252220ab2777c895a9df6ed394","modified":1542960406009},{"_id":"public/post/cf94e2fe.html","hash":"541f8e42bd33c6f67b848b74103322e6b03a4101","modified":1542960406009},{"_id":"public/post/cc03a9fe.html","hash":"8bba41af14abf1fc5ead2817a0b427662084fffa","modified":1542960406010},{"_id":"public/archives/index.html","hash":"f0d7e2e8ecc6fa6f61e8436f14634e094d1ba940","modified":1542960406010},{"_id":"public/archives/page/2/index.html","hash":"5b0eb8bd133132292a8c0ae9dd96e8e4e0f431ba","modified":1542960406010},{"_id":"public/archives/page/3/index.html","hash":"e7cbd6ff637a6947d0765b362300be0fb3252112","modified":1542960406010},{"_id":"public/archives/2018/index.html","hash":"baa13be78fc3438c4e96f812911353bf4a4f8aa3","modified":1542960406010},{"_id":"public/archives/2018/page/2/index.html","hash":"dc09833b7917cd5cc92009c16e08f5f85841f480","modified":1542960406010},{"_id":"public/archives/2018/page/3/index.html","hash":"6cde6d580b85c9389d48c42eb5fcbe3a4525ce70","modified":1542960406010},{"_id":"public/archives/2018/11/index.html","hash":"27e031feee7324924687e7a91593bd300f16585d","modified":1542960406010},{"_id":"public/archives/2018/11/page/2/index.html","hash":"369d3049a09a0a553abefc8f3edf38145a5f612f","modified":1542960406010},{"_id":"public/archives/2018/11/page/3/index.html","hash":"a29f04707ed1bf49c7b3efe7881f66c403a18f7f","modified":1542960406010},{"_id":"public/categories/leetcode/index.html","hash":"ef5deaf905382cf025131206c873c81b748e3f85","modified":1542960406010},{"_id":"public/categories/leetcode/page/2/index.html","hash":"d0b80520beb8f1e27546c3871a1f49f90df08c01","modified":1542960406010},{"_id":"public/index.html","hash":"a42c871b468ffc88a5b69d89d5ceac1a3d340cc3","modified":1542960406010},{"_id":"public/page/2/index.html","hash":"c1943c4766622d86429ccc9762f650d2b23d08f2","modified":1542960406010},{"_id":"public/page/3/index.html","hash":"37e59b8eaa78a7aafcc90af7a7ee9858b7e22934","modified":1542960406010},{"_id":"public/tags/C/index.html","hash":"d035974ea7eddad498dd5ac7c04eda52e499a4ee","modified":1542960406010},{"_id":"public/tags/C/page/2/index.html","hash":"80f5b9d3220e40792cc8d4a472591476d8b90384","modified":1542960406010},{"_id":"public/tags/Binary-Tree/index.html","hash":"501a122b8b9c519d8f176e76253eee98a07bc953","modified":1542960406010},{"_id":"public/CNAME","hash":"3476d63984d6f43a96cd9834ed9fb4948ed6c85c","modified":1542960406022},{"_id":"public/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1542960406022},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1542960406022},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1542960406022},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1542960406022},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1542960406022},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1542960406022},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1542960406022},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1542960406022},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1542960406022},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1542960406022},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1542960406022},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1542960406022},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1542960406022},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1542960406022},{"_id":"public/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1542960406022},{"_id":"public/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1542960406023},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1542960406023},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1542960406023},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1542960406023},{"_id":"public/post/4a310db5/ceph_archite.jpg","hash":"ef997e56893323597bfa81ca2d89423f6e69cf31","modified":1542960406023},{"_id":"public/post/4a310db5/cephfs.jpg","hash":"c1c94bb62396b3c8e6af7025bc3189753c891ef6","modified":1542960406023},{"_id":"public/post/3a6a8a8c/ceph_rbd2.png","hash":"28aee4ef17dcdda01a234153dcd590f6729227c8","modified":1542960406023},{"_id":"public/css/images/whale.png","hash":"5e59a7b7bed8480212a40ee5b0723cbfe9f27c52","modified":1542960406483},{"_id":"public/css/images/favicon.ico","hash":"72e198149b2809bc8af629da284399985e9023ec","modified":1542960406483},{"_id":"public/css/images/horse.jpg","hash":"abe614ab9e08706a84523518ceabb36a3792302c","modified":1542960406484},{"_id":"public/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1542960406484},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1542960406484},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1542960406484},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1542960406485},{"_id":"public/post/3a6a8a8c/disk.jpg","hash":"ec99db9285be65b74f461ff715974195b44ec33e","modified":1542960406485},{"_id":"public/post/ad293d8/adapter1.jpg","hash":"b837373024e7186203825813f774e3de88f9ce17","modified":1542960406485},{"_id":"public/post/ad293d8/adapter2.jpg","hash":"ddb8749d0fbcff1b5649b55ce84ac342e6a95c68","modified":1542960406485},{"_id":"public/post/ad293d8/memory.jpg","hash":"b9a908d6ef7e81306d4c8962e77a741178804f99","modified":1542960406485},{"_id":"public/post/ad293d8/network.jpg","hash":"1db86deef8de46469497157d3625006aadbbcb23","modified":1542960406485},{"_id":"public/post/ad293d8/new.jpg","hash":"33afd03fe62aa6be1930a7270613e7872dea0316","modified":1542960406485},{"_id":"public/post/ad293d8/virtual_disk.jpg","hash":"3b56e5ce8d093c1a1f3c483547e912e7de2e5970","modified":1542960406485},{"_id":"public/js/main.js","hash":"1faffdc7aa7f0d28e85edbf49c99de3ad0b65753","modified":1542960406493},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1542960406493},{"_id":"public/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1542960406494},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1542960406494},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1542960406494},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1542960406494},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1542960406494},{"_id":"public/css/style.css","hash":"ef03f0085014d59e8482c1a767bb073fa5601316","modified":1542960406494},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1542960406494},{"_id":"public/post/ad293d8/disk_size.jpg","hash":"d61241fc467f78aca7afa6a1a324d104f76a36bc","modified":1542960406494},{"_id":"public/post/ad293d8/ip.jpg","hash":"5e07c7b54c3bd661fd6de6f32a164326ebec38f0","modified":1542960406494},{"_id":"public/post/ad293d8/newvhd.jpg","hash":"97b8ee99d743946ba36b568bd606b0ea4b73ae31","modified":1542960406495},{"_id":"public/post/ad293d8/newvhd2.jpg","hash":"0045d0a644df22309a7a4ba7d74dfad1bdbdd1c5","modified":1542960406495},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1542960406504},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1542960406504},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1542960406505},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1542960406505},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1542960406505},{"_id":"public/post/ad293d8/user.jpg","hash":"62d4517bc8e0ac7474c735c53f84795788c7c32d","modified":1542960406505},{"_id":"public/post/3a6a8a8c/ceph_file.jpg","hash":"9d7e532d14b054c474adae53faae371517c52ea0","modified":1542960406505},{"_id":"public/post/ad293d8/addios.jpg","hash":"e738c0f38848485940813b9e6311a964410d36a8","modified":1542960406505},{"_id":"public/post/ad293d8/disk.jpg","hash":"aad472a8adc8c3f8dac1fafdba119586f9fba439","modified":1542960406505},{"_id":"public/post/ad293d8/dynamic.jpg","hash":"2ec7251411215a2c7719c861050d59bdc11b3407","modified":1542960406505},{"_id":"public/post/ad293d8/finish.jpg","hash":"df393a095d92612cd392a07d37ca558fc6b365ae","modified":1542960406505},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1542960406514},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1542960406514},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1542960406514},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1542960406514},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1542960406514},{"_id":"public/post/ad293d8/ping.jpg","hash":"257e795c596dbfba3b3858f351117da4903d42bb","modified":1542960406514},{"_id":"public/post/ad293d8/install_os1.jpg","hash":"8caaac027d3d2e88846bd884ab1e2da0476bce91","modified":1542960406514},{"_id":"public/post/3a6a8a8c/rados.jpg","hash":"cfb049856a2bffce6876fa0c567071a5b974f754","modified":1542960406515},{"_id":"public/post/ad293d8/clone2.jpg","hash":"92fb63a55f377c4c99c6593b164d541e2aec372c","modified":1542960406515},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1542960406529},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1542960406529},{"_id":"public/post/3a6a8a8c/ceph_object.jpg","hash":"5a87a84e397f3fa37a6d21eaea10fa1b7b8e4bf3","modified":1542960406531},{"_id":"public/post/3a6a8a8c/ceph-architectural.png","hash":"33e78c6fd69cd486205b261ad9b3fb8d4eeecdf4","modified":1542960406531},{"_id":"public/post/ad293d8/install_os3.jpg","hash":"dfd2efea25d4b2f9c326982117fa9bbcc9a76139","modified":1542960406531},{"_id":"public/post/3a6a8a8c/ceph_all_component.png","hash":"29385e0cc7c9740f79cceb28e54a5208dfeffbdd","modified":1542960406531},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1542960406539},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1542960406539},{"_id":"public/css/images/profile_pic.jpg","hash":"dec900407c9f26db3e7475823e4f65d8bf3c19f2","modified":1542960406539},{"_id":"public/post/ad293d8/clone3.jpg","hash":"340898a91872632883a1305337d7f937d697030f","modified":1542960406539},{"_id":"public/post/28a4bfb3/disk_part.jpg","hash":"335cd6b4b9c7ebf1d50456ab12ca67052c2d62cc","modified":1542960406539},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1542960406548},{"_id":"public/post/ad293d8/user_set.jpg","hash":"8366aec980ef2933c2d2e1dd75307e55f6452aeb","modified":1542960406548},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1542960406554},{"_id":"public/post/ad293d8/install_os2.jpg","hash":"eb195b053fb41016d4b5b6b5b04ea8f6ab194761","modified":1542960406555},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1542960406557},{"_id":"public/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1542960406572},{"_id":"public/post/ad293d8/virtualBox.jpg","hash":"d7174ed5786307d6729c326b840843c400947425","modified":1542960406572}],"Category":[{"name":"leetcode","_id":"cjotqsaoq0004gvygfps7n3lo"},{"name":"ceph","_id":"cjotqsarp0034gvygibp2itwo"}],"Data":[],"Page":[{"layout":"page","_content":"\nhi,大家好！欢迎大家来到我的blog，希望以后能跟各位大佬一起学习进步。\n\n我叫左杨，目前就职于蚂蚁金服人工智能部，从事于蚂蚁人工智能相关的开发工作，对Machine Learning，Deep Learning比较感兴趣。\n","source":"about/index.md","raw":"layout: \"page\"\n---\n\nhi,大家好！欢迎大家来到我的blog，希望以后能跟各位大佬一起学习进步。\n\n我叫左杨，目前就职于蚂蚁金服人工智能部，从事于蚂蚁人工智能相关的开发工作，对Machine Learning，Deep Learning比较感兴趣。\n","date":"2018-11-15T14:56:49.000Z","updated":"2018-11-15T14:56:49.000Z","path":"about/index.html","title":"","comments":1,"_id":"cjotqsaon0001gvyglmilp0yq","content":"<p>hi,大家好！欢迎大家来到我的blog，希望以后能跟各位大佬一起学习进步。</p>\n<p>我叫左杨，目前就职于蚂蚁金服人工智能部，从事于蚂蚁人工智能相关的开发工作，对Machine Learning，Deep Learning比较感兴趣。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>hi,大家好！欢迎大家来到我的blog，希望以后能跟各位大佬一起学习进步。</p>\n<p>我叫左杨，目前就职于蚂蚁金服人工智能部，从事于蚂蚁人工智能相关的开发工作，对Machine Learning，Deep Learning比较感兴趣。</p>\n"},{"title":"Categories","layout":"categories","_content":"","source":"categories/index.md","raw":"title: \"Categories\"\nlayout: \"categories\"\n---\n","date":"2018-11-15T14:56:49.000Z","updated":"2018-11-15T14:56:49.000Z","path":"categories/index.html","comments":1,"_id":"cjotqsaop0003gvyg92f1v9ss","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"title: \"Tags\"\nlayout: \"tags\"\n---\n","date":"2018-11-15T14:56:49.000Z","updated":"2018-11-15T14:56:49.000Z","path":"tags/index.html","comments":1,"_id":"cjotqsarm0032gvygjapd7ew3","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2Sum","comments":1,"abbrlink":"74d7ef89","date":"2018-11-15T15:50:54.000Z","_content":"\n**问题描述：**\n\nGiven an array of integers, find two numbers such that they add up to a specific target number.\n\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.\n\nYou may assume that each input would have exactly one solution.\n\nInput: numbers={2, 7, 11, 15}, target=9\nOutput: index1=1, index2=2\n\n**解决思路：**\n\n本题主要是在给定的一个数组中找到两个数的下标，使得这个两个数和为给定的值，要求给出的下标从1 开始，且满足递增顺序，有三种解决方法，复杂度分别为O(n^2),O(nlogn),O(n),具体实现如下：\n\n\n\n**复杂度为O(n^2) 代码：**\n\n```C++\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int> &numbers, int target) {\n        // Start typing your C/C++ solution below\n        // DO NOT write int main() function\n        vector<int> ret(2, 0);\n        \n        int len = numbers.size();\n        \n        for(int i = 0; i < len; i++)\n        {\n            int tmp = target - numbers[i];      // another number\n            for(int j = i + 1; j < len; j++)\n            {\n                if(tmp == numbers[j])\n                {\n                    ret[0] = i + 1;     // +1 for not zero-based\n                    ret[1] = j + 1;\n                    return ret;\n                }\n            }\n        }\n        \n        return ret;\n    }\n};\n```\n\n\n\n**复杂度O(nlogn)代码:**\n\n```C++\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int> &numbers, int target) {\n        vector<int> index;\n        int len = numbers.size();\n        vector<int> bak = numbers;\n        \n            \n        sort(bak.begin(),bak.end());\n        \n        int l = 0,r = len-1;\n        int sum = 0;\n        while(l < r){\n            sum = bak[l]+bak[r];\n            if(sum == target)\n            {\n                for(int i = 0; i < len;i++)\n                {\n                    if (bak[l] == numbers[i])\n                    {\n                        index.push_back(i+1);\n                    }\n                    else if(bak[r] == numbers[i])\n                    {\n                        index.push_back(i+1);\n                    }\n                    if(index.size() == 2)\n                    {\n                        break;\n                    }\n                }\n                break;\n                \n            }\n            else if(sum < target)\n            {\n                ++l;\n            }\n            else\n            {\n                --r;\n            }\n            \n        }\n        \n       return index;\n    }\n};\n```\n\n\n\n**复杂度O(n)代码:**\n\n```C++\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int> &numbers, int target) {\n        int len = numbers.size();  \n        assert(len >= 2);             \n          \n        vector<int> ret(2, 0);  \n          \n        map<int, int> mapping;              // default all are 0  \n        vector<long long> mul(len, 0);  \n          \n        for(int i = 0; i < len; i++){  \n            mul[i] = (target - numbers[i]) * numbers[i];  \n              \n            if(mapping[mul[i]] > 0){        // not default 0  \n                if(numbers[i] + numbers[mapping[mul[i]] - 1] == target){  \n                    ret[0] = mapping[mul[i]];  \n                    ret[1] = i + 1;  \n                    break;  \n                }  \n                  \n            } \n            else {  \n                mapping[mul[i]] = i + 1;    // larger than 0  \n            }  \n        }  \n          \n        return ret;\n    }\n};\n```\n\n","source":"_posts/2Sum.md","raw":"---\ntitle: 2Sum\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: 74d7ef89\ndate: 2018-11-15 23:50:54\n---\n\n**问题描述：**\n\nGiven an array of integers, find two numbers such that they add up to a specific target number.\n\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.\n\nYou may assume that each input would have exactly one solution.\n\nInput: numbers={2, 7, 11, 15}, target=9\nOutput: index1=1, index2=2\n\n**解决思路：**\n\n本题主要是在给定的一个数组中找到两个数的下标，使得这个两个数和为给定的值，要求给出的下标从1 开始，且满足递增顺序，有三种解决方法，复杂度分别为O(n^2),O(nlogn),O(n),具体实现如下：\n\n\n\n**复杂度为O(n^2) 代码：**\n\n```C++\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int> &numbers, int target) {\n        // Start typing your C/C++ solution below\n        // DO NOT write int main() function\n        vector<int> ret(2, 0);\n        \n        int len = numbers.size();\n        \n        for(int i = 0; i < len; i++)\n        {\n            int tmp = target - numbers[i];      // another number\n            for(int j = i + 1; j < len; j++)\n            {\n                if(tmp == numbers[j])\n                {\n                    ret[0] = i + 1;     // +1 for not zero-based\n                    ret[1] = j + 1;\n                    return ret;\n                }\n            }\n        }\n        \n        return ret;\n    }\n};\n```\n\n\n\n**复杂度O(nlogn)代码:**\n\n```C++\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int> &numbers, int target) {\n        vector<int> index;\n        int len = numbers.size();\n        vector<int> bak = numbers;\n        \n            \n        sort(bak.begin(),bak.end());\n        \n        int l = 0,r = len-1;\n        int sum = 0;\n        while(l < r){\n            sum = bak[l]+bak[r];\n            if(sum == target)\n            {\n                for(int i = 0; i < len;i++)\n                {\n                    if (bak[l] == numbers[i])\n                    {\n                        index.push_back(i+1);\n                    }\n                    else if(bak[r] == numbers[i])\n                    {\n                        index.push_back(i+1);\n                    }\n                    if(index.size() == 2)\n                    {\n                        break;\n                    }\n                }\n                break;\n                \n            }\n            else if(sum < target)\n            {\n                ++l;\n            }\n            else\n            {\n                --r;\n            }\n            \n        }\n        \n       return index;\n    }\n};\n```\n\n\n\n**复杂度O(n)代码:**\n\n```C++\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int> &numbers, int target) {\n        int len = numbers.size();  \n        assert(len >= 2);             \n          \n        vector<int> ret(2, 0);  \n          \n        map<int, int> mapping;              // default all are 0  \n        vector<long long> mul(len, 0);  \n          \n        for(int i = 0; i < len; i++){  \n            mul[i] = (target - numbers[i]) * numbers[i];  \n              \n            if(mapping[mul[i]] > 0){        // not default 0  \n                if(numbers[i] + numbers[mapping[mul[i]] - 1] == target){  \n                    ret[0] = mapping[mul[i]];  \n                    ret[1] = i + 1;  \n                    break;  \n                }  \n                  \n            } \n            else {  \n                mapping[mul[i]] = i + 1;    // larger than 0  \n            }  \n        }  \n          \n        return ret;\n    }\n};\n```\n\n","slug":"2Sum","published":1,"updated":"2018-11-16T08:53:36.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaoi0000gvygav1qn637","content":"<p><strong>问题描述：</strong></p>\n<p>Given an array of integers, find two numbers such that they add up to a specific target number.</p>\n<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p>\n<p>You may assume that each input would have exactly one solution.</p>\n<p>Input: numbers={2, 7, 11, 15}, target=9<br>\nOutput: index1=1, index2=2</p>\n<p><strong>解决思路：</strong></p>\n<p>本题主要是在给定的一个数组中找到两个数的下标，使得这个两个数和为给定的值，要求给出的下标从1 开始，且满足递增顺序，有三种解决方法，复杂度分别为O(n^2),O(nlogn),O(n),具体实现如下：</p>\n<p><strong>复杂度为O(n^2) 代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; twoSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;numbers, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Start typing your C/C++ solution below</span></span><br><span class=\"line\">        <span class=\"comment\">// DO NOT write int main() function</span></span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; ret(<span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = numbers.size();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp = target - numbers[i];      <span class=\"comment\">// another number</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; len; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tmp == numbers[j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ret[<span class=\"number\">0</span>] = i + <span class=\"number\">1</span>;     <span class=\"comment\">// +1 for not zero-based</span></span><br><span class=\"line\">                    ret[<span class=\"number\">1</span>] = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>复杂度O(nlogn)代码:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; twoSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;numbers, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; index;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = numbers.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; bak = numbers;</span><br><span class=\"line\">        </span><br><span class=\"line\">            </span><br><span class=\"line\">        sort(bak.begin(),bak.end());</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = <span class=\"number\">0</span>,r = len<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l &lt; r)&#123;</span><br><span class=\"line\">            sum = bak[l]+bak[r];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum == target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len;i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (bak[l] == numbers[i])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        index.push_back(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(bak[r] == numbers[i])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        index.push_back(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(index.size() == <span class=\"number\">2</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum &lt; target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ++l;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                --r;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">       <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>复杂度O(n)代码:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; twoSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;numbers, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = numbers.size();  </span><br><span class=\"line\">        assert(len &gt;= <span class=\"number\">2</span>);             </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; ret(<span class=\"number\">2</span>, <span class=\"number\">0</span>);  </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; mapping;              <span class=\"comment\">// default all are 0  </span></span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>&gt; mul(len, <span class=\"number\">0</span>);  </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;  </span><br><span class=\"line\">            mul[i] = (target - numbers[i]) * numbers[i];  </span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mapping[mul[i]] &gt; <span class=\"number\">0</span>)&#123;        <span class=\"comment\">// not default 0  </span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(numbers[i] + numbers[mapping[mul[i]] - <span class=\"number\">1</span>] == target)&#123;  </span><br><span class=\"line\">                    ret[<span class=\"number\">0</span>] = mapping[mul[i]];  </span><br><span class=\"line\">                    ret[<span class=\"number\">1</span>] = i + <span class=\"number\">1</span>;  </span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">                &#125;  </span><br><span class=\"line\">                  </span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">                mapping[mul[i]] = i + <span class=\"number\">1</span>;    <span class=\"comment\">// larger than 0  </span></span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given an array of integers, find two numbers such that they add up to a specific target number.</p>\n<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p>\n<p>You may assume that each input would have exactly one solution.</p>\n<p>Input: numbers={2, 7, 11, 15}, target=9<br>\nOutput: index1=1, index2=2</p>\n<p><strong>解决思路：</strong></p>\n<p>本题主要是在给定的一个数组中找到两个数的下标，使得这个两个数和为给定的值，要求给出的下标从1 开始，且满足递增顺序，有三种解决方法，复杂度分别为O(n^2),O(nlogn),O(n),具体实现如下：</p>\n<p><strong>复杂度为O(n^2) 代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; twoSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;numbers, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Start typing your C/C++ solution below</span></span><br><span class=\"line\">        <span class=\"comment\">// DO NOT write int main() function</span></span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; ret(<span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = numbers.size();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp = target - numbers[i];      <span class=\"comment\">// another number</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; len; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tmp == numbers[j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ret[<span class=\"number\">0</span>] = i + <span class=\"number\">1</span>;     <span class=\"comment\">// +1 for not zero-based</span></span><br><span class=\"line\">                    ret[<span class=\"number\">1</span>] = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>复杂度O(nlogn)代码:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; twoSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;numbers, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; index;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = numbers.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; bak = numbers;</span><br><span class=\"line\">        </span><br><span class=\"line\">            </span><br><span class=\"line\">        sort(bak.begin(),bak.end());</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = <span class=\"number\">0</span>,r = len<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l &lt; r)&#123;</span><br><span class=\"line\">            sum = bak[l]+bak[r];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum == target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len;i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (bak[l] == numbers[i])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        index.push_back(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(bak[r] == numbers[i])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        index.push_back(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(index.size() == <span class=\"number\">2</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum &lt; target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ++l;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                --r;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">       <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>复杂度O(n)代码:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; twoSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;numbers, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = numbers.size();  </span><br><span class=\"line\">        assert(len &gt;= <span class=\"number\">2</span>);             </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; ret(<span class=\"number\">2</span>, <span class=\"number\">0</span>);  </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; mapping;              <span class=\"comment\">// default all are 0  </span></span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>&gt; mul(len, <span class=\"number\">0</span>);  </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;  </span><br><span class=\"line\">            mul[i] = (target - numbers[i]) * numbers[i];  </span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mapping[mul[i]] &gt; <span class=\"number\">0</span>)&#123;        <span class=\"comment\">// not default 0  </span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(numbers[i] + numbers[mapping[mul[i]] - <span class=\"number\">1</span>] == target)&#123;  </span><br><span class=\"line\">                    ret[<span class=\"number\">0</span>] = mapping[mul[i]];  </span><br><span class=\"line\">                    ret[<span class=\"number\">1</span>] = i + <span class=\"number\">1</span>;  </span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">                &#125;  </span><br><span class=\"line\">                  </span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">                mapping[mul[i]] = i + <span class=\"number\">1</span>;    <span class=\"comment\">// larger than 0  </span></span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">          </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"3Sum Closest","comments":1,"abbrlink":"c85f0a37","date":"2018-11-15T15:44:35.000Z","_content":"\n**问题描述：**\n\nGiven an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\n\n For example, given array S = {-1 2 1 -4}, and target = 1.\n\n The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\n**解决思路：**\n\n我们可以在 2sum问题 的基础上来解决3sum问题，假设3sum问题的目标是target。每次从数组中选出一个数k，从剩下的数中求目标等于target-k的2sum问题。这里需要注意的是有个小的trick：当我们从数组中选出第i数时，我们只需要求数值中从第i+1个到最后一个范围内字数组的2sum问题。\n我们以选第一个和第二个举例，假设数组为A[],总共有n个元素A1，A2....An。很显然，当选出A1时，我们在子数组[A2~An]中求目标位target-A1的2sum问题，我们要证明的是当选出A2时，我们只需要在子数组[A3~An]中计算目标位target-A2的2sum问题，而不是在子数组[A1,A3~An]中，证明如下：\n假设在子数组[A1,A3~An]目标位target-A2的2sum问题中，存在A1 + m = target-A2（m为A3~An中的某个数），即A2 + m = target-A1，这刚好是“对于子数组[A3~An],目标位target-A1的2sum问题”的一个解。即我们相当于对满足3sum的三个数A1+A2+m = target重复计算了。因此为了避免重复计算，在子数组[A1，A3~An]中，可以把A1去掉，再来计算目标是target-A2的2sum问题。\n\n对于本题要求的求最接近解，只需要保存当前解以及当前解和目标的距离，如果新的解更接近，则更新解。算法复杂度为O（n^2）;\n注意：我们这里是求的和是一个非确定性的数，因此2sum问题的hashtable解法就不适合这里了\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int threeSumClosest(vector<int> &num, int target) {\n        int n = num.size();\n        sort(num.begin(),num.end());\n        int res,dis=INT_MAX;\n        for(int i = 0;i<n-2;i++)\n        {\n            int target2 = target - num[i];\n            int tmpdis;\n            int tmpres = twoSumClosest(num,i+1,target2);\n            if((tmpdis = abs(tmpres-target2)) < dis)\n            {\n                res = tmpres + num[i];\n                dis = tmpdis;\n                if(res == target)\n                    return res;\n            }\n        }\n        return res;\n    }\n    \n    int twoSumClosest(vector<int> &sortnum,int start,int target){\n        int res,dis=INT_MAX;\n        int l = start,r = sortnum.size()-1;\n        while(l<r)\n        {\n            int sum = sortnum[l]+sortnum[r];\n            if(sum < target)\n            {\n                if(target-sum < dis)\n                {\n                    res = sum;\n                    dis = target - sum;\n                }\n                ++l;\n            }\n            else if(sum > target)\n            {\n                if(sum - target < dis)\n                {\n                    res = sum;\n                    dis = sum - target;\n                }\n                --r;\n            }\n            else\n                return target;\n        }\n        return res;\n    }\n};\n```\n\n","source":"_posts/3Sum-Closest.md","raw":"---\ntitle: 3Sum Closest\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: c85f0a37\ndate: 2018-11-15 23:44:35\n---\n\n**问题描述：**\n\nGiven an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\n\n For example, given array S = {-1 2 1 -4}, and target = 1.\n\n The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\n**解决思路：**\n\n我们可以在 2sum问题 的基础上来解决3sum问题，假设3sum问题的目标是target。每次从数组中选出一个数k，从剩下的数中求目标等于target-k的2sum问题。这里需要注意的是有个小的trick：当我们从数组中选出第i数时，我们只需要求数值中从第i+1个到最后一个范围内字数组的2sum问题。\n我们以选第一个和第二个举例，假设数组为A[],总共有n个元素A1，A2....An。很显然，当选出A1时，我们在子数组[A2~An]中求目标位target-A1的2sum问题，我们要证明的是当选出A2时，我们只需要在子数组[A3~An]中计算目标位target-A2的2sum问题，而不是在子数组[A1,A3~An]中，证明如下：\n假设在子数组[A1,A3~An]目标位target-A2的2sum问题中，存在A1 + m = target-A2（m为A3~An中的某个数），即A2 + m = target-A1，这刚好是“对于子数组[A3~An],目标位target-A1的2sum问题”的一个解。即我们相当于对满足3sum的三个数A1+A2+m = target重复计算了。因此为了避免重复计算，在子数组[A1，A3~An]中，可以把A1去掉，再来计算目标是target-A2的2sum问题。\n\n对于本题要求的求最接近解，只需要保存当前解以及当前解和目标的距离，如果新的解更接近，则更新解。算法复杂度为O（n^2）;\n注意：我们这里是求的和是一个非确定性的数，因此2sum问题的hashtable解法就不适合这里了\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int threeSumClosest(vector<int> &num, int target) {\n        int n = num.size();\n        sort(num.begin(),num.end());\n        int res,dis=INT_MAX;\n        for(int i = 0;i<n-2;i++)\n        {\n            int target2 = target - num[i];\n            int tmpdis;\n            int tmpres = twoSumClosest(num,i+1,target2);\n            if((tmpdis = abs(tmpres-target2)) < dis)\n            {\n                res = tmpres + num[i];\n                dis = tmpdis;\n                if(res == target)\n                    return res;\n            }\n        }\n        return res;\n    }\n    \n    int twoSumClosest(vector<int> &sortnum,int start,int target){\n        int res,dis=INT_MAX;\n        int l = start,r = sortnum.size()-1;\n        while(l<r)\n        {\n            int sum = sortnum[l]+sortnum[r];\n            if(sum < target)\n            {\n                if(target-sum < dis)\n                {\n                    res = sum;\n                    dis = target - sum;\n                }\n                ++l;\n            }\n            else if(sum > target)\n            {\n                if(sum - target < dis)\n                {\n                    res = sum;\n                    dis = sum - target;\n                }\n                --r;\n            }\n            else\n                return target;\n        }\n        return res;\n    }\n};\n```\n\n","slug":"3Sum-Closest","published":1,"updated":"2018-11-15T16:28:11.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaon0002gvygjb1uog1h","content":"<p><strong>问题描述：</strong></p>\n<p>Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n<p>For example, given array S = {-1 2 1 -4}, and target = 1.</p>\n<p>The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</p>\n<p><strong>解决思路：</strong></p>\n<p>我们可以在 2sum问题 的基础上来解决3sum问题，假设3sum问题的目标是target。每次从数组中选出一个数k，从剩下的数中求目标等于target-k的2sum问题。这里需要注意的是有个小的trick：当我们从数组中选出第i数时，我们只需要求数值中从第i+1个到最后一个范围内字数组的2sum问题。<br>\n我们以选第一个和第二个举例，假设数组为A[],总共有n个元素A1，A2…An。很显然，当选出A1时，我们在子数组[A2<sub>An]中求目标位target-A1的2sum问题，我们要证明的是当选出A2时，我们只需要在子数组[A3</sub>An]中计算目标位target-A2的2sum问题，而不是在子数组[A1,A3~An]中，证明如下：<br>\n假设在子数组[A1,A3~An]目标位target-A2的2sum问题中，存在A1 + m = target-A2（m为A3~An中的某个数），即A2 + m = target-A1，这刚好是“对于子数组[A3~An],目标位target-A1的2sum问题”的一个解。即我们相当于对满足3sum的三个数A1+A2+m = target重复计算了。因此为了避免重复计算，在子数组[A1，A3~An]中，可以把A1去掉，再来计算目标是target-A2的2sum问题。</p>\n<p>对于本题要求的求最接近解，只需要保存当前解以及当前解和目标的距离，如果新的解更接近，则更新解。算法复杂度为O（n^2）;<br>\n注意：我们这里是求的和是一个非确定性的数，因此2sum问题的hashtable解法就不适合这里了</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">threeSumClosest</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = num.size();</span><br><span class=\"line\">        sort(num.begin(),num.end());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res,dis=INT_MAX;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n<span class=\"number\">-2</span>;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> target2 = target - num[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmpdis;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmpres = twoSumClosest(num,i+<span class=\"number\">1</span>,target2);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((tmpdis = <span class=\"built_in\">abs</span>(tmpres-target2)) &lt; dis)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                res = tmpres + num[i];</span><br><span class=\"line\">                dis = tmpdis;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res == target)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">twoSumClosest</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;sortnum,<span class=\"keyword\">int</span> start,<span class=\"keyword\">int</span> target)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res,dis=INT_MAX;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = start,r = sortnum.size()<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l&lt;r)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = sortnum[l]+sortnum[r];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum &lt; target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(target-sum &lt; dis)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    res = sum;</span><br><span class=\"line\">                    dis = target - sum;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                ++l;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum &gt; target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(sum - target &lt; dis)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    res = sum;</span><br><span class=\"line\">                    dis = sum - target;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                --r;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n<p>For example, given array S = {-1 2 1 -4}, and target = 1.</p>\n<p>The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</p>\n<p><strong>解决思路：</strong></p>\n<p>我们可以在 2sum问题 的基础上来解决3sum问题，假设3sum问题的目标是target。每次从数组中选出一个数k，从剩下的数中求目标等于target-k的2sum问题。这里需要注意的是有个小的trick：当我们从数组中选出第i数时，我们只需要求数值中从第i+1个到最后一个范围内字数组的2sum问题。<br>\n我们以选第一个和第二个举例，假设数组为A[],总共有n个元素A1，A2…An。很显然，当选出A1时，我们在子数组[A2<sub>An]中求目标位target-A1的2sum问题，我们要证明的是当选出A2时，我们只需要在子数组[A3</sub>An]中计算目标位target-A2的2sum问题，而不是在子数组[A1,A3~An]中，证明如下：<br>\n假设在子数组[A1,A3~An]目标位target-A2的2sum问题中，存在A1 + m = target-A2（m为A3~An中的某个数），即A2 + m = target-A1，这刚好是“对于子数组[A3~An],目标位target-A1的2sum问题”的一个解。即我们相当于对满足3sum的三个数A1+A2+m = target重复计算了。因此为了避免重复计算，在子数组[A1，A3~An]中，可以把A1去掉，再来计算目标是target-A2的2sum问题。</p>\n<p>对于本题要求的求最接近解，只需要保存当前解以及当前解和目标的距离，如果新的解更接近，则更新解。算法复杂度为O（n^2）;<br>\n注意：我们这里是求的和是一个非确定性的数，因此2sum问题的hashtable解法就不适合这里了</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">threeSumClosest</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = num.size();</span><br><span class=\"line\">        sort(num.begin(),num.end());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res,dis=INT_MAX;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n<span class=\"number\">-2</span>;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> target2 = target - num[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmpdis;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmpres = twoSumClosest(num,i+<span class=\"number\">1</span>,target2);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((tmpdis = <span class=\"built_in\">abs</span>(tmpres-target2)) &lt; dis)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                res = tmpres + num[i];</span><br><span class=\"line\">                dis = tmpdis;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res == target)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">twoSumClosest</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;sortnum,<span class=\"keyword\">int</span> start,<span class=\"keyword\">int</span> target)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res,dis=INT_MAX;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = start,r = sortnum.size()<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l&lt;r)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = sortnum[l]+sortnum[r];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum &lt; target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(target-sum &lt; dis)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    res = sum;</span><br><span class=\"line\">                    dis = target - sum;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                ++l;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum &gt; target)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(sum - target &lt; dis)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    res = sum;</span><br><span class=\"line\">                    dis = sum - target;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                --r;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"3Sum","comments":1,"abbrlink":"cc6b88ec","date":"2018-11-15T15:50:50.000Z","_content":"\n**问题描述：**\n\nGiven an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\n\nNote:\n\nElements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)\nThe solution set must not contain duplicate triplets.\n​    For example, given array S = {-1 0 1 2 -1 -4},\n\n    A solution set is:\n    (-1, 0, 1)\n    (-1, -1, 2)\n**解决思路：**\n\n3sum的时候，先整体排一次序，然后枚举第三个数字的时候不需要重复， 比如排好序以后的数字是 a b c d e f, 那么第一次枚举a, 在剩下的b c d e f中进行2 sum, 完了以后第二次枚举b, 只需要在 c d e f中进行2sum好了，而不是在a c d e f中进行2sum, 这个大家可以自己体会一下，想通了还是挺有帮助的。\n\n```C++\nclass Solution {\npublic:\n    vector<vector<int> > threeSum(vector<int> &num) {\n        sort(num.begin(),num.end());\n        int len = num.size();\n        vector<vector<int>> result;\n        if(len < 3)\n            return result;\n        \n        int iCount = len - 2;\n        vector<int> truple(3,0);\n        int CurrentVal = num[0];\n        \n        for(int i = 0; i < iCount;i++)\n        {\n            if(i && num[i] == CurrentVal)\n            {\n                continue;\n            }\n            truple[0] = num[i];\n            int l = i + 1;\n            int r = len - 1;\n            while(l<r)\n            {\n                int iSum = num[l] + num[r];\n                if(iSum + truple[0] == 0)\n                {\n                    truple[1] = num[l];\n                    truple[2] = num[r];\n                    if(result.size() == 0 || truple != result[result.size()-1])\n                        result.push_back(truple);\n                    ++l;\n                    --r;\n                }\n                else if(iSum + truple[0] < 0)\n                {\n                    ++l;\n                }\n                else\n                {\n                    --r;\n                }\n            }\n            CurrentVal = num[i];\n          \n        }\n        return result;\n    }\n    \n};\n```\n\n\n\n这是一篇关于[kSum问题的总结性文章](http://tech-wonderland.net/blog/summary-of-ksum-problems.html)。","source":"_posts/3Sum.md","raw":"---\ntitle: 3Sum\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: cc6b88ec\ndate: 2018-11-15 23:50:50\n---\n\n**问题描述：**\n\nGiven an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\n\nNote:\n\nElements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)\nThe solution set must not contain duplicate triplets.\n​    For example, given array S = {-1 0 1 2 -1 -4},\n\n    A solution set is:\n    (-1, 0, 1)\n    (-1, -1, 2)\n**解决思路：**\n\n3sum的时候，先整体排一次序，然后枚举第三个数字的时候不需要重复， 比如排好序以后的数字是 a b c d e f, 那么第一次枚举a, 在剩下的b c d e f中进行2 sum, 完了以后第二次枚举b, 只需要在 c d e f中进行2sum好了，而不是在a c d e f中进行2sum, 这个大家可以自己体会一下，想通了还是挺有帮助的。\n\n```C++\nclass Solution {\npublic:\n    vector<vector<int> > threeSum(vector<int> &num) {\n        sort(num.begin(),num.end());\n        int len = num.size();\n        vector<vector<int>> result;\n        if(len < 3)\n            return result;\n        \n        int iCount = len - 2;\n        vector<int> truple(3,0);\n        int CurrentVal = num[0];\n        \n        for(int i = 0; i < iCount;i++)\n        {\n            if(i && num[i] == CurrentVal)\n            {\n                continue;\n            }\n            truple[0] = num[i];\n            int l = i + 1;\n            int r = len - 1;\n            while(l<r)\n            {\n                int iSum = num[l] + num[r];\n                if(iSum + truple[0] == 0)\n                {\n                    truple[1] = num[l];\n                    truple[2] = num[r];\n                    if(result.size() == 0 || truple != result[result.size()-1])\n                        result.push_back(truple);\n                    ++l;\n                    --r;\n                }\n                else if(iSum + truple[0] < 0)\n                {\n                    ++l;\n                }\n                else\n                {\n                    --r;\n                }\n            }\n            CurrentVal = num[i];\n          \n        }\n        return result;\n    }\n    \n};\n```\n\n\n\n这是一篇关于[kSum问题的总结性文章](http://tech-wonderland.net/blog/summary-of-ksum-problems.html)。","slug":"3Sum","published":1,"updated":"2018-11-15T16:28:12.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaos0006gvyggayi6960","content":"<p><strong>问题描述：</strong></p>\n<p>Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p>Note:</p>\n<p>Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)<br>\nThe solution set must not contain duplicate triplets.<br>\n​    For example, given array S = {-1 0 1 2 -1 -4},</p>\n<pre><code>A solution set is:\n(-1, 0, 1)\n(-1, -1, 2)\n</code></pre>\n<p><strong>解决思路：</strong></p>\n<p>3sum的时候，先整体排一次序，然后枚举第三个数字的时候不需要重复， 比如排好序以后的数字是 a b c d e f, 那么第一次枚举a, 在剩下的b c d e f中进行2 sum, 完了以后第二次枚举b, 只需要在 c d e f中进行2sum好了，而不是在a c d e f中进行2sum, 这个大家可以自己体会一下，想通了还是挺有帮助的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; threeSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num) &#123;</span><br><span class=\"line\">        sort(num.begin(),num.end());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = num.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; result;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len &lt; <span class=\"number\">3</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> iCount = len - <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; truple(<span class=\"number\">3</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> CurrentVal = num[<span class=\"number\">0</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; iCount;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &amp;&amp; num[i] == CurrentVal)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            truple[<span class=\"number\">0</span>] = num[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> l = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> r = len - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(l&lt;r)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> iSum = num[l] + num[r];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(iSum + truple[<span class=\"number\">0</span>] == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    truple[<span class=\"number\">1</span>] = num[l];</span><br><span class=\"line\">                    truple[<span class=\"number\">2</span>] = num[r];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(result.size() == <span class=\"number\">0</span> || truple != result[result.size()<span class=\"number\">-1</span>])</span><br><span class=\"line\">                        result.push_back(truple);</span><br><span class=\"line\">                    ++l;</span><br><span class=\"line\">                    --r;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iSum + truple[<span class=\"number\">0</span>] &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ++l;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    --r;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            CurrentVal = num[i];</span><br><span class=\"line\">          </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这是一篇关于<a href=\"http://tech-wonderland.net/blog/summary-of-ksum-problems.html\" target=\"_blank\" rel=\"noopener\">kSum问题的总结性文章</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p>Note:</p>\n<p>Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)<br>\nThe solution set must not contain duplicate triplets.<br>\n​    For example, given array S = {-1 0 1 2 -1 -4},</p>\n<pre><code>A solution set is:\n(-1, 0, 1)\n(-1, -1, 2)\n</code></pre>\n<p><strong>解决思路：</strong></p>\n<p>3sum的时候，先整体排一次序，然后枚举第三个数字的时候不需要重复， 比如排好序以后的数字是 a b c d e f, 那么第一次枚举a, 在剩下的b c d e f中进行2 sum, 完了以后第二次枚举b, 只需要在 c d e f中进行2sum好了，而不是在a c d e f中进行2sum, 这个大家可以自己体会一下，想通了还是挺有帮助的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; threeSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num) &#123;</span><br><span class=\"line\">        sort(num.begin(),num.end());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = num.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; result;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len &lt; <span class=\"number\">3</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> iCount = len - <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; truple(<span class=\"number\">3</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> CurrentVal = num[<span class=\"number\">0</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; iCount;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &amp;&amp; num[i] == CurrentVal)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            truple[<span class=\"number\">0</span>] = num[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> l = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> r = len - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(l&lt;r)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> iSum = num[l] + num[r];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(iSum + truple[<span class=\"number\">0</span>] == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    truple[<span class=\"number\">1</span>] = num[l];</span><br><span class=\"line\">                    truple[<span class=\"number\">2</span>] = num[r];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(result.size() == <span class=\"number\">0</span> || truple != result[result.size()<span class=\"number\">-1</span>])</span><br><span class=\"line\">                        result.push_back(truple);</span><br><span class=\"line\">                    ++l;</span><br><span class=\"line\">                    --r;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iSum + truple[<span class=\"number\">0</span>] &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ++l;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    --r;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            CurrentVal = num[i];</span><br><span class=\"line\">          </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这是一篇关于<a href=\"http://tech-wonderland.net/blog/summary-of-ksum-problems.html\" target=\"_blank\" rel=\"noopener\">kSum问题的总结性文章</a>。</p>\n"},{"title":"4Sum","comments":1,"abbrlink":"51bcb055","date":"2018-11-15T15:44:12.000Z","_content":"\n**问题描述**\nGiven an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.\n\nNote: The solution set must not contain duplicate quadruplets.\n\nFor example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.\n\nA solution set is: \n\n```\n[ \n[-1, 0, 0, 1], \n[-2, -1, 1, 2], \n[-2, 0, 0, 2] \n]\n```\n\n**算法1：O(n^3)**\n\n我们可以仿照3sum的解决方法。这里枚举第一个和第二个数，然后对余下数的求2sum，算法复杂度为O（n^3）\n\n代码：\n\n```C++\nclass Solution {\npublic:\n    vector<vector<int> > fourSum(vector<int> &num, int target) {\n        int n = num.size();\n        sort(num.begin(),num.end());\n        vector<vector<int>> res;\n        \n        vector<int> quard(4,0);\n        for(int i = 0; i < n-3; i++)\n        {\n            if(i > 0 && num[i] == num[i-1]) continue;\n            for(int j = i + 1; j < n -2; j++)\n            {\n                if(j > i+1 && num[j] == num[j-1]) continue;\n                int l = j+1,r=n-1;\n                int target2 = target - num[i] - num[j];\n                while(l<r)\n                {\n                    int sum = num[l] + num[r];\n                    if(sum < target2)\n                    {\n                        ++l;\n                    }\n                    else if(sum > target2)\n                    {\n                        --r;\n                    }\n                    else\n                    {\n                        quard[0] = num[i];\n                        quard[1] = num[j];\n                        quard[2] = num[l];\n                        quard[3] = num[r];\n                        res.push_back(quard);\n                        \n                        int k = l + 1;\n                        while(k < r && num[k] == num[l])k++;\n                        l = k;\n                        \n                        k = r-1;\n                        while(k > l && num[k] == num[r])k--;\n                        r = k;\n                        \n                    }\n                }\n            }\n        }\n        return res;\n    }\n};\n```\n\n\n\n**算法2：O（n^2）的算法**\n\n和前面相同，都是先对数组排序。我们先枚举出所有二个数的和存放在哈希map中，其中map的key对应的是二个数的和，因为多对元素求和可能是相同的值，故哈希map的value是一个链表（下面的代码中用数组代替），链表每个节点存的是这两个数在数组的下标；这个预处理的时间复杂度是O（n^2）。接着和算法1类似，枚举第一个和第二个元素，假设分别为v1,v2, 然后在哈希map中查找和为target-v1-v2的所有二元对（在对应的链表中），查找的时间为O（1），为了保证不重复计算，我们只保留两个数下标都大于V2的二元对（其实我们在前面3sum问题中所求得的三个数在排序后的数组中下标都是递增的），即时是这样也有可能重复：比如排好序后数组为-9 -4 -2 0 2 4 4，target = 0，当第一个和第二个元素分别是-4，-2时，我们要得到和为0-（-2）-（-4） = 6的二元对，这样的二元对有两个,都是(2,4)，且他们在数组中的下标都大于-4和-2，如果都加入结果，则(-4,-2,2,4)会出现两次，因此在加入二元对时，要判断是否和已经加入的二元对重复（由于过早二元对之前数组已经排过序，所以两个元素都相同的二元对可以保证在链表中是相邻的，链表不会出现(2,4)->(1,5)->(2,4)的情况，因此只要判断新加入的二元对和上一个加入的二元对是否重复即可），因为同一个链表中的二元对两个元素的和都是相同的，因此只要二元对的一个元素不同，则这个二元对就不同。我们可以认为哈希map中key对应的链表长度为常数，那么算法总的复杂度为O（n^2）\n\n代码：\n\n```c++\nclass Solution {\npublic:\n    vector<vector<int> > fourSum(vector<int> &num, int target) {\n        int n = num.size();\n        vector<vector<int> > res;\n        unordered_map<int, vector<pair<int, int> > >pairs;\n        pairs.reserve(n*n);\n        sort(num.begin(), num.end());\n        \n        for(int i = 0; i < n; i++)\n            for(int j = i+1 ; j < n; j++)\n                pairs[num[i]+num[j]].push_back(make_pair(i,j));\n        \n        for(int i = 0; i < n - 3; i++)\n        {\n            if(i != 0 && num[i] == num[i-1])continue;//防止第一个元素重复\n            for(int j = i+1; j < n - 2; j++)\n            {\n                if(j != i+1 && num[j] == num[j-1])continue;//防止第二个元素重复\n                if(pairs.find(target - num[i] - num[j]) != pairs.end())\n                {\n                    vector<pair<int, int>> &sum2 = pairs[target - num[i] - num[j]];\n                    bool isFirstPush = true;\n                    for(int k = 0; k < sum2.size(); k++)\n                    {\n                        if(sum2[k].first <= j)continue;//保证所求的四元组的数组下标是递增的\n                        if(isFirstPush || (res.back())[2] != num[sum2[k].first])\n                        {\n                            res.push_back(vector<int>{num[i], num[j], num[sum2[k].first], num[sum2[k].second]});\n                            isFirstPush = false;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return res;\n    }\n};\n```\n\n","source":"_posts/4Sum.md","raw":"---\ntitle: 4Sum\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: 51bcb055\ndate: 2018-11-15 23:44:12\n---\n\n**问题描述**\nGiven an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.\n\nNote: The solution set must not contain duplicate quadruplets.\n\nFor example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.\n\nA solution set is: \n\n```\n[ \n[-1, 0, 0, 1], \n[-2, -1, 1, 2], \n[-2, 0, 0, 2] \n]\n```\n\n**算法1：O(n^3)**\n\n我们可以仿照3sum的解决方法。这里枚举第一个和第二个数，然后对余下数的求2sum，算法复杂度为O（n^3）\n\n代码：\n\n```C++\nclass Solution {\npublic:\n    vector<vector<int> > fourSum(vector<int> &num, int target) {\n        int n = num.size();\n        sort(num.begin(),num.end());\n        vector<vector<int>> res;\n        \n        vector<int> quard(4,0);\n        for(int i = 0; i < n-3; i++)\n        {\n            if(i > 0 && num[i] == num[i-1]) continue;\n            for(int j = i + 1; j < n -2; j++)\n            {\n                if(j > i+1 && num[j] == num[j-1]) continue;\n                int l = j+1,r=n-1;\n                int target2 = target - num[i] - num[j];\n                while(l<r)\n                {\n                    int sum = num[l] + num[r];\n                    if(sum < target2)\n                    {\n                        ++l;\n                    }\n                    else if(sum > target2)\n                    {\n                        --r;\n                    }\n                    else\n                    {\n                        quard[0] = num[i];\n                        quard[1] = num[j];\n                        quard[2] = num[l];\n                        quard[3] = num[r];\n                        res.push_back(quard);\n                        \n                        int k = l + 1;\n                        while(k < r && num[k] == num[l])k++;\n                        l = k;\n                        \n                        k = r-1;\n                        while(k > l && num[k] == num[r])k--;\n                        r = k;\n                        \n                    }\n                }\n            }\n        }\n        return res;\n    }\n};\n```\n\n\n\n**算法2：O（n^2）的算法**\n\n和前面相同，都是先对数组排序。我们先枚举出所有二个数的和存放在哈希map中，其中map的key对应的是二个数的和，因为多对元素求和可能是相同的值，故哈希map的value是一个链表（下面的代码中用数组代替），链表每个节点存的是这两个数在数组的下标；这个预处理的时间复杂度是O（n^2）。接着和算法1类似，枚举第一个和第二个元素，假设分别为v1,v2, 然后在哈希map中查找和为target-v1-v2的所有二元对（在对应的链表中），查找的时间为O（1），为了保证不重复计算，我们只保留两个数下标都大于V2的二元对（其实我们在前面3sum问题中所求得的三个数在排序后的数组中下标都是递增的），即时是这样也有可能重复：比如排好序后数组为-9 -4 -2 0 2 4 4，target = 0，当第一个和第二个元素分别是-4，-2时，我们要得到和为0-（-2）-（-4） = 6的二元对，这样的二元对有两个,都是(2,4)，且他们在数组中的下标都大于-4和-2，如果都加入结果，则(-4,-2,2,4)会出现两次，因此在加入二元对时，要判断是否和已经加入的二元对重复（由于过早二元对之前数组已经排过序，所以两个元素都相同的二元对可以保证在链表中是相邻的，链表不会出现(2,4)->(1,5)->(2,4)的情况，因此只要判断新加入的二元对和上一个加入的二元对是否重复即可），因为同一个链表中的二元对两个元素的和都是相同的，因此只要二元对的一个元素不同，则这个二元对就不同。我们可以认为哈希map中key对应的链表长度为常数，那么算法总的复杂度为O（n^2）\n\n代码：\n\n```c++\nclass Solution {\npublic:\n    vector<vector<int> > fourSum(vector<int> &num, int target) {\n        int n = num.size();\n        vector<vector<int> > res;\n        unordered_map<int, vector<pair<int, int> > >pairs;\n        pairs.reserve(n*n);\n        sort(num.begin(), num.end());\n        \n        for(int i = 0; i < n; i++)\n            for(int j = i+1 ; j < n; j++)\n                pairs[num[i]+num[j]].push_back(make_pair(i,j));\n        \n        for(int i = 0; i < n - 3; i++)\n        {\n            if(i != 0 && num[i] == num[i-1])continue;//防止第一个元素重复\n            for(int j = i+1; j < n - 2; j++)\n            {\n                if(j != i+1 && num[j] == num[j-1])continue;//防止第二个元素重复\n                if(pairs.find(target - num[i] - num[j]) != pairs.end())\n                {\n                    vector<pair<int, int>> &sum2 = pairs[target - num[i] - num[j]];\n                    bool isFirstPush = true;\n                    for(int k = 0; k < sum2.size(); k++)\n                    {\n                        if(sum2[k].first <= j)continue;//保证所求的四元组的数组下标是递增的\n                        if(isFirstPush || (res.back())[2] != num[sum2[k].first])\n                        {\n                            res.push_back(vector<int>{num[i], num[j], num[sum2[k].first], num[sum2[k].second]});\n                            isFirstPush = false;\n                        }\n                    }\n                }\n            }\n        }\n        \n        return res;\n    }\n};\n```\n\n","slug":"4Sum","published":1,"updated":"2018-11-15T16:28:10.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaot0007gvyg1np8alm2","content":"<p><strong>问题描述</strong><br>\nGiven an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.</p>\n<p>Note: The solution set must not contain duplicate quadruplets.</p>\n<p>For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.</p>\n<p>A solution set is:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ </span><br><span class=\"line\">[<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>], </span><br><span class=\"line\">[<span class=\"number\">-2</span>, <span class=\"number\">-1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">[<span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>] </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p><strong>算法1：O(n^3)</strong></p>\n<p>我们可以仿照3sum的解决方法。这里枚举第一个和第二个数，然后对余下数的求2sum，算法复杂度为O（n^3）</p>\n<p>代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; fourSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = num.size();</span><br><span class=\"line\">        sort(num.begin(),num.end());</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; res;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; quard(<span class=\"number\">4</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n<span class=\"number\">-3</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span> &amp;&amp; num[i] == num[i<span class=\"number\">-1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n <span class=\"number\">-2</span>; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j &gt; i+<span class=\"number\">1</span> &amp;&amp; num[j] == num[j<span class=\"number\">-1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> l = j+<span class=\"number\">1</span>,r=n<span class=\"number\">-1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> target2 = target - num[i] - num[j];</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(l&lt;r)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> sum = num[l] + num[r];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sum &lt; target2)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        ++l;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum &gt; target2)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        --r;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        quard[<span class=\"number\">0</span>] = num[i];</span><br><span class=\"line\">                        quard[<span class=\"number\">1</span>] = num[j];</span><br><span class=\"line\">                        quard[<span class=\"number\">2</span>] = num[l];</span><br><span class=\"line\">                        quard[<span class=\"number\">3</span>] = num[r];</span><br><span class=\"line\">                        res.push_back(quard);</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">int</span> k = l + <span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span>(k &lt; r &amp;&amp; num[k] == num[l])k++;</span><br><span class=\"line\">                        l = k;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        k = r<span class=\"number\">-1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span>(k &gt; l &amp;&amp; num[k] == num[r])k--;</span><br><span class=\"line\">                        r = k;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>算法2：O（n^2）的算法</strong></p>\n<p>和前面相同，都是先对数组排序。我们先枚举出所有二个数的和存放在哈希map中，其中map的key对应的是二个数的和，因为多对元素求和可能是相同的值，故哈希map的value是一个链表（下面的代码中用数组代替），链表每个节点存的是这两个数在数组的下标；这个预处理的时间复杂度是O（n^2）。接着和算法1类似，枚举第一个和第二个元素，假设分别为v1,v2, 然后在哈希map中查找和为target-v1-v2的所有二元对（在对应的链表中），查找的时间为O（1），为了保证不重复计算，我们只保留两个数下标都大于V2的二元对（其实我们在前面3sum问题中所求得的三个数在排序后的数组中下标都是递增的），即时是这样也有可能重复：比如排好序后数组为-9 -4 -2 0 2 4 4，target = 0，当第一个和第二个元素分别是-4，-2时，我们要得到和为0-（-2）-（-4） = 6的二元对，这样的二元对有两个,都是(2,4)，且他们在数组中的下标都大于-4和-2，如果都加入结果，则(-4,-2,2,4)会出现两次，因此在加入二元对时，要判断是否和已经加入的二元对重复（由于过早二元对之前数组已经排过序，所以两个元素都相同的二元对可以保证在链表中是相邻的，链表不会出现(2,4)-&gt;(1,5)-&gt;(2,4)的情况，因此只要判断新加入的二元对和上一个加入的二元对是否重复即可），因为同一个链表中的二元对两个元素的和都是相同的，因此只要二元对的一个元素不同，则这个二元对就不同。我们可以认为哈希map中key对应的链表长度为常数，那么算法总的复杂度为O（n^2）</p>\n<p>代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; fourSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = num.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; res;</span><br><span class=\"line\">        <span class=\"built_in\">unordered_map</span>&lt;<span class=\"keyword\">int</span>, <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; &gt; &gt;pairs;</span><br><span class=\"line\">        pairs.reserve(n*n);</span><br><span class=\"line\">        sort(num.begin(), num.end());</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span> ; j &lt; n; j++)</span><br><span class=\"line\">                pairs[num[i]+num[j]].push_back(make_pair(i,j));</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i != <span class=\"number\">0</span> &amp;&amp; num[i] == num[i<span class=\"number\">-1</span>])<span class=\"keyword\">continue</span>;<span class=\"comment\">//防止第一个元素重复</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>; j &lt; n - <span class=\"number\">2</span>; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j != i+<span class=\"number\">1</span> &amp;&amp; num[j] == num[j<span class=\"number\">-1</span>])<span class=\"keyword\">continue</span>;<span class=\"comment\">//防止第二个元素重复</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(pairs.find(target - num[i] - num[j]) != pairs.end())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; &amp;sum2 = pairs[target - num[i] - num[j]];</span><br><span class=\"line\">                    <span class=\"keyword\">bool</span> isFirstPush = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; sum2.size(); k++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(sum2[k].first &lt;= j)<span class=\"keyword\">continue</span>;<span class=\"comment\">//保证所求的四元组的数组下标是递增的</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(isFirstPush || (res.back())[<span class=\"number\">2</span>] != num[sum2[k].first])</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            res.push_back(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&#123;num[i], num[j], num[sum2[k].first], num[sum2[k].second]&#125;);</span><br><span class=\"line\">                            isFirstPush = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述</strong><br>\nGiven an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.</p>\n<p>Note: The solution set must not contain duplicate quadruplets.</p>\n<p>For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.</p>\n<p>A solution set is:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ </span><br><span class=\"line\">[<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>], </span><br><span class=\"line\">[<span class=\"number\">-2</span>, <span class=\"number\">-1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">[<span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>] </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p><strong>算法1：O(n^3)</strong></p>\n<p>我们可以仿照3sum的解决方法。这里枚举第一个和第二个数，然后对余下数的求2sum，算法复杂度为O（n^3）</p>\n<p>代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; fourSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = num.size();</span><br><span class=\"line\">        sort(num.begin(),num.end());</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; res;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; quard(<span class=\"number\">4</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n<span class=\"number\">-3</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span> &amp;&amp; num[i] == num[i<span class=\"number\">-1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n <span class=\"number\">-2</span>; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j &gt; i+<span class=\"number\">1</span> &amp;&amp; num[j] == num[j<span class=\"number\">-1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> l = j+<span class=\"number\">1</span>,r=n<span class=\"number\">-1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> target2 = target - num[i] - num[j];</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(l&lt;r)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> sum = num[l] + num[r];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sum &lt; target2)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        ++l;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum &gt; target2)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        --r;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        quard[<span class=\"number\">0</span>] = num[i];</span><br><span class=\"line\">                        quard[<span class=\"number\">1</span>] = num[j];</span><br><span class=\"line\">                        quard[<span class=\"number\">2</span>] = num[l];</span><br><span class=\"line\">                        quard[<span class=\"number\">3</span>] = num[r];</span><br><span class=\"line\">                        res.push_back(quard);</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">int</span> k = l + <span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span>(k &lt; r &amp;&amp; num[k] == num[l])k++;</span><br><span class=\"line\">                        l = k;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        k = r<span class=\"number\">-1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span>(k &gt; l &amp;&amp; num[k] == num[r])k--;</span><br><span class=\"line\">                        r = k;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>算法2：O（n^2）的算法</strong></p>\n<p>和前面相同，都是先对数组排序。我们先枚举出所有二个数的和存放在哈希map中，其中map的key对应的是二个数的和，因为多对元素求和可能是相同的值，故哈希map的value是一个链表（下面的代码中用数组代替），链表每个节点存的是这两个数在数组的下标；这个预处理的时间复杂度是O（n^2）。接着和算法1类似，枚举第一个和第二个元素，假设分别为v1,v2, 然后在哈希map中查找和为target-v1-v2的所有二元对（在对应的链表中），查找的时间为O（1），为了保证不重复计算，我们只保留两个数下标都大于V2的二元对（其实我们在前面3sum问题中所求得的三个数在排序后的数组中下标都是递增的），即时是这样也有可能重复：比如排好序后数组为-9 -4 -2 0 2 4 4，target = 0，当第一个和第二个元素分别是-4，-2时，我们要得到和为0-（-2）-（-4） = 6的二元对，这样的二元对有两个,都是(2,4)，且他们在数组中的下标都大于-4和-2，如果都加入结果，则(-4,-2,2,4)会出现两次，因此在加入二元对时，要判断是否和已经加入的二元对重复（由于过早二元对之前数组已经排过序，所以两个元素都相同的二元对可以保证在链表中是相邻的，链表不会出现(2,4)-&gt;(1,5)-&gt;(2,4)的情况，因此只要判断新加入的二元对和上一个加入的二元对是否重复即可），因为同一个链表中的二元对两个元素的和都是相同的，因此只要二元对的一个元素不同，则这个二元对就不同。我们可以认为哈希map中key对应的链表长度为常数，那么算法总的复杂度为O（n^2）</p>\n<p>代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; fourSum(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = num.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; res;</span><br><span class=\"line\">        <span class=\"built_in\">unordered_map</span>&lt;<span class=\"keyword\">int</span>, <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; &gt; &gt;pairs;</span><br><span class=\"line\">        pairs.reserve(n*n);</span><br><span class=\"line\">        sort(num.begin(), num.end());</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span> ; j &lt; n; j++)</span><br><span class=\"line\">                pairs[num[i]+num[j]].push_back(make_pair(i,j));</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i != <span class=\"number\">0</span> &amp;&amp; num[i] == num[i<span class=\"number\">-1</span>])<span class=\"keyword\">continue</span>;<span class=\"comment\">//防止第一个元素重复</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>; j &lt; n - <span class=\"number\">2</span>; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j != i+<span class=\"number\">1</span> &amp;&amp; num[j] == num[j<span class=\"number\">-1</span>])<span class=\"keyword\">continue</span>;<span class=\"comment\">//防止第二个元素重复</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(pairs.find(target - num[i] - num[j]) != pairs.end())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; &amp;sum2 = pairs[target - num[i] - num[j]];</span><br><span class=\"line\">                    <span class=\"keyword\">bool</span> isFirstPush = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; sum2.size(); k++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(sum2[k].first &lt;= j)<span class=\"keyword\">continue</span>;<span class=\"comment\">//保证所求的四元组的数组下标是递增的</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(isFirstPush || (res.back())[<span class=\"number\">2</span>] != num[sum2[k].first])</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            res.push_back(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&#123;num[i], num[j], num[sum2[k].first], num[sum2[k].second]&#125;);</span><br><span class=\"line\">                            isFirstPush = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Balanced Binary Tree","comments":1,"abbrlink":"5c1c4dd0","date":"2018-11-15T16:14:50.000Z","_content":"\n**问题描述：**\n\nGiven a binary tree, determine if it is height-balanced.\n\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.\n\n**解决思路：**\n\n首先设计一个求二叉树高度的函数，然后调用该函数比较左右子树的高度差即可。\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode *root){\n        if(root == NULL)\n            return 0;\n        int hr,hl;\n        hl = height(root->left);\n        hr = height(root->right);\n        int h;\n        h =1 + (hl > hr ? hl : hr);\n        return h;\n        \n    }\n    bool isBalanced(TreeNode *root) {\n        if(root == NULL)\n            return true;\n        int hl = height(root->left);\n        int hr = height(root->right);\n        int diff = hl - hr;\n        if(diff > 1 || diff < -1)\n            return false;\n        return isBalanced(root->left) && isBalanced(root->right);\n    }\n};\n```\n\n","source":"_posts/Balanced-Binary-Tree.md","raw":"---\ntitle: Balanced Binary Tree\ncomments: true\ncategories:\n  - leetcode\ntags: \n  - C++ \n  - Binary Tree\nabbrlink: 5c1c4dd0\ndate: 2018-11-16 00:14:50\n---\n\n**问题描述：**\n\nGiven a binary tree, determine if it is height-balanced.\n\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.\n\n**解决思路：**\n\n首先设计一个求二叉树高度的函数，然后调用该函数比较左右子树的高度差即可。\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode *root){\n        if(root == NULL)\n            return 0;\n        int hr,hl;\n        hl = height(root->left);\n        hr = height(root->right);\n        int h;\n        h =1 + (hl > hr ? hl : hr);\n        return h;\n        \n    }\n    bool isBalanced(TreeNode *root) {\n        if(root == NULL)\n            return true;\n        int hl = height(root->left);\n        int hr = height(root->right);\n        int diff = hl - hr;\n        if(diff > 1 || diff < -1)\n            return false;\n        return isBalanced(root->left) && isBalanced(root->right);\n    }\n};\n```\n\n","slug":"Balanced-Binary-Tree","published":1,"updated":"2018-11-15T16:28:07.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaou0008gvygdrs8cfmz","content":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, determine if it is height-balanced.</p>\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.</p>\n<p><strong>解决思路：</strong></p>\n<p>首先设计一个求二叉树高度的函数，然后调用该函数比较左右子树的高度差即可。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">height</span><span class=\"params\">(TreeNode *root)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hr,hl;</span><br><span class=\"line\">        hl = height(root-&gt;left);</span><br><span class=\"line\">        hr = height(root-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h;</span><br><span class=\"line\">        h =<span class=\"number\">1</span> + (hl &gt; hr ? hl : hr);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> h;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isBalanced</span><span class=\"params\">(TreeNode *root)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hl = height(root-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hr = height(root-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> diff = hl - hr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(diff &gt; <span class=\"number\">1</span> || diff &lt; <span class=\"number\">-1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isBalanced(root-&gt;left) &amp;&amp; isBalanced(root-&gt;right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, determine if it is height-balanced.</p>\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.</p>\n<p><strong>解决思路：</strong></p>\n<p>首先设计一个求二叉树高度的函数，然后调用该函数比较左右子树的高度差即可。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">height</span><span class=\"params\">(TreeNode *root)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hr,hl;</span><br><span class=\"line\">        hl = height(root-&gt;left);</span><br><span class=\"line\">        hr = height(root-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h;</span><br><span class=\"line\">        h =<span class=\"number\">1</span> + (hl &gt; hr ? hl : hr);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> h;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isBalanced</span><span class=\"params\">(TreeNode *root)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hl = height(root-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hr = height(root-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> diff = hl - hr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(diff &gt; <span class=\"number\">1</span> || diff &lt; <span class=\"number\">-1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isBalanced(root-&gt;left) &amp;&amp; isBalanced(root-&gt;right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Best Time to Buy and Sell Stock II","comments":1,"abbrlink":"a10d34fe","date":"2018-11-15T16:48:29.000Z","_content":"\n**问题描述：**\n\nSay you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\n\n**解决思路：**\n\n依次将相邻的元素相减（后面减去前面）得到新的数组，再取新数组正数相加即可\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int maxProfit(vector<int> &prices) {\n        if(prices.empty())\n            return 0;\n        vector<int> price_d(prices.size());\n        for(int i = 0; i < prices.size()-1; i++)\n        {\n            price_d[i] = prices[i+1] - prices[i];\n        }\n        int max = 0;\n        for(int i = 0; i < price_d.size(); i ++)\n        {\n            if(price_d[i] > 0)\n                max += price_d[i];\n        }\n        return max;\n    }\n};\n```\n\n","source":"_posts/Best-Time-to-Buy-and-Sell-Stock-II.md","raw":"---\ntitle: Best Time to Buy and Sell Stock II\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\nabbrlink: a10d34fe\ndate: 2018-11-16 00:48:29\n---\n\n**问题描述：**\n\nSay you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\n\n**解决思路：**\n\n依次将相邻的元素相减（后面减去前面）得到新的数组，再取新数组正数相加即可\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int maxProfit(vector<int> &prices) {\n        if(prices.empty())\n            return 0;\n        vector<int> price_d(prices.size());\n        for(int i = 0; i < prices.size()-1; i++)\n        {\n            price_d[i] = prices[i+1] - prices[i];\n        }\n        int max = 0;\n        for(int i = 0; i < price_d.size(); i ++)\n        {\n            if(price_d[i] > 0)\n                max += price_d[i];\n        }\n        return max;\n    }\n};\n```\n\n","slug":"Best-Time-to-Buy-and-Sell-Stock-II","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsap0000cgvygeeidiolm","content":"<p><strong>问题描述：</strong></p>\n<p>Say you have an array for which the ith element is the price of a given stock on day i.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p><strong>解决思路：</strong></p>\n<p>依次将相邻的元素相减（后面减去前面）得到新的数组，再取新数组正数相加即可</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;prices)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(prices.empty())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; price_d(prices.size());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; prices.size()<span class=\"number\">-1</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            price_d[i] = prices[i+<span class=\"number\">1</span>] - prices[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; price_d.size(); i ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(price_d[i] &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                max += price_d[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Say you have an array for which the ith element is the price of a given stock on day i.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p><strong>解决思路：</strong></p>\n<p>依次将相邻的元素相减（后面减去前面）得到新的数组，再取新数组正数相加即可</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;prices)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(prices.empty())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; price_d(prices.size());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; prices.size()<span class=\"number\">-1</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            price_d[i] = prices[i+<span class=\"number\">1</span>] - prices[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; price_d.size(); i ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(price_d[i] &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                max += price_d[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Binary Tree Inorder Traversal","comments":1,"abbrlink":"8a5e7d39","date":"2018-11-15T16:33:28.000Z","_content":"\n**问题描述：**\n\nGiven a binary tree, return the inorder traversal of its nodes' values.\n\nFor example:\nGiven binary tree {1,#,2,3},\n\n   1\n​    \\\n​     2\n​    /\n   3\nreturn [1,3,2].\n\nNote: Recursive solution is trivial, could you do it iteratively?\n\nconfused what \"{1,#,2,3}\" means? > read more on how binary tree is serialized on OJ.\n\n**解决思路：**\n\n本想用栈去实现，但是这上面好像没有栈的定义，没办法只好用vector去解决了。\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode *root) {\n        vector<int> intr;\n        if (root == NULL)\n            return intr;\n        vector<TreeNode*> node;\n        TreeNode *p;\n        p = root;\n        while(p != NULL || !node.empty()){\n            if(p != NULL){\n                node.push_back(p);\n                p =p->left;\n            }\n            else{\n                TreeNode *t = node.back();\n                node.pop_back();\n                intr.push_back(t->val);\n                p = t->right;\n        }\n    }\n    return intr;\n    }\n};\n```","source":"_posts/Binary-Tree-Inorder-Traversal.md","raw":"---\ntitle: Binary Tree Inorder Traversal\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\nabbrlink: 8a5e7d39\ndate: 2018-11-16 00:33:28\n---\n\n**问题描述：**\n\nGiven a binary tree, return the inorder traversal of its nodes' values.\n\nFor example:\nGiven binary tree {1,#,2,3},\n\n   1\n​    \\\n​     2\n​    /\n   3\nreturn [1,3,2].\n\nNote: Recursive solution is trivial, could you do it iteratively?\n\nconfused what \"{1,#,2,3}\" means? > read more on how binary tree is serialized on OJ.\n\n**解决思路：**\n\n本想用栈去实现，但是这上面好像没有栈的定义，没办法只好用vector去解决了。\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode *root) {\n        vector<int> intr;\n        if (root == NULL)\n            return intr;\n        vector<TreeNode*> node;\n        TreeNode *p;\n        p = root;\n        while(p != NULL || !node.empty()){\n            if(p != NULL){\n                node.push_back(p);\n                p =p->left;\n            }\n            else{\n                TreeNode *t = node.back();\n                node.pop_back();\n                intr.push_back(t->val);\n                p = t->right;\n        }\n    }\n    return intr;\n    }\n};\n```","slug":"Binary-Tree-Inorder-Traversal","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsap2000egvygitw58y5w","content":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the inorder traversal of its nodes’ values.</p>\n<p>For example:<br>\nGiven binary tree {1,#,2,3},</p>\n<p>1<br>\n​    <br>\n​     2<br>\n​    /<br>\n3<br>\nreturn [1,3,2].</p>\n<p>Note: Recursive solution is trivial, could you do it iteratively?</p>\n<p>confused what “{1,#,2,3}” means? &gt; read more on how binary tree is serialized on OJ.</p>\n<p><strong>解决思路：</strong></p>\n<p>本想用栈去实现，但是这上面好像没有栈的定义，没办法只好用vector去解决了。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; inorderTraversal(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; intr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> intr;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;TreeNode*&gt; node;</span><br><span class=\"line\">        TreeNode *p;</span><br><span class=\"line\">        p = root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> || !node.empty())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                node.push_back(p);</span><br><span class=\"line\">                p =p-&gt;left;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                TreeNode *t = node.back();</span><br><span class=\"line\">                node.pop_back();</span><br><span class=\"line\">                intr.push_back(t-&gt;val);</span><br><span class=\"line\">                p = t-&gt;right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> intr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the inorder traversal of its nodes’ values.</p>\n<p>For example:<br>\nGiven binary tree {1,#,2,3},</p>\n<p>1<br>\n​    <br>\n​     2<br>\n​    /<br>\n3<br>\nreturn [1,3,2].</p>\n<p>Note: Recursive solution is trivial, could you do it iteratively?</p>\n<p>confused what “{1,#,2,3}” means? &gt; read more on how binary tree is serialized on OJ.</p>\n<p><strong>解决思路：</strong></p>\n<p>本想用栈去实现，但是这上面好像没有栈的定义，没办法只好用vector去解决了。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; inorderTraversal(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; intr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> intr;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;TreeNode*&gt; node;</span><br><span class=\"line\">        TreeNode *p;</span><br><span class=\"line\">        p = root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> || !node.empty())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                node.push_back(p);</span><br><span class=\"line\">                p =p-&gt;left;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                TreeNode *t = node.back();</span><br><span class=\"line\">                node.pop_back();</span><br><span class=\"line\">                intr.push_back(t-&gt;val);</span><br><span class=\"line\">                p = t-&gt;right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> intr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"Binary Tree Level Order Traversal II","comments":1,"abbrlink":"8adb33dd","date":"2018-11-15T16:40:06.000Z","_content":"\n**问题描述：**\n\nGiven a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).\n\nFor example:\nGiven binary tree {3,9,20,#,#,15,7},\n\n    \t3\n       / \\\n      9  20\n        /  \\\n       15   7\n\nreturn its bottom-up level order traversal as:\n\n```\n[\n  [15,7],\n  [9,20],\n  [3]\n]\n```\n\nconfused what \"{1,#,2,3}\" means? > read more on how binary tree is serialized on OJ.\n\n\nOJ's Binary Tree Serialization:\nThe serialization of a binary tree follows a level order traversal, where '#' signifies a path terminator where no node exists below.\n\nHere's an example:\n\n```\n   1\n  / \\\n 2   3\n    /\n   4\n    \\\n     5\n```\n\nThe above binary tree is serialized as \"{1,2,3,#,#,4,#,#,5}\".\n\n**解决思路：**\n\n和前面一样\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int> > levelOrderBottom(TreeNode *root) {\n        vector<vector<int>> LOB;\n        if (root == NULL)\n            return LOB;\n        int level = 0;\n        int count = 1;\n        queue<TreeNode *> node;\n        node.push(root);\n        stack<vector<int>> stk;\n        vector<int> sub(0);\n        while(!node.empty()){\n            sub.clear();\n            level = 0;\n            for(int i = 0; i < count; i++){\n                root = node.front();\n                node.pop();\n                sub.push_back(root->val);\n                if(root->left != NULL){\n                    node.push(root->left);\n                    ++level;\n                }\n                if(root->right != NULL){\n                    node.push(root->right);\n                    ++level;\n                }\n            }\n            stk.push(sub);\n            count = level;\n        }\n        while(!stk.empty()){\n            vector<int> tmp = stk.top();\n            LOB.push_back(tmp);\n            stk.pop();\n        }\n        return LOB;\n    }\n};\n```\n\n","source":"_posts/Binary-Tree-Level-Order-Traversal-II.md","raw":"---\ntitle: Binary Tree Level Order Traversal II\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\nabbrlink: 8adb33dd\ndate: 2018-11-16 00:40:06\n---\n\n**问题描述：**\n\nGiven a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).\n\nFor example:\nGiven binary tree {3,9,20,#,#,15,7},\n\n    \t3\n       / \\\n      9  20\n        /  \\\n       15   7\n\nreturn its bottom-up level order traversal as:\n\n```\n[\n  [15,7],\n  [9,20],\n  [3]\n]\n```\n\nconfused what \"{1,#,2,3}\" means? > read more on how binary tree is serialized on OJ.\n\n\nOJ's Binary Tree Serialization:\nThe serialization of a binary tree follows a level order traversal, where '#' signifies a path terminator where no node exists below.\n\nHere's an example:\n\n```\n   1\n  / \\\n 2   3\n    /\n   4\n    \\\n     5\n```\n\nThe above binary tree is serialized as \"{1,2,3,#,#,4,#,#,5}\".\n\n**解决思路：**\n\n和前面一样\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int> > levelOrderBottom(TreeNode *root) {\n        vector<vector<int>> LOB;\n        if (root == NULL)\n            return LOB;\n        int level = 0;\n        int count = 1;\n        queue<TreeNode *> node;\n        node.push(root);\n        stack<vector<int>> stk;\n        vector<int> sub(0);\n        while(!node.empty()){\n            sub.clear();\n            level = 0;\n            for(int i = 0; i < count; i++){\n                root = node.front();\n                node.pop();\n                sub.push_back(root->val);\n                if(root->left != NULL){\n                    node.push(root->left);\n                    ++level;\n                }\n                if(root->right != NULL){\n                    node.push(root->right);\n                    ++level;\n                }\n            }\n            stk.push(sub);\n            count = level;\n        }\n        while(!stk.empty()){\n            vector<int> tmp = stk.top();\n            LOB.push_back(tmp);\n            stk.pop();\n        }\n        return LOB;\n    }\n};\n```\n\n","slug":"Binary-Tree-Level-Order-Traversal-II","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsap6000jgvyg5hk0ipow","content":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the bottom-up level order traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p>\n<p>For example:<br>\nGiven binary tree {3,9,20,#,#,15,7},</p>\n<pre><code>\t3\n   / \\\n  9  20\n    /  \\\n   15   7\n</code></pre>\n<p>return its bottom-up level order traversal as:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  [<span class=\"number\">15</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">  [<span class=\"number\">9</span>,<span class=\"number\">20</span>],</span><br><span class=\"line\">  [<span class=\"number\">3</span>]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>confused what “{1,#,2,3}” means? &gt; read more on how binary tree is serialized on OJ.</p>\n<p>OJ’s Binary Tree Serialization:<br>\nThe serialization of a binary tree follows a level order traversal, where ‘#’ signifies a path terminator where no node exists below.</p>\n<p>Here’s an example:</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"number\">1</span></span><br><span class=\"line\"> / \\</span><br><span class=\"line\"><span class=\"number\">2</span>   <span class=\"number\">3</span></span><br><span class=\"line\">   /</span><br><span class=\"line\">  <span class=\"number\">4</span></span><br><span class=\"line\">   \\</span><br><span class=\"line\">    <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>The above binary tree is serialized as “{1,2,3,#,#,4,#,#,5}”.</p>\n<p><strong>解决思路：</strong></p>\n<p>和前面一样</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; levelOrderBottom(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; LOB;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LOB;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> level = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">queue</span>&lt;TreeNode *&gt; node;</span><br><span class=\"line\">        node.push(root);</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; stk;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; sub(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!node.empty())&#123;</span><br><span class=\"line\">            sub.clear();</span><br><span class=\"line\">            level = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++)&#123;</span><br><span class=\"line\">                root = node.front();</span><br><span class=\"line\">                node.pop();</span><br><span class=\"line\">                sub.push_back(root-&gt;val);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;left != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;left);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;right != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;right);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stk.push(sub);</span><br><span class=\"line\">            count = level;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!stk.empty())&#123;</span><br><span class=\"line\">            <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; tmp = stk.top();</span><br><span class=\"line\">            LOB.push_back(tmp);</span><br><span class=\"line\">            stk.pop();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LOB;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the bottom-up level order traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p>\n<p>For example:<br>\nGiven binary tree {3,9,20,#,#,15,7},</p>\n<pre><code>\t3\n   / \\\n  9  20\n    /  \\\n   15   7\n</code></pre>\n<p>return its bottom-up level order traversal as:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  [<span class=\"number\">15</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">  [<span class=\"number\">9</span>,<span class=\"number\">20</span>],</span><br><span class=\"line\">  [<span class=\"number\">3</span>]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>confused what “{1,#,2,3}” means? &gt; read more on how binary tree is serialized on OJ.</p>\n<p>OJ’s Binary Tree Serialization:<br>\nThe serialization of a binary tree follows a level order traversal, where ‘#’ signifies a path terminator where no node exists below.</p>\n<p>Here’s an example:</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"number\">1</span></span><br><span class=\"line\"> / \\</span><br><span class=\"line\"><span class=\"number\">2</span>   <span class=\"number\">3</span></span><br><span class=\"line\">   /</span><br><span class=\"line\">  <span class=\"number\">4</span></span><br><span class=\"line\">   \\</span><br><span class=\"line\">    <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>The above binary tree is serialized as “{1,2,3,#,#,4,#,#,5}”.</p>\n<p><strong>解决思路：</strong></p>\n<p>和前面一样</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; levelOrderBottom(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; LOB;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LOB;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> level = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">queue</span>&lt;TreeNode *&gt; node;</span><br><span class=\"line\">        node.push(root);</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; stk;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; sub(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!node.empty())&#123;</span><br><span class=\"line\">            sub.clear();</span><br><span class=\"line\">            level = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++)&#123;</span><br><span class=\"line\">                root = node.front();</span><br><span class=\"line\">                node.pop();</span><br><span class=\"line\">                sub.push_back(root-&gt;val);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;left != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;left);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;right != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;right);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stk.push(sub);</span><br><span class=\"line\">            count = level;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!stk.empty())&#123;</span><br><span class=\"line\">            <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; tmp = stk.top();</span><br><span class=\"line\">            LOB.push_back(tmp);</span><br><span class=\"line\">            stk.pop();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LOB;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Binary Tree Level Order Traversal","comments":1,"abbrlink":"a971a08f","date":"2018-11-15T16:37:35.000Z","_content":"\n**问题描述：**\n\nGiven a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\n\nFor example:\nGiven binary tree {3,9,20,#,#,15,7},\n\n     \t3\n       / \\\n      9  20\n        /  \\\n       15   7\n\nreturn its level order traversal as:\n\n```\n[\n  [3],\n  [9,20],\n  [15,7]\n]\n```\n\nconfused what \"{1,#,2,3}\" means? > read more on how binary tree is serialized on OJ.\n\nOJ's Binary Tree Serialization:\nThe serialization of a binary tree follows a level order traversal, where '#' signifies a path terminator where no node exists below.\n\nHere's an example:\n\n```\n  1\n  / \\\n 2   3\n    /\n   4\n    \\\n     5\n```\n\nThe above binary tree is serialized as \"{1,2,3,#,#,4,#,#,5}\".\n\n**解决思路：**\n\n这里需要用到队列，因为根据题意要求，我们的输出结果应该是包含vector的vector，里面的每个vector包含的是该层的所有节点的值。由于队列是先进先出的，所以首先建立一个节点队列，从根节点开始插入，另外用count记录每层节点的总个数，level计算每层节点的个数。\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int> > levelOrder(TreeNode *root) {\n        vector<vector<int>> LO;\n        if(root == NULL) return LO;\n        queue<TreeNode *> node;\n        node.push(root);\n        int count = 1;\n        int level = 0;\n        vector<int> sub(0);\n        while(!node.empty()){\n            sub.clear();\n            level = 0;\n            for(int i = 0; i < count; i++){\n                root = node.front();\n                node.pop();\n                sub.push_back(root->val);\n                if(root->left != NULL){\n                    node.push(root->left);\n                    ++level;\n                }\n                if(root->right != NULL){\n                    node.push(root->right);\n                    ++level;\n                }\n            }\n            count = level;\n            LO.push_back(sub);\n        }\n        return LO;\n    }\n};\n```\n\n","source":"_posts/Binary-Tree-Level-Order-Traversal.md","raw":"---\ntitle: Binary Tree Level Order Traversal\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\nabbrlink: a971a08f\ndate: 2018-11-16 00:37:35\n---\n\n**问题描述：**\n\nGiven a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\n\nFor example:\nGiven binary tree {3,9,20,#,#,15,7},\n\n     \t3\n       / \\\n      9  20\n        /  \\\n       15   7\n\nreturn its level order traversal as:\n\n```\n[\n  [3],\n  [9,20],\n  [15,7]\n]\n```\n\nconfused what \"{1,#,2,3}\" means? > read more on how binary tree is serialized on OJ.\n\nOJ's Binary Tree Serialization:\nThe serialization of a binary tree follows a level order traversal, where '#' signifies a path terminator where no node exists below.\n\nHere's an example:\n\n```\n  1\n  / \\\n 2   3\n    /\n   4\n    \\\n     5\n```\n\nThe above binary tree is serialized as \"{1,2,3,#,#,4,#,#,5}\".\n\n**解决思路：**\n\n这里需要用到队列，因为根据题意要求，我们的输出结果应该是包含vector的vector，里面的每个vector包含的是该层的所有节点的值。由于队列是先进先出的，所以首先建立一个节点队列，从根节点开始插入，另外用count记录每层节点的总个数，level计算每层节点的个数。\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int> > levelOrder(TreeNode *root) {\n        vector<vector<int>> LO;\n        if(root == NULL) return LO;\n        queue<TreeNode *> node;\n        node.push(root);\n        int count = 1;\n        int level = 0;\n        vector<int> sub(0);\n        while(!node.empty()){\n            sub.clear();\n            level = 0;\n            for(int i = 0; i < count; i++){\n                root = node.front();\n                node.pop();\n                sub.push_back(root->val);\n                if(root->left != NULL){\n                    node.push(root->left);\n                    ++level;\n                }\n                if(root->right != NULL){\n                    node.push(root->right);\n                    ++level;\n                }\n            }\n            count = level;\n            LO.push_back(sub);\n        }\n        return LO;\n    }\n};\n```\n\n","slug":"Binary-Tree-Level-Order-Traversal","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsap9000mgvygtwzuhin1","content":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the level order traversal of its nodes’ values. (ie, from left to right, level by level).</p>\n<p>For example:<br>\nGiven binary tree {3,9,20,#,#,15,7},</p>\n<pre><code> \t3\n   / \\\n  9  20\n    /  \\\n   15   7\n</code></pre>\n<p>return its level order traversal as:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  [<span class=\"number\">3</span>],</span><br><span class=\"line\">  [<span class=\"number\">9</span>,<span class=\"number\">20</span>],</span><br><span class=\"line\">  [<span class=\"number\">15</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>confused what “{1,#,2,3}” means? &gt; read more on how binary tree is serialized on OJ.</p>\n<p>OJ’s Binary Tree Serialization:<br>\nThe serialization of a binary tree follows a level order traversal, where ‘#’ signifies a path terminator where no node exists below.</p>\n<p>Here’s an example:</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"number\">1</span></span><br><span class=\"line\"> / \\</span><br><span class=\"line\"><span class=\"number\">2</span>   <span class=\"number\">3</span></span><br><span class=\"line\">   /</span><br><span class=\"line\">  <span class=\"number\">4</span></span><br><span class=\"line\">   \\</span><br><span class=\"line\">    <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>The above binary tree is serialized as “{1,2,3,#,#,4,#,#,5}”.</p>\n<p><strong>解决思路：</strong></p>\n<p>这里需要用到队列，因为根据题意要求，我们的输出结果应该是包含vector的vector，里面的每个vector包含的是该层的所有节点的值。由于队列是先进先出的，所以首先建立一个节点队列，从根节点开始插入，另外用count记录每层节点的总个数，level计算每层节点的个数。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; levelOrder(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; LO;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> LO;</span><br><span class=\"line\">        <span class=\"built_in\">queue</span>&lt;TreeNode *&gt; node;</span><br><span class=\"line\">        node.push(root);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> level = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; sub(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!node.empty())&#123;</span><br><span class=\"line\">            sub.clear();</span><br><span class=\"line\">            level = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++)&#123;</span><br><span class=\"line\">                root = node.front();</span><br><span class=\"line\">                node.pop();</span><br><span class=\"line\">                sub.push_back(root-&gt;val);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;left != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;left);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;right != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;right);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            count = level;</span><br><span class=\"line\">            LO.push_back(sub);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LO;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the level order traversal of its nodes’ values. (ie, from left to right, level by level).</p>\n<p>For example:<br>\nGiven binary tree {3,9,20,#,#,15,7},</p>\n<pre><code> \t3\n   / \\\n  9  20\n    /  \\\n   15   7\n</code></pre>\n<p>return its level order traversal as:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  [<span class=\"number\">3</span>],</span><br><span class=\"line\">  [<span class=\"number\">9</span>,<span class=\"number\">20</span>],</span><br><span class=\"line\">  [<span class=\"number\">15</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>confused what “{1,#,2,3}” means? &gt; read more on how binary tree is serialized on OJ.</p>\n<p>OJ’s Binary Tree Serialization:<br>\nThe serialization of a binary tree follows a level order traversal, where ‘#’ signifies a path terminator where no node exists below.</p>\n<p>Here’s an example:</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"number\">1</span></span><br><span class=\"line\"> / \\</span><br><span class=\"line\"><span class=\"number\">2</span>   <span class=\"number\">3</span></span><br><span class=\"line\">   /</span><br><span class=\"line\">  <span class=\"number\">4</span></span><br><span class=\"line\">   \\</span><br><span class=\"line\">    <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>The above binary tree is serialized as “{1,2,3,#,#,4,#,#,5}”.</p>\n<p><strong>解决思路：</strong></p>\n<p>这里需要用到队列，因为根据题意要求，我们的输出结果应该是包含vector的vector，里面的每个vector包含的是该层的所有节点的值。由于队列是先进先出的，所以首先建立一个节点队列，从根节点开始插入，另外用count记录每层节点的总个数，level计算每层节点的个数。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; levelOrder(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; LO;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> LO;</span><br><span class=\"line\">        <span class=\"built_in\">queue</span>&lt;TreeNode *&gt; node;</span><br><span class=\"line\">        node.push(root);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> level = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; sub(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!node.empty())&#123;</span><br><span class=\"line\">            sub.clear();</span><br><span class=\"line\">            level = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++)&#123;</span><br><span class=\"line\">                root = node.front();</span><br><span class=\"line\">                node.pop();</span><br><span class=\"line\">                sub.push_back(root-&gt;val);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;left != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;left);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(root-&gt;right != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                    node.push(root-&gt;right);</span><br><span class=\"line\">                    ++level;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            count = level;</span><br><span class=\"line\">            LO.push_back(sub);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LO;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Binary Tree Preorder Traversal","comments":1,"abbrlink":"d13d2726","date":"2018-11-15T16:35:34.000Z","_content":"\n**问题描述：**\n\nGiven a binary tree, return the preorder traversal of its nodes' values.\n\nFor example:\nGiven binary tree {1,#,2,3},\n\n   1\n​    \\\n​     2\n​    /\n   3\nreturn [1,2,3].\n\nNote: Recursive solution is trivial, could you do it iteratively?\n\n**非递归实现，不过超时了。**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode *root) {\n        vector<int> pretr;\n        if(root == NULL)\n            return pretr;\n        stack<TreeNode *> node;\n        node.push(root);\n        while(!node.empty()){\n            TreeNode *p = node.top();\n            pretr.push_back(p->val);\n            node.pop();\n            if(p->right) node.push(p);\n            if(p->left) node.push(p);\n        }\n        return pretr;\n    }\n};\n```\n\n**递归实现**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode *root) {\n        vector<int> pretr;\n        process(root,pretr);\n        return pretr;\n        \n    }\n    void process(TreeNode *root,vector<int> &pretr){\n        if(root == NULL) return;\n        TreeNode *p;\n        p = root;\n        pretr.push_back(p->val);\n        process(p->left,pretr);\n        process(p->right,pretr);\n    }\n};\n```\n\n","source":"_posts/Binary-Tree-Preorder-Traversal.md","raw":"---\ntitle: Binary Tree Preorder Traversal\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\nabbrlink: d13d2726\ndate: 2018-11-16 00:35:34\n---\n\n**问题描述：**\n\nGiven a binary tree, return the preorder traversal of its nodes' values.\n\nFor example:\nGiven binary tree {1,#,2,3},\n\n   1\n​    \\\n​     2\n​    /\n   3\nreturn [1,2,3].\n\nNote: Recursive solution is trivial, could you do it iteratively?\n\n**非递归实现，不过超时了。**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode *root) {\n        vector<int> pretr;\n        if(root == NULL)\n            return pretr;\n        stack<TreeNode *> node;\n        node.push(root);\n        while(!node.empty()){\n            TreeNode *p = node.top();\n            pretr.push_back(p->val);\n            node.pop();\n            if(p->right) node.push(p);\n            if(p->left) node.push(p);\n        }\n        return pretr;\n    }\n};\n```\n\n**递归实现**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode *root) {\n        vector<int> pretr;\n        process(root,pretr);\n        return pretr;\n        \n    }\n    void process(TreeNode *root,vector<int> &pretr){\n        if(root == NULL) return;\n        TreeNode *p;\n        p = root;\n        pretr.push_back(p->val);\n        process(p->left,pretr);\n        process(p->right,pretr);\n    }\n};\n```\n\n","slug":"Binary-Tree-Preorder-Traversal","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapc000qgvygm236g2bm","content":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the preorder traversal of its nodes’ values.</p>\n<p>For example:<br>\nGiven binary tree {1,#,2,3},</p>\n<p>1<br>\n​    <br>\n​     2<br>\n​    /<br>\n3<br>\nreturn [1,2,3].</p>\n<p>Note: Recursive solution is trivial, could you do it iteratively?</p>\n<p><strong>非递归实现，不过超时了。</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; preorderTraversal(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; pretr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> pretr;</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;TreeNode *&gt; node;</span><br><span class=\"line\">        node.push(root);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!node.empty())&#123;</span><br><span class=\"line\">            TreeNode *p = node.top();</span><br><span class=\"line\">            pretr.push_back(p-&gt;val);</span><br><span class=\"line\">            node.pop();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;right) node.push(p);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;left) node.push(p);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pretr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>递归实现</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; preorderTraversal(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; pretr;</span><br><span class=\"line\">        process(root,pretr);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pretr;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(TreeNode *root,<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;pretr)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        TreeNode *p;</span><br><span class=\"line\">        p = root;</span><br><span class=\"line\">        pretr.push_back(p-&gt;val);</span><br><span class=\"line\">        process(p-&gt;left,pretr);</span><br><span class=\"line\">        process(p-&gt;right,pretr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a binary tree, return the preorder traversal of its nodes’ values.</p>\n<p>For example:<br>\nGiven binary tree {1,#,2,3},</p>\n<p>1<br>\n​    <br>\n​     2<br>\n​    /<br>\n3<br>\nreturn [1,2,3].</p>\n<p>Note: Recursive solution is trivial, could you do it iteratively?</p>\n<p><strong>非递归实现，不过超时了。</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; preorderTraversal(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; pretr;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> pretr;</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;TreeNode *&gt; node;</span><br><span class=\"line\">        node.push(root);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!node.empty())&#123;</span><br><span class=\"line\">            TreeNode *p = node.top();</span><br><span class=\"line\">            pretr.push_back(p-&gt;val);</span><br><span class=\"line\">            node.pop();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;right) node.push(p);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;left) node.push(p);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pretr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>递归实现</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; preorderTraversal(TreeNode *root) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; pretr;</span><br><span class=\"line\">        process(root,pretr);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pretr;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(TreeNode *root,<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;pretr)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        TreeNode *p;</span><br><span class=\"line\">        p = root;</span><br><span class=\"line\">        pretr.push_back(p-&gt;val);</span><br><span class=\"line\">        process(p-&gt;left,pretr);</span><br><span class=\"line\">        process(p-&gt;right,pretr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Excel Sheet Column Number","comments":1,"abbrlink":"50445eba","date":"2018-11-15T16:03:44.000Z","_content":"\n**问题描述：**\n\nRelated to question Excel Sheet Column Title\n\nGiven a column title as appear in an Excel sheet, return its corresponding column number.\n\nFor example:\n\n```C++\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n```\n**解决思路：**\n\n本题类似于进制转换，将一个字符串转化为一个十进制的数字，而要求的字符串可以看作是一个26进制的数字。\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int titleToNumber(string s) {\n        if(s.empty())\n            return 0;\n        int n = 0;\n        for(int i = 0; i < s.length()-1; i ++){\n            n = (int(s[i]-'A')+1+n) * 26;\n        }\n        n += int(s[s.length()-1]-'A')+1;\n        return n;\n    }\n};\n```\n\n","source":"_posts/Excel-Sheet-Column-Number.md","raw":"---\ntitle: Excel Sheet Column Number\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: 50445eba\ndate: 2018-11-16 00:03:44\n---\n\n**问题描述：**\n\nRelated to question Excel Sheet Column Title\n\nGiven a column title as appear in an Excel sheet, return its corresponding column number.\n\nFor example:\n\n```C++\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n```\n**解决思路：**\n\n本题类似于进制转换，将一个字符串转化为一个十进制的数字，而要求的字符串可以看作是一个26进制的数字。\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int titleToNumber(string s) {\n        if(s.empty())\n            return 0;\n        int n = 0;\n        for(int i = 0; i < s.length()-1; i ++){\n            n = (int(s[i]-'A')+1+n) * 26;\n        }\n        n += int(s[s.length()-1]-'A')+1;\n        return n;\n    }\n};\n```\n\n","slug":"Excel-Sheet-Column-Number","published":1,"updated":"2018-11-15T16:14:30.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsape000sgvyg8qvee00j","content":"<p><strong>问题描述：</strong></p>\n<p>Related to question Excel Sheet Column Title</p>\n<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>\n<p>For example:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A -&gt; <span class=\"number\">1</span></span><br><span class=\"line\">B -&gt; <span class=\"number\">2</span></span><br><span class=\"line\">C -&gt; <span class=\"number\">3</span></span><br><span class=\"line\">...</span><br><span class=\"line\">Z -&gt; <span class=\"number\">26</span></span><br><span class=\"line\">AA -&gt; <span class=\"number\">27</span></span><br><span class=\"line\">AB -&gt; <span class=\"number\">28</span></span><br></pre></td></tr></table></figure>\n<p><strong>解决思路：</strong></p>\n<p>本题类似于进制转换，将一个字符串转化为一个十进制的数字，而要求的字符串可以看作是一个26进制的数字。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">titleToNumber</span><span class=\"params\">(<span class=\"built_in\">string</span> s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.empty())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length()<span class=\"number\">-1</span>; i ++)&#123;</span><br><span class=\"line\">            n = (<span class=\"keyword\">int</span>(s[i]-<span class=\"string\">'A'</span>)+<span class=\"number\">1</span>+n) * <span class=\"number\">26</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        n += <span class=\"keyword\">int</span>(s[s.length()<span class=\"number\">-1</span>]-<span class=\"string\">'A'</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Related to question Excel Sheet Column Title</p>\n<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>\n<p>For example:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A -&gt; <span class=\"number\">1</span></span><br><span class=\"line\">B -&gt; <span class=\"number\">2</span></span><br><span class=\"line\">C -&gt; <span class=\"number\">3</span></span><br><span class=\"line\">...</span><br><span class=\"line\">Z -&gt; <span class=\"number\">26</span></span><br><span class=\"line\">AA -&gt; <span class=\"number\">27</span></span><br><span class=\"line\">AB -&gt; <span class=\"number\">28</span></span><br></pre></td></tr></table></figure>\n<p><strong>解决思路：</strong></p>\n<p>本题类似于进制转换，将一个字符串转化为一个十进制的数字，而要求的字符串可以看作是一个26进制的数字。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">titleToNumber</span><span class=\"params\">(<span class=\"built_in\">string</span> s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.empty())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length()<span class=\"number\">-1</span>; i ++)&#123;</span><br><span class=\"line\">            n = (<span class=\"keyword\">int</span>(s[i]-<span class=\"string\">'A'</span>)+<span class=\"number\">1</span>+n) * <span class=\"number\">26</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        n += <span class=\"keyword\">int</span>(s[s.length()<span class=\"number\">-1</span>]-<span class=\"string\">'A'</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Intersection of Two Linked Lists","comments":1,"abbrlink":"42870ae4","date":"2018-11-15T16:09:39.000Z","_content":"\n**问题描述：**\n\nFor example, the following two linked lists:\n\nA:          a1 → a2\n​                   ↘\n​                     c1 → c2 → c3\n​                   ↗            \nB:     b1 → b2 → b3\nbegin to intersect at node c1.\n\n\nNotes:\n\nIf the two linked lists have no intersection at all, return null.\nThe linked lists must retain their original structure after the function returns.\nYou may assume there are no cycles anywhere in the entire linked structure.\nYour code should preferably run in O(n) time and use only O(1) memory.\n\n**解决思路：**\n\n这题要求的时间复杂度是O(n)和空间复杂度O(1)，所以只能用以下方法解决：(1)首先分别求出两个单链表的长度lenA和lenB；(2)求出两个链表的长度差，然后将长链表的比较位置移到长度差的位置，因为这些位置上的两个链表的元素是肯定不相同的；(3)此时，两个链表的长度一致，在分别依次比较元素即可\n\n**代码：**\n\n```C++\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        if(headA == NULL || headB == NULL)\n            return NULL;\n        int lenA,lenB;\n        lenA = 0,lenB = 0;\n        ListNode *p,*q;\n        for(p = headA;p != NULL;p=p->next)\n            lenA ++;\n        for(q = headB;q != NULL;q=q->next)\n            lenB ++;\n        int diff = abs(lenB-lenA);\n        if(lenA > lenB){\n            p = headA;\n            for(int i = 0;i < diff;i++)\n                p = p->next;\n            q = headB;\n            while(p != NULL && q != NULL){\n                if(p->val == q->val)\n                    return p;\n                else{\n                    p = p->next;\n                    q = q->next;\n                }\n            }\n            return NULL;\n        }\n        else{\n            p = headB;\n            for(int i = 0;i < diff;i++)\n                p = p->next;\n            q = headA;\n            while(p != NULL && q != NULL){\n                if(p->val == q->val)\n                    return p;\n                else{\n                    p = p->next;\n                    q = q->next;\n                }\n            }\n            return NULL;\n        }\n    }\n};\n```\n\n","source":"_posts/Intersection-of-Two-Linked-Lists.md","raw":"---\ntitle: Intersection of Two Linked Lists\ncomments: true\ncategories:\n  - leetcode\ntags: \n  - C++\n  - List\nabbrlink: 42870ae4\ndate: 2018-11-16 00:09:39\n---\n\n**问题描述：**\n\nFor example, the following two linked lists:\n\nA:          a1 → a2\n​                   ↘\n​                     c1 → c2 → c3\n​                   ↗            \nB:     b1 → b2 → b3\nbegin to intersect at node c1.\n\n\nNotes:\n\nIf the two linked lists have no intersection at all, return null.\nThe linked lists must retain their original structure after the function returns.\nYou may assume there are no cycles anywhere in the entire linked structure.\nYour code should preferably run in O(n) time and use only O(1) memory.\n\n**解决思路：**\n\n这题要求的时间复杂度是O(n)和空间复杂度O(1)，所以只能用以下方法解决：(1)首先分别求出两个单链表的长度lenA和lenB；(2)求出两个链表的长度差，然后将长链表的比较位置移到长度差的位置，因为这些位置上的两个链表的元素是肯定不相同的；(3)此时，两个链表的长度一致，在分别依次比较元素即可\n\n**代码：**\n\n```C++\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        if(headA == NULL || headB == NULL)\n            return NULL;\n        int lenA,lenB;\n        lenA = 0,lenB = 0;\n        ListNode *p,*q;\n        for(p = headA;p != NULL;p=p->next)\n            lenA ++;\n        for(q = headB;q != NULL;q=q->next)\n            lenB ++;\n        int diff = abs(lenB-lenA);\n        if(lenA > lenB){\n            p = headA;\n            for(int i = 0;i < diff;i++)\n                p = p->next;\n            q = headB;\n            while(p != NULL && q != NULL){\n                if(p->val == q->val)\n                    return p;\n                else{\n                    p = p->next;\n                    q = q->next;\n                }\n            }\n            return NULL;\n        }\n        else{\n            p = headB;\n            for(int i = 0;i < diff;i++)\n                p = p->next;\n            q = headA;\n            while(p != NULL && q != NULL){\n                if(p->val == q->val)\n                    return p;\n                else{\n                    p = p->next;\n                    q = q->next;\n                }\n            }\n            return NULL;\n        }\n    }\n};\n```\n\n","slug":"Intersection-of-Two-Linked-Lists","published":1,"updated":"2018-11-15T16:28:26.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapi000wgvygwppz7fru","content":"<p><strong>问题描述：</strong></p>\n<p>For example, the following two linked lists:</p>\n<p>A:          a1 → a2<br>\n​                   ↘<br>\n​                     c1 → c2 → c3<br>\n​                   ↗<br>\nB:     b1 → b2 → b3<br>\nbegin to intersect at node c1.</p>\n<p>Notes:</p>\n<p>If the two linked lists have no intersection at all, return null.<br>\nThe linked lists must retain their original structure after the function returns.<br>\nYou may assume there are no cycles anywhere in the entire linked structure.<br>\nYour code should preferably run in O(n) time and use only O(1) memory.</p>\n<p><strong>解决思路：</strong></p>\n<p>这题要求的时间复杂度是O(n)和空间复杂度O(1)，所以只能用以下方法解决：(1)首先分别求出两个单链表的长度lenA和lenB；(2)求出两个链表的长度差，然后将长链表的比较位置移到长度差的位置，因为这些位置上的两个链表的元素是肯定不相同的；(3)此时，两个链表的长度一致，在分别依次比较元素即可</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * struct ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode *next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">ListNode *<span class=\"title\">getIntersectionNode</span><span class=\"params\">(ListNode *headA, ListNode *headB)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(headA == <span class=\"literal\">NULL</span> || headB == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> lenA,lenB;</span><br><span class=\"line\">        lenA = <span class=\"number\">0</span>,lenB = <span class=\"number\">0</span>;</span><br><span class=\"line\">        ListNode *p,*q;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p = headA;p != <span class=\"literal\">NULL</span>;p=p-&gt;next)</span><br><span class=\"line\">            lenA ++;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(q = headB;q != <span class=\"literal\">NULL</span>;q=q-&gt;next)</span><br><span class=\"line\">            lenB ++;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> diff = <span class=\"built_in\">abs</span>(lenB-lenA);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lenA &gt; lenB)&#123;</span><br><span class=\"line\">            p = headA;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; diff;i++)</span><br><span class=\"line\">                p = p-&gt;next;</span><br><span class=\"line\">            q = headB;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> &amp;&amp; q != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(p-&gt;val == q-&gt;val)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    p = p-&gt;next;</span><br><span class=\"line\">                    q = q-&gt;next;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            p = headB;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; diff;i++)</span><br><span class=\"line\">                p = p-&gt;next;</span><br><span class=\"line\">            q = headA;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> &amp;&amp; q != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(p-&gt;val == q-&gt;val)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    p = p-&gt;next;</span><br><span class=\"line\">                    q = q-&gt;next;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>For example, the following two linked lists:</p>\n<p>A:          a1 → a2<br>\n​                   ↘<br>\n​                     c1 → c2 → c3<br>\n​                   ↗<br>\nB:     b1 → b2 → b3<br>\nbegin to intersect at node c1.</p>\n<p>Notes:</p>\n<p>If the two linked lists have no intersection at all, return null.<br>\nThe linked lists must retain their original structure after the function returns.<br>\nYou may assume there are no cycles anywhere in the entire linked structure.<br>\nYour code should preferably run in O(n) time and use only O(1) memory.</p>\n<p><strong>解决思路：</strong></p>\n<p>这题要求的时间复杂度是O(n)和空间复杂度O(1)，所以只能用以下方法解决：(1)首先分别求出两个单链表的长度lenA和lenB；(2)求出两个链表的长度差，然后将长链表的比较位置移到长度差的位置，因为这些位置上的两个链表的元素是肯定不相同的；(3)此时，两个链表的长度一致，在分别依次比较元素即可</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * struct ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode *next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">ListNode *<span class=\"title\">getIntersectionNode</span><span class=\"params\">(ListNode *headA, ListNode *headB)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(headA == <span class=\"literal\">NULL</span> || headB == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> lenA,lenB;</span><br><span class=\"line\">        lenA = <span class=\"number\">0</span>,lenB = <span class=\"number\">0</span>;</span><br><span class=\"line\">        ListNode *p,*q;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p = headA;p != <span class=\"literal\">NULL</span>;p=p-&gt;next)</span><br><span class=\"line\">            lenA ++;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(q = headB;q != <span class=\"literal\">NULL</span>;q=q-&gt;next)</span><br><span class=\"line\">            lenB ++;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> diff = <span class=\"built_in\">abs</span>(lenB-lenA);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lenA &gt; lenB)&#123;</span><br><span class=\"line\">            p = headA;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; diff;i++)</span><br><span class=\"line\">                p = p-&gt;next;</span><br><span class=\"line\">            q = headB;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> &amp;&amp; q != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(p-&gt;val == q-&gt;val)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    p = p-&gt;next;</span><br><span class=\"line\">                    q = q-&gt;next;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            p = headB;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; diff;i++)</span><br><span class=\"line\">                p = p-&gt;next;</span><br><span class=\"line\">            q = headA;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> &amp;&amp; q != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(p-&gt;val == q-&gt;val)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    p = p-&gt;next;</span><br><span class=\"line\">                    q = q-&gt;next;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Linked List Cycle","comments":1,"abbrlink":"c94099d8","date":"2018-11-15T16:20:05.000Z","_content":"\n**问题描述：**\n\nGiven a linked list, determine if it has a cycle in it.\n\nFollow up:\nCan you solve it without using extra space?\n\n**解决思路：**\n\n采用快慢指针的方法，快指针一次走两步，慢指针一次走一步，如果链表中有环的话，经过走一定的步数之后快慢指针一定会相遇的，当然如果没有环就需考虑循环结束的条件，这里主要要考虑快指针的情况即可。\n\n**代码：**\n\n```C++\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head == NULL)\n            return false;\n        if(head->next == NULL)\n            return false;\n        ListNode *p,*q;\n        p = head;\n        q = head;\n       while(p != NULL && p->next != NULL)\n        {\n            p = p->next->next;\n            q = q->next;\n            if(p == q)\n                return true;\n            \n        }\n        return false;\n    }\n};\n```\n\n","source":"_posts/Linked-List-Cycle.md","raw":"---\ntitle: Linked List Cycle\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - List\nabbrlink: c94099d8\ndate: 2018-11-16 00:20:05\n---\n\n**问题描述：**\n\nGiven a linked list, determine if it has a cycle in it.\n\nFollow up:\nCan you solve it without using extra space?\n\n**解决思路：**\n\n采用快慢指针的方法，快指针一次走两步，慢指针一次走一步，如果链表中有环的话，经过走一定的步数之后快慢指针一定会相遇的，当然如果没有环就需考虑循环结束的条件，这里主要要考虑快指针的情况即可。\n\n**代码：**\n\n```C++\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head == NULL)\n            return false;\n        if(head->next == NULL)\n            return false;\n        ListNode *p,*q;\n        p = head;\n        q = head;\n       while(p != NULL && p->next != NULL)\n        {\n            p = p->next->next;\n            q = q->next;\n            if(p == q)\n                return true;\n            \n        }\n        return false;\n    }\n};\n```\n\n","slug":"Linked-List-Cycle","published":1,"updated":"2018-11-15T16:25:35.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapm000zgvyglkkb2907","content":"<p><strong>问题描述：</strong></p>\n<p>Given a linked list, determine if it has a cycle in it.</p>\n<p>Follow up:<br>\nCan you solve it without using extra space?</p>\n<p><strong>解决思路：</strong></p>\n<p>采用快慢指针的方法，快指针一次走两步，慢指针一次走一步，如果链表中有环的话，经过走一定的步数之后快慢指针一定会相遇的，当然如果没有环就需考虑循环结束的条件，这里主要要考虑快指针的情况即可。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * struct ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode *next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">hasCycle</span><span class=\"params\">(ListNode *head)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head-&gt;next == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        ListNode *p,*q;</span><br><span class=\"line\">        p = head;</span><br><span class=\"line\">        q = head;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> &amp;&amp; p-&gt;next != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            p = p-&gt;next-&gt;next;</span><br><span class=\"line\">            q = q-&gt;next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p == q)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a linked list, determine if it has a cycle in it.</p>\n<p>Follow up:<br>\nCan you solve it without using extra space?</p>\n<p><strong>解决思路：</strong></p>\n<p>采用快慢指针的方法，快指针一次走两步，慢指针一次走一步，如果链表中有环的话，经过走一定的步数之后快慢指针一定会相遇的，当然如果没有环就需考虑循环结束的条件，这里主要要考虑快指针的情况即可。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * struct ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode *next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">hasCycle</span><span class=\"params\">(ListNode *head)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head-&gt;next == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        ListNode *p,*q;</span><br><span class=\"line\">        p = head;</span><br><span class=\"line\">        q = head;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span> &amp;&amp; p-&gt;next != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            p = p-&gt;next-&gt;next;</span><br><span class=\"line\">            q = q-&gt;next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p == q)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Majority Element","comments":1,"abbrlink":"ed8e0613","date":"2018-11-15T16:12:02.000Z","_content":"\n**问题描述：**\n\nGiven an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.\n\nYou may assume that the array is non-empty and the majority element always exist in the array.\n\n**解决思路：**\n\n这是一个求解数组主元素的题目，数组的主元素是指数组中出现次数超过一半的元素。此题是假设数组非空并且主元素存在，所以比较简单。主元素总会比其他元素多，我们设置两个变量maj_index用于记录主元素的位置，count用于记录主元素出现的次数，然后一次比较数组元素，如果相同则count加1，不同则减1，若count为零，则替换maj_index，并将count置为1.\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int majorityElement(vector<int> &num) {\n        int maj_index,count;\n        maj_index = 0;\n        count = 1;\n        for(int i =1; i < num.size(); i++){\n            if (num[i] == num[maj_index])\n                count ++;\n            else\n                count --;\n            if (count == 0){\n                maj_index = i;\n                count = 1;\n            }\n        }\n        return num[maj_index];\n    }\n};\n```\n\n","source":"_posts/Majority-Element.md","raw":"---\ntitle: Majority Element\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: ed8e0613\ndate: 2018-11-16 00:12:02\n---\n\n**问题描述：**\n\nGiven an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.\n\nYou may assume that the array is non-empty and the majority element always exist in the array.\n\n**解决思路：**\n\n这是一个求解数组主元素的题目，数组的主元素是指数组中出现次数超过一半的元素。此题是假设数组非空并且主元素存在，所以比较简单。主元素总会比其他元素多，我们设置两个变量maj_index用于记录主元素的位置，count用于记录主元素出现的次数，然后一次比较数组元素，如果相同则count加1，不同则减1，若count为零，则替换maj_index，并将count置为1.\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int majorityElement(vector<int> &num) {\n        int maj_index,count;\n        maj_index = 0;\n        count = 1;\n        for(int i =1; i < num.size(); i++){\n            if (num[i] == num[maj_index])\n                count ++;\n            else\n                count --;\n            if (count == 0){\n                maj_index = i;\n                count = 1;\n            }\n        }\n        return num[maj_index];\n    }\n};\n```\n\n","slug":"Majority-Element","published":1,"updated":"2018-11-15T16:14:30.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapr0013gvygna6wai4g","content":"<p><strong>问题描述：</strong></p>\n<p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p><strong>解决思路：</strong></p>\n<p>这是一个求解数组主元素的题目，数组的主元素是指数组中出现次数超过一半的元素。此题是假设数组非空并且主元素存在，所以比较简单。主元素总会比其他元素多，我们设置两个变量maj_index用于记录主元素的位置，count用于记录主元素出现的次数，然后一次比较数组元素，如果相同则count加1，不同则减1，若count为零，则替换maj_index，并将count置为1.</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">majorityElement</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maj_index,count;</span><br><span class=\"line\">        maj_index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">1</span>; i &lt; num.size(); i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num[i] == num[maj_index])</span><br><span class=\"line\">                count ++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                count --;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (count == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                maj_index = i;</span><br><span class=\"line\">                count = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num[maj_index];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p><strong>解决思路：</strong></p>\n<p>这是一个求解数组主元素的题目，数组的主元素是指数组中出现次数超过一半的元素。此题是假设数组非空并且主元素存在，所以比较简单。主元素总会比其他元素多，我们设置两个变量maj_index用于记录主元素的位置，count用于记录主元素出现的次数，然后一次比较数组元素，如果相同则count加1，不同则减1，若count为零，则替换maj_index，并将count置为1.</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">majorityElement</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &amp;num)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maj_index,count;</span><br><span class=\"line\">        maj_index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">1</span>; i &lt; num.size(); i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num[i] == num[maj_index])</span><br><span class=\"line\">                count ++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                count --;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (count == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                maj_index = i;</span><br><span class=\"line\">                count = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num[maj_index];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Maximum Depth of Binary Tree","comments":1,"abbrlink":"2c2d1f13","date":"2018-11-15T16:47:11.000Z","_content":"\n**问题描述：**\nGiven a binary tree, find its maximum depth.\n\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\n\n**解决思路：**\n\nDFS分别求出左子树和右子树的最大深度然后比较即可\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode *root) {\n        if (root == NULL)\n            return 0;\n        int l = maxDepth(root->left);\n        int r = maxDepth(root->right);\n        return l>r?1+l:1+r;\n        \n    }\n};\n```","source":"_posts/Maximum-Depth-of-Binary-Tree.md","raw":"---\ntitle: Maximum Depth of Binary Tree\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\n  - DFS\nabbrlink: 2c2d1f13\ndate: 2018-11-16 00:47:11\n---\n\n**问题描述：**\nGiven a binary tree, find its maximum depth.\n\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\n\n**解决思路：**\n\nDFS分别求出左子树和右子树的最大深度然后比较即可\n\n**代码：**\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode *root) {\n        if (root == NULL)\n            return 0;\n        int l = maxDepth(root->left);\n        int r = maxDepth(root->right);\n        return l>r?1+l:1+r;\n        \n    }\n};\n```","slug":"Maximum-Depth-of-Binary-Tree","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaps0016gvyg6a0j8y0a","content":"<p><strong>问题描述：</strong><br>\nGiven a binary tree, find its maximum depth.</p>\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n<p><strong>解决思路：</strong></p>\n<p>DFS分别求出左子树和右子树的最大深度然后比较即可</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">maxDepth</span><span class=\"params\">(TreeNode *root)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = maxDepth(root-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> r = maxDepth(root-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> l&gt;r?<span class=\"number\">1</span>+l:<span class=\"number\">1</span>+r;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong><br>\nGiven a binary tree, find its maximum depth.</p>\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n<p><strong>解决思路：</strong></p>\n<p>DFS分别求出左子树和右子树的最大深度然后比较即可</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">maxDepth</span><span class=\"params\">(TreeNode *root)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = maxDepth(root-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> r = maxDepth(root-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> l&gt;r?<span class=\"number\">1</span>+l:<span class=\"number\">1</span>+r;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"Palindrome Number","comments":1,"abbrlink":"b216f26b","date":"2018-11-15T16:06:52.000Z","_content":"\n**问题描述：**\n\nDetermine whether an integer is a palindrome. Do this without extra space.\n\nclick to show spoilers.\n\nSome hints:\nCould negative integers be palindromes? (ie, -1)\n\nIf you are thinking of converting the integer to string, note the restriction of using extra space.\n\nYou could also try reversing an integer. However, if you have solved the problem \"Reverse Integer\", you know that the reversed integer might overflow. How would you handle such case?\n\nThere is a more generic way of solving this problem.\n\n**解决思路：**\n\n这里要求不能使用额外的空间，基本思路是首先求出数据的位数，然后编写一个函数能够求出每一位的数字，然后遍历比较即可。\n\n**代码1：**\n\n```C++\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        if (x < 0)\n            return false;\n        int num = 0;\n        int y = x;\n        while( y != 0){\n            num ++;\n            y /= 10;\n        }\n        int i,j;\n        for(i = 1, j = num; i < j;i++,j--){\n            if (search(x,num,i) != search(x,num,j))\n                return false;\n        }\n        return true;\n    }\n    int search(int x,int n,int index){\n        int d = pow(10,n-index);\n        int y = x/d;\n        return y%10;\n    }\n};\n```\n\n\n\n**代码2：**\n\n```C++\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        if (x < 0)\n            return false;\n        int z = x;\n        int y = 0;\n        while( x != 0){\n            y *= 10;\n            y += x%10;\n            x /= 10;\n        }\n        if(z == y)\n            return true;\n        else\n            return false;\n    }\n};\n```\n\n","source":"_posts/Palindrome-Number.md","raw":"---\ntitle: Palindrome Number\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: b216f26b\ndate: 2018-11-16 00:06:52\n---\n\n**问题描述：**\n\nDetermine whether an integer is a palindrome. Do this without extra space.\n\nclick to show spoilers.\n\nSome hints:\nCould negative integers be palindromes? (ie, -1)\n\nIf you are thinking of converting the integer to string, note the restriction of using extra space.\n\nYou could also try reversing an integer. However, if you have solved the problem \"Reverse Integer\", you know that the reversed integer might overflow. How would you handle such case?\n\nThere is a more generic way of solving this problem.\n\n**解决思路：**\n\n这里要求不能使用额外的空间，基本思路是首先求出数据的位数，然后编写一个函数能够求出每一位的数字，然后遍历比较即可。\n\n**代码1：**\n\n```C++\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        if (x < 0)\n            return false;\n        int num = 0;\n        int y = x;\n        while( y != 0){\n            num ++;\n            y /= 10;\n        }\n        int i,j;\n        for(i = 1, j = num; i < j;i++,j--){\n            if (search(x,num,i) != search(x,num,j))\n                return false;\n        }\n        return true;\n    }\n    int search(int x,int n,int index){\n        int d = pow(10,n-index);\n        int y = x/d;\n        return y%10;\n    }\n};\n```\n\n\n\n**代码2：**\n\n```C++\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        if (x < 0)\n            return false;\n        int z = x;\n        int y = 0;\n        while( x != 0){\n            y *= 10;\n            y += x%10;\n            x /= 10;\n        }\n        if(z == y)\n            return true;\n        else\n            return false;\n    }\n};\n```\n\n","slug":"Palindrome-Number","published":1,"updated":"2018-11-15T16:14:30.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapu001agvyg5g6tgtyv","content":"<p><strong>问题描述：</strong></p>\n<p>Determine whether an integer is a palindrome. Do this without extra space.</p>\n<p>click to show spoilers.</p>\n<p>Some hints:<br>\nCould negative integers be palindromes? (ie, -1)</p>\n<p>If you are thinking of converting the integer to string, note the restriction of using extra space.</p>\n<p>You could also try reversing an integer. However, if you have solved the problem “Reverse Integer”, you know that the reversed integer might overflow. How would you handle such case?</p>\n<p>There is a more generic way of solving this problem.</p>\n<p><strong>解决思路：</strong></p>\n<p>这里要求不能使用额外的空间，基本思路是首先求出数据的位数，然后编写一个函数能够求出每一位的数字，然后遍历比较即可。</p>\n<p><strong>代码1：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isPalindrome</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = x;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>( y != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            num ++;</span><br><span class=\"line\">            y /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>, j = num; i &lt; j;i++,j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (search(x,num,i) != search(x,num,j))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">search</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> d = <span class=\"built_in\">pow</span>(<span class=\"number\">10</span>,n-index);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = x/d;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> y%<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>代码2：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isPalindrome</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> z = x;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>( x != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            y *= <span class=\"number\">10</span>;</span><br><span class=\"line\">            y += x%<span class=\"number\">10</span>;</span><br><span class=\"line\">            x /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(z == y)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Determine whether an integer is a palindrome. Do this without extra space.</p>\n<p>click to show spoilers.</p>\n<p>Some hints:<br>\nCould negative integers be palindromes? (ie, -1)</p>\n<p>If you are thinking of converting the integer to string, note the restriction of using extra space.</p>\n<p>You could also try reversing an integer. However, if you have solved the problem “Reverse Integer”, you know that the reversed integer might overflow. How would you handle such case?</p>\n<p>There is a more generic way of solving this problem.</p>\n<p><strong>解决思路：</strong></p>\n<p>这里要求不能使用额外的空间，基本思路是首先求出数据的位数，然后编写一个函数能够求出每一位的数字，然后遍历比较即可。</p>\n<p><strong>代码1：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isPalindrome</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = x;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>( y != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            num ++;</span><br><span class=\"line\">            y /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>, j = num; i &lt; j;i++,j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (search(x,num,i) != search(x,num,j))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">search</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> d = <span class=\"built_in\">pow</span>(<span class=\"number\">10</span>,n-index);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = x/d;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> y%<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>代码2：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isPalindrome</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> z = x;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>( x != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            y *= <span class=\"number\">10</span>;</span><br><span class=\"line\">            y += x%<span class=\"number\">10</span>;</span><br><span class=\"line\">            x /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(z == y)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Remove Duplicates from Sorted List","comments":1,"abbrlink":"1d8b65b1","date":"2018-11-15T16:18:19.000Z","_content":"\n**问题描述：**\n\nGiven a sorted linked list, delete all duplicates such that each element appear only once.\n\nFor example,\nGiven 1->1->2, return 1->2.\nGiven 1->1->2->3->3, return 1->2->3.\n\n**解决思路：**\n\n定义两个指针base和cmp,base指针指向被比较的结点，cmp指向base的后一个结点，由于链表是有序的，所以cmp找到第一个不等于base的结点之后，就分别将base和cmp后移。如果相等，只要将相等的结点删除即可。\n\n**代码:**\n\n```C++\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *deleteDuplicates(ListNode *head) {\n        if(head == NULL || head->next == NULL)\n            return head;\n        ListNode *base,*cmp;\n        base = head;\n        cmp = base->next;\n        while(cmp != NULL){\n            ListNode *tmp;\n            tmp = cmp->next;\n            if(cmp->val == base->val){\n                base->next = tmp;\n                free(cmp);\n                cmp = tmp;\n            }\n            else{\n                base = cmp;\n                cmp = tmp;\n            }\n            \n        }\n        return head;\n        \n    }\n};\n```\n\n","source":"_posts/Remove-Duplicates-from-Sorted-List.md","raw":"---\ntitle: Remove Duplicates from Sorted List\ncomments: true\ncategories:\n  - leetcode\ntags: \n  - C++\n  - List\nabbrlink: 1d8b65b1\ndate: 2018-11-16 00:18:19\n---\n\n**问题描述：**\n\nGiven a sorted linked list, delete all duplicates such that each element appear only once.\n\nFor example,\nGiven 1->1->2, return 1->2.\nGiven 1->1->2->3->3, return 1->2->3.\n\n**解决思路：**\n\n定义两个指针base和cmp,base指针指向被比较的结点，cmp指向base的后一个结点，由于链表是有序的，所以cmp找到第一个不等于base的结点之后，就分别将base和cmp后移。如果相等，只要将相等的结点删除即可。\n\n**代码:**\n\n```C++\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *deleteDuplicates(ListNode *head) {\n        if(head == NULL || head->next == NULL)\n            return head;\n        ListNode *base,*cmp;\n        base = head;\n        cmp = base->next;\n        while(cmp != NULL){\n            ListNode *tmp;\n            tmp = cmp->next;\n            if(cmp->val == base->val){\n                base->next = tmp;\n                free(cmp);\n                cmp = tmp;\n            }\n            else{\n                base = cmp;\n                cmp = tmp;\n            }\n            \n        }\n        return head;\n        \n    }\n};\n```\n\n","slug":"Remove-Duplicates-from-Sorted-List","published":1,"updated":"2018-11-15T16:28:43.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapv001dgvygqups8yvt","content":"<p><strong>问题描述：</strong></p>\n<p>Given a sorted linked list, delete all duplicates such that each element appear only once.</p>\n<p>For example,<br>\nGiven 1-&gt;1-&gt;2, return 1-&gt;2.<br>\nGiven 1-&gt;1-&gt;2-&gt;3-&gt;3, return 1-&gt;2-&gt;3.</p>\n<p><strong>解决思路：</strong></p>\n<p>定义两个指针base和cmp,base指针指向被比较的结点，cmp指向base的后一个结点，由于链表是有序的，所以cmp找到第一个不等于base的结点之后，就分别将base和cmp后移。如果相等，只要将相等的结点删除即可。</p>\n<p><strong>代码:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * struct ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode *next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">ListNode *<span class=\"title\">deleteDuplicates</span><span class=\"params\">(ListNode *head)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"literal\">NULL</span> || head-&gt;next == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        ListNode *base,*cmp;</span><br><span class=\"line\">        base = head;</span><br><span class=\"line\">        cmp = base-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(cmp != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            ListNode *tmp;</span><br><span class=\"line\">            tmp = cmp-&gt;next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cmp-&gt;val == base-&gt;val)&#123;</span><br><span class=\"line\">                base-&gt;next = tmp;</span><br><span class=\"line\">                <span class=\"built_in\">free</span>(cmp);</span><br><span class=\"line\">                cmp = tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                base = cmp;</span><br><span class=\"line\">                cmp = tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given a sorted linked list, delete all duplicates such that each element appear only once.</p>\n<p>For example,<br>\nGiven 1-&gt;1-&gt;2, return 1-&gt;2.<br>\nGiven 1-&gt;1-&gt;2-&gt;3-&gt;3, return 1-&gt;2-&gt;3.</p>\n<p><strong>解决思路：</strong></p>\n<p>定义两个指针base和cmp,base指针指向被比较的结点，cmp指向base的后一个结点，由于链表是有序的，所以cmp找到第一个不等于base的结点之后，就分别将base和cmp后移。如果相等，只要将相等的结点删除即可。</p>\n<p><strong>代码:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * struct ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode *next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">ListNode *<span class=\"title\">deleteDuplicates</span><span class=\"params\">(ListNode *head)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"literal\">NULL</span> || head-&gt;next == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        ListNode *base,*cmp;</span><br><span class=\"line\">        base = head;</span><br><span class=\"line\">        cmp = base-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(cmp != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            ListNode *tmp;</span><br><span class=\"line\">            tmp = cmp-&gt;next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cmp-&gt;val == base-&gt;val)&#123;</span><br><span class=\"line\">                base-&gt;next = tmp;</span><br><span class=\"line\">                <span class=\"built_in\">free</span>(cmp);</span><br><span class=\"line\">                cmp = tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                base = cmp;</span><br><span class=\"line\">                cmp = tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Same Tree","comments":1,"abbrlink":"f4467b0e","date":"2018-11-15T16:45:40.000Z","_content":"\n**问题描述：**\n\nGiven two binary trees, write a function to check if they are equal or not.\n\nTwo binary trees are considered equal if they are structurally identical and the nodes have the same value.\n\n**解决思路：**\n\nDFS遍历两颗二叉树的结点，只要有一个不同就返回false\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSameTree(TreeNode *p, TreeNode *q) {\n        if(p == NULL)\n        {\n            if (q == NULL)\n                return true;\n            return false;\n        }\n        if(q == NULL)\n        {\n            if (p == NULL)\n                return true;\n            return false;\n        }\n        if (p->val != q->val)\n            return false;\n        bool lsame = isSameTree(p->left,q->left);\n        bool rsame = isSameTree(p->right,q->right);\n        if(lsame==false||rsame==false)\n            return false;\n        return true;\n        \n    }\n};\n```\n\n","source":"_posts/Same-Tree.md","raw":"---\ntitle: Same Tree\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\n  - DFS\nabbrlink: f4467b0e\ndate: 2018-11-16 00:45:40\n---\n\n**问题描述：**\n\nGiven two binary trees, write a function to check if they are equal or not.\n\nTwo binary trees are considered equal if they are structurally identical and the nodes have the same value.\n\n**解决思路：**\n\nDFS遍历两颗二叉树的结点，只要有一个不同就返回false\n\n```C++\n/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSameTree(TreeNode *p, TreeNode *q) {\n        if(p == NULL)\n        {\n            if (q == NULL)\n                return true;\n            return false;\n        }\n        if(q == NULL)\n        {\n            if (p == NULL)\n                return true;\n            return false;\n        }\n        if (p->val != q->val)\n            return false;\n        bool lsame = isSameTree(p->left,q->left);\n        bool rsame = isSameTree(p->right,q->right);\n        if(lsame==false||rsame==false)\n            return false;\n        return true;\n        \n    }\n};\n```\n\n","slug":"Same-Tree","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapx001hgvygvg6rbql8","content":"<p><strong>问题描述：</strong></p>\n<p>Given two binary trees, write a function to check if they are equal or not.</p>\n<p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.</p>\n<p><strong>解决思路：</strong></p>\n<p>DFS遍历两颗二叉树的结点，只要有一个不同就返回false</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isSameTree</span><span class=\"params\">(TreeNode *p, TreeNode *q)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (q == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p-&gt;val != q-&gt;val)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> lsame = isSameTree(p-&gt;left,q-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> rsame = isSameTree(p-&gt;right,q-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lsame==<span class=\"literal\">false</span>||rsame==<span class=\"literal\">false</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given two binary trees, write a function to check if they are equal or not.</p>\n<p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.</p>\n<p><strong>解决思路：</strong></p>\n<p>DFS遍历两颗二叉树的结点，只要有一个不同就返回false</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for binary tree</span></span><br><span class=\"line\"><span class=\"comment\"> * struct TreeNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *left;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode *right;</span></span><br><span class=\"line\"><span class=\"comment\"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isSameTree</span><span class=\"params\">(TreeNode *p, TreeNode *q)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (q == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p-&gt;val != q-&gt;val)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> lsame = isSameTree(p-&gt;left,q-&gt;left);</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> rsame = isSameTree(p-&gt;right,q-&gt;right);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lsame==<span class=\"literal\">false</span>||rsame==<span class=\"literal\">false</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Single Number","comments":1,"abbrlink":"f249b7a1","date":"2018-11-15T16:49:48.000Z","_content":"\n**问题描述：**\n\nGiven an array of integers, every element appears twice except for one. Find that single one.\n\nNote:\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n\n**解决思路：**\n\n本题主要是求出一组数组中唯一个没有相同元素的数字，这里要求时间复杂度为O(n)，空间复杂度为O(1)，所以我们只需遍历一次数组就必须得到结果，并且不能使用其他额外的内存空间。这里采用异或运算，能够保证相同的元素运算结果为0，所以最终便能找个那个唯一的数字。\n\n**代码：**\n\n```C++\nclass Solution {\n \npublic:\n \n    int singleNumber(int A[], int n) {\n \n        int result = 0;\n \n        for(int i = 0;i < n; i++)\n \n            result ^= A[i];\n \n        return result;\n \n    }\n \n};\n```\n\n","source":"_posts/Single-Number.md","raw":"---\ntitle: Single Number\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\nabbrlink: f249b7a1\ndate: 2018-11-16 00:49:48\n---\n\n**问题描述：**\n\nGiven an array of integers, every element appears twice except for one. Find that single one.\n\nNote:\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n\n**解决思路：**\n\n本题主要是求出一组数组中唯一个没有相同元素的数字，这里要求时间复杂度为O(n)，空间复杂度为O(1)，所以我们只需遍历一次数组就必须得到结果，并且不能使用其他额外的内存空间。这里采用异或运算，能够保证相同的元素运算结果为0，所以最终便能找个那个唯一的数字。\n\n**代码：**\n\n```C++\nclass Solution {\n \npublic:\n \n    int singleNumber(int A[], int n) {\n \n        int result = 0;\n \n        for(int i = 0;i < n; i++)\n \n            result ^= A[i];\n \n        return result;\n \n    }\n \n};\n```\n\n","slug":"Single-Number","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsapy001kgvyg2saufptf","content":"<p><strong>问题描述：</strong></p>\n<p>Given an array of integers, every element appears twice except for one. Find that single one.</p>\n<p>Note:<br>\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>\n<p><strong>解决思路：</strong></p>\n<p>本题主要是求出一组数组中唯一个没有相同元素的数字，这里要求时间复杂度为O(n)，空间复杂度为O(1)，所以我们只需遍历一次数组就必须得到结果，并且不能使用其他额外的内存空间。这里采用异或运算，能够保证相同的元素运算结果为0，所以最终便能找个那个唯一的数字。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n; i++)</span><br><span class=\"line\"> </span><br><span class=\"line\">            result ^= A[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given an array of integers, every element appears twice except for one. Find that single one.</p>\n<p>Note:<br>\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>\n<p><strong>解决思路：</strong></p>\n<p>本题主要是求出一组数组中唯一个没有相同元素的数字，这里要求时间复杂度为O(n)，空间复杂度为O(1)，所以我们只需遍历一次数组就必须得到结果，并且不能使用其他额外的内存空间。这里采用异或运算，能够保证相同的元素运算结果为0，所以最终便能找个那个唯一的数字。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n; i++)</span><br><span class=\"line\"> </span><br><span class=\"line\">            result ^= A[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Unique Binary Search Trees","comments":1,"abbrlink":"20d2cb13","date":"2018-11-15T16:42:32.000Z","_content":"\n**问题描述：**\n\nGiven n, how many structurally unique BST's (binary search trees) that store values 1...n?\n\nFor example,\nGiven n = 3, there are a total of 5 unique BST's.\n\n```C++\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n```\n\n**解决思路：**\n\n首先分析一下当n=0,1,2这三种情况下BTS个数，我们可以得到当n=0,1时，BTS个数为1，当n=2时，BTS个数为2.这就可以转化为一个递归求解的问题，我们将根结点从1到n依次代替，这样左右子树结点的个数就会发生变化，我们在分别求解左右子树BTS的个数，以此递归求解便可得到BTS的总数目。\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int numTrees(int n) {\n        if(n == 1 || n == 0)\n            return 1;\n        int num = 0;\n        for(int i = 1; i <= n; i++)\n            num += numTrees(i-1) * numTrees(n-i);\n        return num;\n    }\n};\n```\n\n","source":"_posts/Unique-Binary-Search-Trees.md","raw":"---\ntitle: Unique Binary Search Trees\ncomments: true\ncategories:\n  - leetcode\ntags:\n  - C++\n  - Binary Tree\n  - BST\nabbrlink: 20d2cb13\ndate: 2018-11-16 00:42:32\n---\n\n**问题描述：**\n\nGiven n, how many structurally unique BST's (binary search trees) that store values 1...n?\n\nFor example,\nGiven n = 3, there are a total of 5 unique BST's.\n\n```C++\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n```\n\n**解决思路：**\n\n首先分析一下当n=0,1,2这三种情况下BTS个数，我们可以得到当n=0,1时，BTS个数为1，当n=2时，BTS个数为2.这就可以转化为一个递归求解的问题，我们将根结点从1到n依次代替，这样左右子树结点的个数就会发生变化，我们在分别求解左右子树BTS的个数，以此递归求解便可得到BTS的总数目。\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    int numTrees(int n) {\n        if(n == 1 || n == 0)\n            return 1;\n        int num = 0;\n        for(int i = 1; i <= n; i++)\n            num += numTrees(i-1) * numTrees(n-i);\n        return num;\n    }\n};\n```\n\n","slug":"Unique-Binary-Search-Trees","published":1,"updated":"2018-11-15T16:50:59.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaq1001ogvyg4oc5kc4m","content":"<p><strong>问题描述：</strong></p>\n<p>Given n, how many structurally unique BST’s (binary search trees) that store values 1…n?</p>\n<p>For example,<br>\nGiven n = 3, there are a total of 5 unique BST’s.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>         <span class=\"number\">3</span>     <span class=\"number\">3</span>      <span class=\"number\">2</span>      <span class=\"number\">1</span></span><br><span class=\"line\"> \\       /     /      / \\      \\</span><br><span class=\"line\">  <span class=\"number\">3</span>     <span class=\"number\">2</span>     <span class=\"number\">1</span>      <span class=\"number\">1</span>   <span class=\"number\">3</span>      <span class=\"number\">2</span></span><br><span class=\"line\"> /     /       \\                 \\</span><br><span class=\"line\"><span class=\"number\">2</span>     <span class=\"number\">1</span>         <span class=\"number\">2</span>                 <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p><strong>解决思路：</strong></p>\n<p>首先分析一下当n=0,1,2这三种情况下BTS个数，我们可以得到当n=0,1时，BTS个数为1，当n=2时，BTS个数为2.这就可以转化为一个递归求解的问题，我们将根结点从1到n依次代替，这样左右子树结点的个数就会发生变化，我们在分别求解左右子树BTS的个数，以此递归求解便可得到BTS的总数目。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">numTrees</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span> || n == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">            num += numTrees(i<span class=\"number\">-1</span>) * numTrees(n-i);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>Given n, how many structurally unique BST’s (binary search trees) that store values 1…n?</p>\n<p>For example,<br>\nGiven n = 3, there are a total of 5 unique BST’s.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>         <span class=\"number\">3</span>     <span class=\"number\">3</span>      <span class=\"number\">2</span>      <span class=\"number\">1</span></span><br><span class=\"line\"> \\       /     /      / \\      \\</span><br><span class=\"line\">  <span class=\"number\">3</span>     <span class=\"number\">2</span>     <span class=\"number\">1</span>      <span class=\"number\">1</span>   <span class=\"number\">3</span>      <span class=\"number\">2</span></span><br><span class=\"line\"> /     /       \\                 \\</span><br><span class=\"line\"><span class=\"number\">2</span>     <span class=\"number\">1</span>         <span class=\"number\">2</span>                 <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p><strong>解决思路：</strong></p>\n<p>首先分析一下当n=0,1,2这三种情况下BTS个数，我们可以得到当n=0,1时，BTS个数为1，当n=2时，BTS个数为2.这就可以转化为一个递归求解的问题，我们将根结点从1到n依次代替，这样左右子树结点的个数就会发生变化，我们在分别求解左右子树BTS的个数，以此递归求解便可得到BTS的总数目。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">numTrees</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span> || n == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">            num += numTrees(i<span class=\"number\">-1</span>) * numTrees(n-i);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"ZigZag Conversion","comments":1,"abbrlink":"61984fa2","date":"2018-11-15T16:16:46.000Z","_content":"\n**问题描述：**\n\nThe string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\nP   A   H   N\nA P L S I I G\nY   I   R\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows:\n\nstring convert(string text, int nRows);\nconvert(\"PAYPALISHIRING\", 3) should return \"PAHNAPLSIIGYIR\".\n\n**解决思路：**\n\n找出规律即可，每次的周期为2*nRows-2,但是在1到nRows-1的行数还需要判断周期为2*（nRows-1-i）的元素，i是处于1到nRows-1的行数。\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    string convert(string s, int nRows) {\n        if(s.empty() || nRows <= 1 || s.length() < nRows)\n            return s;\n        string result;\n        int cycle = 2 * nRows - 2;\n        for(int i = 0; i < nRows; i++){\n            for(int j = i; j < s.length(); j += cycle){\n                result.push_back(s[j]);\n                if( i > 0 && i < nRows-1){\n                    if (j + 2 *(nRows - 1 - i) < s.length())\n                        result.push_back(s[j + 2 *(nRows - 1 - i)]);\n                }\n            }\n        }\n        return result;\n    }\n};\n```\n\n","source":"_posts/ZigZag-Conversion.md","raw":"---\ntitle: ZigZag Conversion\ncomments: true\ncategories:\n  - leetcode\ntags: C++\nabbrlink: 61984fa2\ndate: 2018-11-16 00:16:46\n---\n\n**问题描述：**\n\nThe string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\nP   A   H   N\nA P L S I I G\nY   I   R\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows:\n\nstring convert(string text, int nRows);\nconvert(\"PAYPALISHIRING\", 3) should return \"PAHNAPLSIIGYIR\".\n\n**解决思路：**\n\n找出规律即可，每次的周期为2*nRows-2,但是在1到nRows-1的行数还需要判断周期为2*（nRows-1-i）的元素，i是处于1到nRows-1的行数。\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    string convert(string s, int nRows) {\n        if(s.empty() || nRows <= 1 || s.length() < nRows)\n            return s;\n        string result;\n        int cycle = 2 * nRows - 2;\n        for(int i = 0; i < nRows; i++){\n            for(int j = i; j < s.length(); j += cycle){\n                result.push_back(s[j]);\n                if( i > 0 && i < nRows-1){\n                    if (j + 2 *(nRows - 1 - i) < s.length())\n                        result.push_back(s[j + 2 *(nRows - 1 - i)]);\n                }\n            }\n        }\n        return result;\n    }\n};\n```\n\n","slug":"ZigZag-Conversion","published":1,"updated":"2018-11-15T16:25:35.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaq2001rgvyg7pdy2p7l","content":"<p><strong>问题描述：</strong></p>\n<p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n<p>P   A   H   N<br>\nA P L S I I G<br>\nY   I   R<br>\nAnd then read line by line: &quot;PAHNAPLSIIGYIR&quot;<br>\nWrite the code that will take a string and make this conversion given a number of rows:</p>\n<p>string convert(string text, int nRows);<br>\nconvert(“PAYPALISHIRING”, 3) should return “PAHNAPLSIIGYIR”.</p>\n<p><strong>解决思路：</strong></p>\n<p>找出规律即可，每次的周期为2<em>nRows-2,但是在1到nRows-1的行数还需要判断周期为2</em>（nRows-1-i）的元素，i是处于1到nRows-1的行数。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">convert</span><span class=\"params\">(<span class=\"built_in\">string</span> s, <span class=\"keyword\">int</span> nRows)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.empty() || nRows &lt;= <span class=\"number\">1</span> || s.length() &lt; nRows)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> result;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cycle = <span class=\"number\">2</span> * nRows - <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nRows; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i; j &lt; s.length(); j += cycle)&#123;</span><br><span class=\"line\">                result.push_back(s[j]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( i &gt; <span class=\"number\">0</span> &amp;&amp; i &lt; nRows<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (j + <span class=\"number\">2</span> *(nRows - <span class=\"number\">1</span> - i) &lt; s.length())</span><br><span class=\"line\">                        result.push_back(s[j + <span class=\"number\">2</span> *(nRows - <span class=\"number\">1</span> - i)]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n<p>P   A   H   N<br>\nA P L S I I G<br>\nY   I   R<br>\nAnd then read line by line: &quot;PAHNAPLSIIGYIR&quot;<br>\nWrite the code that will take a string and make this conversion given a number of rows:</p>\n<p>string convert(string text, int nRows);<br>\nconvert(“PAYPALISHIRING”, 3) should return “PAHNAPLSIIGYIR”.</p>\n<p><strong>解决思路：</strong></p>\n<p>找出规律即可，每次的周期为2<em>nRows-2,但是在1到nRows-1的行数还需要判断周期为2</em>（nRows-1-i）的元素，i是处于1到nRows-1的行数。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">convert</span><span class=\"params\">(<span class=\"built_in\">string</span> s, <span class=\"keyword\">int</span> nRows)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.empty() || nRows &lt;= <span class=\"number\">1</span> || s.length() &lt; nRows)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> result;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cycle = <span class=\"number\">2</span> * nRows - <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nRows; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i; j &lt; s.length(); j += cycle)&#123;</span><br><span class=\"line\">                result.push_back(s[j]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( i &gt; <span class=\"number\">0</span> &amp;&amp; i &lt; nRows<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (j + <span class=\"number\">2</span> *(nRows - <span class=\"number\">1</span> - i) &lt; s.length())</span><br><span class=\"line\">                        result.push_back(s[j + <span class=\"number\">2</span> *(nRows - <span class=\"number\">1</span> - i)]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"岛屿个数","comments":1,"abbrlink":"cc03a9fe","date":"2018-11-15T15:36:58.000Z","_content":"\n**问题描述：**\n\n给一个0,1矩阵，求不同的岛屿的个数。\n\n0代表海，1代表岛，如果两个1相邻，那么这两个1属于同一个岛。我们只考虑上下左右为相邻。\n\n样例\n\n在矩阵：\n\n```C++\n[\n  [1, 1, 0, 0, 0],\n  [0, 1, 0, 0, 1],\n  [0, 0, 0, 1, 1],\n  [0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 1]\n]\n```\n\n中有 `3` 个岛.\n\n解题思路：深度遍历 dfs\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    /**\n     * @param grid a boolean 2D matrix\n     * @return an integer\n     */\n    int step[4][2] = {{-1,0},{1,0},{0,-1},{0,1}};\n    int numIslands(vector<vector<bool>>& grid) {\n        // Write your code here\n        int n = grid.size();\n        if(n < 1) return 0;\n        int m = grid[0].size();\n        int count = 0;\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(grid[i][j] == true){\n                    dfs(grid,i,j);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    \n    void dfs(vector<vector<bool>>& grid, int i, int j){\n        grid[i][j] = false;\n        for(int k = 0; k < 4; k++){\n            int x = step[k][0] + i;\n            int y = step[k][1] + j;\n            if(x >= 0 && x < grid.size() && y >= 0 && y < grid[0].size() && grid[x][y] == true){\n                dfs(grid,x,y);\n            }\n        }\n        return;\n    }\n};\n```\n\n","source":"_posts/岛屿个数.md","raw":"---\ntitle: 岛屿个数\ncomments: true\ncategories:\n  - leetcode\ntags: \n  - C++\n  - DFS\nabbrlink: cc03a9fe\ndate: 2018-11-15 23:36:58\n---\n\n**问题描述：**\n\n给一个0,1矩阵，求不同的岛屿的个数。\n\n0代表海，1代表岛，如果两个1相邻，那么这两个1属于同一个岛。我们只考虑上下左右为相邻。\n\n样例\n\n在矩阵：\n\n```C++\n[\n  [1, 1, 0, 0, 0],\n  [0, 1, 0, 0, 1],\n  [0, 0, 0, 1, 1],\n  [0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 1]\n]\n```\n\n中有 `3` 个岛.\n\n解题思路：深度遍历 dfs\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    /**\n     * @param grid a boolean 2D matrix\n     * @return an integer\n     */\n    int step[4][2] = {{-1,0},{1,0},{0,-1},{0,1}};\n    int numIslands(vector<vector<bool>>& grid) {\n        // Write your code here\n        int n = grid.size();\n        if(n < 1) return 0;\n        int m = grid[0].size();\n        int count = 0;\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(grid[i][j] == true){\n                    dfs(grid,i,j);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    \n    void dfs(vector<vector<bool>>& grid, int i, int j){\n        grid[i][j] = false;\n        for(int k = 0; k < 4; k++){\n            int x = step[k][0] + i;\n            int y = step[k][1] + j;\n            if(x >= 0 && x < grid.size() && y >= 0 && y < grid[0].size() && grid[x][y] == true){\n                dfs(grid,x,y);\n            }\n        }\n        return;\n    }\n};\n```\n\n","slug":"岛屿个数","published":1,"updated":"2018-11-15T16:28:09.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaq4001vgvygexhnhgjr","content":"<p><strong>问题描述：</strong></p>\n<p>给一个0,1矩阵，求不同的岛屿的个数。</p>\n<p>0代表海，1代表岛，如果两个1相邻，那么这两个1属于同一个岛。我们只考虑上下左右为相邻。</p>\n<p>样例</p>\n<p>在矩阵：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>中有 <code>3</code> 个岛.</p>\n<p>解题思路：深度遍历 dfs</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param grid a boolean 2D matrix</span></span><br><span class=\"line\"><span class=\"comment\">     * @return an integer</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> step[<span class=\"number\">4</span>][<span class=\"number\">2</span>] = &#123;&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">numIslands</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">bool</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Write your code here</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = grid.size();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = grid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(grid[i][j] == <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                    dfs(grid,i,j);</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">bool</span>&gt;&gt;&amp; grid, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">        grid[i][j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">4</span>; k++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = step[k][<span class=\"number\">0</span>] + i;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = step[k][<span class=\"number\">1</span>] + j;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">0</span> &amp;&amp; x &lt; grid.size() &amp;&amp; y &gt;= <span class=\"number\">0</span> &amp;&amp; y &lt; grid[<span class=\"number\">0</span>].size() &amp;&amp; grid[x][y] == <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                dfs(grid,x,y);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>给一个0,1矩阵，求不同的岛屿的个数。</p>\n<p>0代表海，1代表岛，如果两个1相邻，那么这两个1属于同一个岛。我们只考虑上下左右为相邻。</p>\n<p>样例</p>\n<p>在矩阵：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">  [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>中有 <code>3</code> 个岛.</p>\n<p>解题思路：深度遍历 dfs</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param grid a boolean 2D matrix</span></span><br><span class=\"line\"><span class=\"comment\">     * @return an integer</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> step[<span class=\"number\">4</span>][<span class=\"number\">2</span>] = &#123;&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">numIslands</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">bool</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Write your code here</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = grid.size();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = grid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(grid[i][j] == <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                    dfs(grid,i,j);</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">bool</span>&gt;&gt;&amp; grid, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">        grid[i][j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">4</span>; k++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = step[k][<span class=\"number\">0</span>] + i;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = step[k][<span class=\"number\">1</span>] + j;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">0</span> &amp;&amp; x &lt; grid.size() &amp;&amp; y &gt;= <span class=\"number\">0</span> &amp;&amp; y &lt; grid[<span class=\"number\">0</span>].size() &amp;&amp; grid[x][y] == <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                dfs(grid,x,y);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"最后一个单词的长度","comments":1,"abbrlink":"f055ffc7","date":"2018-11-15T15:19:54.000Z","_content":"\n**问题描述：**\n\n给定一个字符串， 包含大小写字母、空格`' '`，请返回其最后一个单词的长度。\n\n如果不存在最后一个单词，请返回 `0` 。\n\n样例：\n\n给定 s = `\"Hello World\"`，返回 `5`。\n\n\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    /**\n     * @param s A string\n     * @return the length of last word\n     */\n    int lengthOfLastWord(string& s) {\n        // Write your code here\n        int  n = s.length();\n        int len = 0;\n        if(n < 1) return 0;\n        int i = n - 1; \n        while(i >= 0)\n        {\n            if(s[i] == ' ')\n                i--;\n            else\n                break;\n        }\n        if(i >= 0)\n        {\n            while(s[i] != ' ' && i >= 0)\n            {\n                len++;\n                i--;\n            }\n            return len;\n        }\n        else\n            return len;\n        \n    }\n};\n```\n\n","source":"_posts/最后一个单词的长度.md","raw":"---\ntitle: 最后一个单词的长度\ncomments: true\ncategories:\n  - leetcode\ntags: \n  - C++\n  - String\nabbrlink: f055ffc7\ndate: 2018-11-15 23:19:54\n---\n\n**问题描述：**\n\n给定一个字符串， 包含大小写字母、空格`' '`，请返回其最后一个单词的长度。\n\n如果不存在最后一个单词，请返回 `0` 。\n\n样例：\n\n给定 s = `\"Hello World\"`，返回 `5`。\n\n\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    /**\n     * @param s A string\n     * @return the length of last word\n     */\n    int lengthOfLastWord(string& s) {\n        // Write your code here\n        int  n = s.length();\n        int len = 0;\n        if(n < 1) return 0;\n        int i = n - 1; \n        while(i >= 0)\n        {\n            if(s[i] == ' ')\n                i--;\n            else\n                break;\n        }\n        if(i >= 0)\n        {\n            while(s[i] != ' ' && i >= 0)\n            {\n                len++;\n                i--;\n            }\n            return len;\n        }\n        else\n            return len;\n        \n    }\n};\n```\n\n","slug":"最后一个单词的长度","published":1,"updated":"2018-11-15T16:28:05.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaq5001ygvygtnxl0fed","content":"<p><strong>问题描述：</strong></p>\n<p>给定一个字符串， 包含大小写字母、空格<code>' '</code>，请返回其最后一个单词的长度。</p>\n<p>如果不存在最后一个单词，请返回 <code>0</code> 。</p>\n<p>样例：</p>\n<p>给定 s = <code>&quot;Hello World&quot;</code>，返回 <code>5</code>。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param s A string</span></span><br><span class=\"line\"><span class=\"comment\">     * @return the length of last word</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lengthOfLastWord</span><span class=\"params\">(<span class=\"built_in\">string</span>&amp; s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Write your code here</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>  n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i] == <span class=\"string\">' '</span>)</span><br><span class=\"line\">                i--;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(s[i] != <span class=\"string\">' '</span> &amp;&amp; i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                len++;</span><br><span class=\"line\">                i--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>给定一个字符串， 包含大小写字母、空格<code>' '</code>，请返回其最后一个单词的长度。</p>\n<p>如果不存在最后一个单词，请返回 <code>0</code> 。</p>\n<p>样例：</p>\n<p>给定 s = <code>&quot;Hello World&quot;</code>，返回 <code>5</code>。</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param s A string</span></span><br><span class=\"line\"><span class=\"comment\">     * @return the length of last word</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lengthOfLastWord</span><span class=\"params\">(<span class=\"built_in\">string</span>&amp; s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Write your code here</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>  n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i] == <span class=\"string\">' '</span>)</span><br><span class=\"line\">                i--;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(s[i] != <span class=\"string\">' '</span> &amp;&amp; i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                len++;</span><br><span class=\"line\">                i--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"有效的括号序列","comments":1,"abbrlink":"cf94e2fe","date":"2018-11-15T15:41:20.000Z","_content":"\n**问题描述：**\n\n给定一个字符串所表示的括号序列，包含以下字符： `'(', ')'`, `'{'`, `'}'`, `'['` and `']'`， 判定是否是有效的括号序列。\n\n样例\n\n括号必须依照 `\"()\"` 顺序表示， `\"()[]{}\"` 是有效的括号，但 `\"([)]\"`则是无效的括号。\n\n解题思路：使用栈\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    /**\n     * @param s A string\n     * @return whether the string is a valid parentheses\n     */\n    bool isMatch(char a, char b)\n    {\n        if(a == '(' && b == ')')\n            return true;\n        if(a == '[' && b == ']')\n            return true;\n        if(a == '{' && b == '}')\n            return true;\n        return false;\n    }\n    bool isValidParentheses(string& s) {\n        // Write your code here\n        int n = s.length();\n        if(n < 1) return true;\n        if(n % 2) return false;\n        stack<char> paren;\n        paren.push(s[0]);\n        int i = 1;\n        while(i < n)\n        {\n            if(!paren.empty() && isMatch(paren.top(),s[i]))\n                paren.pop();\n            else\n                paren.push(s[i]);\n            i++;\n        }\n        if(!paren.empty()) return false;\n        else return true;\n    }\n};\n\n```\n\n","source":"_posts/有效的括号序列.md","raw":"---\ntitle: 有效的括号序列\ncomments: true\ncategories:\n  - leetcode\ntags: \n  - C++\n  - Stack\nabbrlink: cf94e2fe\ndate: 2018-11-15 23:41:20\n---\n\n**问题描述：**\n\n给定一个字符串所表示的括号序列，包含以下字符： `'(', ')'`, `'{'`, `'}'`, `'['` and `']'`， 判定是否是有效的括号序列。\n\n样例\n\n括号必须依照 `\"()\"` 顺序表示， `\"()[]{}\"` 是有效的括号，但 `\"([)]\"`则是无效的括号。\n\n解题思路：使用栈\n\n**代码：**\n\n```C++\nclass Solution {\npublic:\n    /**\n     * @param s A string\n     * @return whether the string is a valid parentheses\n     */\n    bool isMatch(char a, char b)\n    {\n        if(a == '(' && b == ')')\n            return true;\n        if(a == '[' && b == ']')\n            return true;\n        if(a == '{' && b == '}')\n            return true;\n        return false;\n    }\n    bool isValidParentheses(string& s) {\n        // Write your code here\n        int n = s.length();\n        if(n < 1) return true;\n        if(n % 2) return false;\n        stack<char> paren;\n        paren.push(s[0]);\n        int i = 1;\n        while(i < n)\n        {\n            if(!paren.empty() && isMatch(paren.top(),s[i]))\n                paren.pop();\n            else\n                paren.push(s[i]);\n            i++;\n        }\n        if(!paren.empty()) return false;\n        else return true;\n    }\n};\n\n```\n\n","slug":"有效的括号序列","published":1,"updated":"2018-11-15T16:28:04.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsaq70022gvygbcmwciua","content":"<p><strong>问题描述：</strong></p>\n<p>给定一个字符串所表示的括号序列，包含以下字符： <code>'(', ')'</code>, <code>'{'</code>, <code>'}'</code>, <code>'['</code> and <code>']'</code>， 判定是否是有效的括号序列。</p>\n<p>样例</p>\n<p>括号必须依照 <code>&quot;()&quot;</code> 顺序表示， <code>&quot;()[]{}&quot;</code> 是有效的括号，但 <code>&quot;([)]&quot;</code>则是无效的括号。</p>\n<p>解题思路：使用栈</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param s A string</span></span><br><span class=\"line\"><span class=\"comment\">     * @return whether the string is a valid parentheses</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isMatch</span><span class=\"params\">(<span class=\"keyword\">char</span> a, <span class=\"keyword\">char</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a == <span class=\"string\">'('</span> &amp;&amp; b == <span class=\"string\">')'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a == <span class=\"string\">'['</span> &amp;&amp; b == <span class=\"string\">']'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a == <span class=\"string\">'&#123;'</span> &amp;&amp; b == <span class=\"string\">'&#125;'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isValidParentheses</span><span class=\"params\">(<span class=\"built_in\">string</span>&amp; s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Write your code here</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n % <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt; paren;</span><br><span class=\"line\">        paren.push(s[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; n)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!paren.empty() &amp;&amp; isMatch(paren.top(),s[i]))</span><br><span class=\"line\">                paren.pop();</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                paren.push(s[i]);</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!paren.empty()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题描述：</strong></p>\n<p>给定一个字符串所表示的括号序列，包含以下字符： <code>'(', ')'</code>, <code>'{'</code>, <code>'}'</code>, <code>'['</code> and <code>']'</code>， 判定是否是有效的括号序列。</p>\n<p>样例</p>\n<p>括号必须依照 <code>&quot;()&quot;</code> 顺序表示， <code>&quot;()[]{}&quot;</code> 是有效的括号，但 <code>&quot;([)]&quot;</code>则是无效的括号。</p>\n<p>解题思路：使用栈</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param s A string</span></span><br><span class=\"line\"><span class=\"comment\">     * @return whether the string is a valid parentheses</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isMatch</span><span class=\"params\">(<span class=\"keyword\">char</span> a, <span class=\"keyword\">char</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a == <span class=\"string\">'('</span> &amp;&amp; b == <span class=\"string\">')'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a == <span class=\"string\">'['</span> &amp;&amp; b == <span class=\"string\">']'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a == <span class=\"string\">'&#123;'</span> &amp;&amp; b == <span class=\"string\">'&#125;'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isValidParentheses</span><span class=\"params\">(<span class=\"built_in\">string</span>&amp; s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Write your code here</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n % <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt; paren;</span><br><span class=\"line\">        paren.push(s[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; n)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!paren.empty() &amp;&amp; isMatch(paren.top(),s[i]))</span><br><span class=\"line\">                paren.pop();</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                paren.push(s[i]);</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!paren.empty()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"第一篇：Ceph简介","comments":1,"author":"zuoyang","type":"原创","toc":true,"abbrlink":"3a6a8a8c","date":"2018-11-19T12:15:07.000Z","_content":"\n# Ceph架构简介\n\n最近工作中要使用ceph作为底层存储架构，故对其进行了一番调研，本篇乃ceph系列的第一篇。\n\n## Ceph\n\nCeph是一个统一的分布式存储系统，设计初衷是提供较好的性能、可靠性和可扩展性。\n\nCeph项目最早起源于Sage就读博士期间的工作（最早的成果于2004年发表），并随后贡献给开源社区。在经过了数年的发展之后，目前已得到众多云计算厂商的支持并被广泛应用。RedHat及OpenStack都可与Ceph整合以支持虚拟机镜像的后端存储。\n\nCeph is a distributed object, block, and file storage platform.\n\n使用Ceph系统可以提供**对象存储**、**块设备存储**和**文件系统服务**.\n\nCeph底层提供了分布式的RADOS存储，用与支撑上层的librados和RGW、RBD、CephFS等服务。Ceph实现了非常底层的object storage，是纯粹的SDS，并且支持通用的ZFS、BtrFS和Ext4文件系统，能轻易得Scale，没有单点故障。\n\n## Ceph特点\n\n- 高性能\n  a. 摒弃了传统的集中式存储元数据寻址的方案，采用CRUSH算法，数据分布均衡，并行度高。\n  b.考虑了容灾域的隔离，能够实现各类负载的副本放置规则，例如跨机房、机架感知等。\n  c. 能够支持上千个存储节点的规模，支持TB到PB级的数据。\n- 高可用性\n  a. 副本数可以灵活控制。\n  b. 支持故障域分隔，数据强一致性。\n  c. 多种故障场景自动进行修复自愈。\n  d. 没有单点故障，自动管理。\n- 高可扩展性\n  a. 去中心化。\n  b. 扩展灵活。\n  c. 随着节点增加而线性增长。\n- 特性丰富\n  a. 支持三种存储接口：块存储、文件存储、对象存储。\n  b. 支持自定义接口，支持多种语言驱动。\n\n## Ceph架构\n\n**支持三种接口：**\n\n- Object：有原生的API，而且也兼容Swift和S3的API。\n- Block：支持精简配置、快照、克隆。\n- File：Posix接口，支持快照。\n\n{% asset_img rados.jpg  rados %}\n\n{% asset_img ceph-architectural.png  ceph-architectural %}\n\n## Ceph核心组件及概念介绍\n\n{% asset_img ceph_all_component.png  ceph-all-component %}\n\n- Monitor   \n\n  一个Ceph集群需要多个Monitor组成的小集群，它们通过Paxos同步数据，用来保存OSD的元数据。\n\n- OSD \n\n  OSD全称Object Storage Device，也就是负责响应客户端请求返回具体数据的进程。一个Ceph集群一般都有很多个OSD。\n\n- MDS \n\n  MDS全称Ceph Metadata Server，是CephFS服务依赖的元数据服务。\n\n- Object \n\n  Ceph最底层的存储单元是Object对象，每个Object包含元数据和原始数据。\n\n- PG \n\n  PG全称Placement Grouops，是一个逻辑的概念，一个PG包含多个OSD。引入PG这一层其实是为了更好的分配数据和定位数据。\n\n- RADOS \n\n  RADOS全称Reliable Autonomic Distributed Object Store，是Ceph集群的精华，用户实现数据分配、Failover等集群操作。\n\n- Libradio \n\n  Librados是Rados提供库，因为RADOS是协议很难直接访问，因此上层的RBD、RGW和CephFS都是通过librados访问的，目前提供PHP、Ruby、Java、Python、C和C++支持。\n\n- CRUSH \n\n  CRUSH是Ceph使用的数据分布算法，类似一致性哈希，让数据分配到预期的地方。\n\n- RBD \n\n  RBD全称RADOS block device，是Ceph对外提供的块设备服务。\n\n- RGW \n\n  RGW全称RADOS gateway，是Ceph对外提供的对象存储服务，接口与S3和Swift兼容。\n\n- CephFS \n\n  CephFS全称Ceph File System，是Ceph对外提供的文件系统服务。\n\n\n\n# CEPH Filesystem\n\n## 文件存储\n\n{% asset_img ceph_file.jpg  file-system %}\n\n**典型设备：** FTP、NFS服务器\n为了克服块存储文件无法共享的问题，所以有了文件存储。\n在服务器上架设FTP与NFS服务，就是文件存储。\n\n**优点：**\n\n- 造价低，随便一台机器就可以了。\n- 方便文件共享。\n\n**缺点：**\n\n- 读写速率低。\n- 传输速率慢。\n\n**使用场景：**\n\n- 日志存储。\n- 有目录结构的文件存储。\n- …\n\n## Ceph 文件系统\n\nCeph 文件系统（ Ceph FS ）是个 POSIX 兼容的文件系统，它使用 Ceph 存储集群来存储数据。 Ceph 文件系统与 Ceph 块设备、同时提供 S3 和 Swift API 的 Ceph 对象存储、或者原生库（ librados ）一样，都使用着相同的 Ceph 存储集群系统。 \n\n![cephfs](http://docs.ceph.org.cn/_images/ditaa-b5a320fc160057a1a7da010b4215489fa66de242.png)\n\nCeph 文件系统要求 Ceph 存储集群内至少有一个 Ceph 元数据服务器。\n\n当前， CephFS 还缺乏健壮得像 ‘fsck’ 这样的检查和修复功能。存储重要数据时需小心使用，因为灾难恢复工具还没开发完。\n\ncephfs目前发展比较慢，之前一直没有稳定版本，2016年4月21日官方发布的jewel V10.2.0才公布第一个稳定版本，当前在生产环节中使用很少，所以还是建议谨慎使用，如果要使用需要进行严格的测试后才能上线。\n\n\n\n# CEPH Block Device\n\n## 块存储\n\n{% asset_img disk.jpg  block device %}\n\n**典型设备：** 磁盘阵列，硬盘\n\n主要是将裸磁盘空间映射给主机使用的。\n\n**优点：**\n\n- 通过Raid与LVM等手段，对数据提供了保护。\n- 多块廉价的硬盘组合起来，提高容量。\n- 多块磁盘组合出来的逻辑盘，提升读写效率。\n\n**缺点：**\n\n- 采用SAN架构组网时，光纤交换机，造价成本高。\n- 主机之间无法共享数据。\n\n**使用场景：**\n\n- docker容器、虚拟机磁盘存储分配。\n- 日志存储。\n- 文件存储。\n- …\n\n\n\n## Ceph 块设备 (RBD)\n\n块是一个字节序列（例如，一个 512 字节的数据块）。基于块的存储接口是最常见的存储数据方法，它们基于旋转介质，像硬盘、 CD 、软盘、甚至传统的 9 磁道磁带。无处不在的块设备接口使虚拟块设备成为与 Ceph 这样的海量存储系统交互的理想之选。\n\nCeph 块设备是精简配置的、大小可调且将数据条带化存储到集群内的多个 OSD 。 Ceph 块设备利用 RADOS 的多种能力，如快照、复制和一致性。 Ceph 的 RADOS 块设备（ RBD ）使用内核模块或 librbd 库与 OSD 交互。\n\n![rbd](http://docs.ceph.org.cn/_images/ditaa-dc9f80d771b55f2daa5cbbfdb2dd0d3e6dfc17c0.png)\n\n内核模块可使用 Linux 页缓存。对基于 librbd 的应用程序， Ceph 可提供 RBD 缓存。\n\n客户端可以通过内核模块挂在rbd使用，客户端使用rbd块设备就像使用普通硬盘一样，可以对其就行格式化然后使用；客户应用也可以通过librbd使用ceph块，典型的是云平台的块存储服务（如下图），云平台可以使用rbd作为云的存储后端提供镜像存储、volume块或者客户的系统引导盘等。\n\n{% asset_img ceph_rbd2.png ceph-rbd %}\n\nCeph 块设备靠无限伸缩性提供了高性能，如向内核模块、或向 abbr:KVM (kernel virtual machines) （如 Qemu 、 OpenStack 和 CloudStack等云计算系统通过 libvirt 和 Qemu 可与 Ceph 块设备集成）。你可以用同一个集群同时运行 Ceph RADOS gateway、 Ceph FS 文件系统、和 Ceph 块设备。\n\n目前ceph rbd在云平台使用比较广泛而且也很稳定，社区的支持力度也非常大。\n\n# CEPH Object Gateway\n\n## 对象存储\n\n对象存储是提供restful接口并数据组织形式扁平化的存储方法，对象存储同兼具块存储高速直接访问磁盘及文件存储的分布式共享特点。\n\n{% asset_img ceph-object.jpg %}\n\n**典型设备：** 内置大容量硬盘的分布式服务器(swift, s3)\n多台服务器内置大容量硬盘，安装上对象存储管理软件，对外提供读写访问功能。\n\n**优点：**\n\n- 具备块存储的读写高速。\n- 具备文件存储的共享等特性。\n\n**使用场景：** (适合更新变动较少的数据)\n\n- 图片存储。\n- 视频存储。\n- …\n\n## Ceph 对象存储 (radosgw)\n\nCeph 对象网关是一个构建在 `librados` 之上的对象存储接口，它为应用程序访问Ceph 存储集群提供了一个 RESTful 风格的网关 。 Ceph 对象存储支持 2 种接口：\n\n1. **兼容S3:** 提供了对象存储接口，兼容大部分 亚马逊S3 RESTful 接口。\n2. **兼容Swift:** 提供了对象存储接口，兼容大部分 Openstack Swift 接口。\n\nCeph 对象存储使用 Ceph 对象网关守护进程（ `radosgw` ），它是个与 Ceph 存储集群交互的 FastCGI 模块。因为它提供了与 OpenStack Swift 和 Amazon S3 兼容的接口， RADOS 要有它自己的用户管理。 Ceph 对象网关可与 Ceph FS 客户端或 Ceph 块设备客户端共用一个存储集群。 S3 和 Swift 接口共用一个通用命名空间，所以你可以用一个接口写入数据、然后用另一个接口取出数据。\n\n![radosgw](http://docs.ceph.org.cn/_images/ditaa-50d12451eb76c5c72c4574b08f0320b39a42e5f1.png)\n\nCeph 对象存储**不使用** Ceph 元数据服务器。\n\n对象存储的应用场景：\n\n1）资源分发下载\n\n网站或者app需要上传、下载和分发视频图片等\n\n分发和下载app安装包等\n\n2）网盘\n\n可以对用户提供网盘服务，用户可以通过网盘存储自己任何格式的文件\n\nceph对象存储目前已经有厂商在使用，但是大多会基于网关等做些优化以适应自己的使用场景。","source":"_posts/Ceph_introduction.md","raw":"---\ntitle: 第一篇：Ceph简介\ncomments: true\nauthor: zuoyang\ntype: 原创\ntoc: true\ncategories:\n  - ceph\ntags: ceph\nabbrlink: 3a6a8a8c\ndate: 2018-11-19 20:15:07\n---\n\n# Ceph架构简介\n\n最近工作中要使用ceph作为底层存储架构，故对其进行了一番调研，本篇乃ceph系列的第一篇。\n\n## Ceph\n\nCeph是一个统一的分布式存储系统，设计初衷是提供较好的性能、可靠性和可扩展性。\n\nCeph项目最早起源于Sage就读博士期间的工作（最早的成果于2004年发表），并随后贡献给开源社区。在经过了数年的发展之后，目前已得到众多云计算厂商的支持并被广泛应用。RedHat及OpenStack都可与Ceph整合以支持虚拟机镜像的后端存储。\n\nCeph is a distributed object, block, and file storage platform.\n\n使用Ceph系统可以提供**对象存储**、**块设备存储**和**文件系统服务**.\n\nCeph底层提供了分布式的RADOS存储，用与支撑上层的librados和RGW、RBD、CephFS等服务。Ceph实现了非常底层的object storage，是纯粹的SDS，并且支持通用的ZFS、BtrFS和Ext4文件系统，能轻易得Scale，没有单点故障。\n\n## Ceph特点\n\n- 高性能\n  a. 摒弃了传统的集中式存储元数据寻址的方案，采用CRUSH算法，数据分布均衡，并行度高。\n  b.考虑了容灾域的隔离，能够实现各类负载的副本放置规则，例如跨机房、机架感知等。\n  c. 能够支持上千个存储节点的规模，支持TB到PB级的数据。\n- 高可用性\n  a. 副本数可以灵活控制。\n  b. 支持故障域分隔，数据强一致性。\n  c. 多种故障场景自动进行修复自愈。\n  d. 没有单点故障，自动管理。\n- 高可扩展性\n  a. 去中心化。\n  b. 扩展灵活。\n  c. 随着节点增加而线性增长。\n- 特性丰富\n  a. 支持三种存储接口：块存储、文件存储、对象存储。\n  b. 支持自定义接口，支持多种语言驱动。\n\n## Ceph架构\n\n**支持三种接口：**\n\n- Object：有原生的API，而且也兼容Swift和S3的API。\n- Block：支持精简配置、快照、克隆。\n- File：Posix接口，支持快照。\n\n{% asset_img rados.jpg  rados %}\n\n{% asset_img ceph-architectural.png  ceph-architectural %}\n\n## Ceph核心组件及概念介绍\n\n{% asset_img ceph_all_component.png  ceph-all-component %}\n\n- Monitor   \n\n  一个Ceph集群需要多个Monitor组成的小集群，它们通过Paxos同步数据，用来保存OSD的元数据。\n\n- OSD \n\n  OSD全称Object Storage Device，也就是负责响应客户端请求返回具体数据的进程。一个Ceph集群一般都有很多个OSD。\n\n- MDS \n\n  MDS全称Ceph Metadata Server，是CephFS服务依赖的元数据服务。\n\n- Object \n\n  Ceph最底层的存储单元是Object对象，每个Object包含元数据和原始数据。\n\n- PG \n\n  PG全称Placement Grouops，是一个逻辑的概念，一个PG包含多个OSD。引入PG这一层其实是为了更好的分配数据和定位数据。\n\n- RADOS \n\n  RADOS全称Reliable Autonomic Distributed Object Store，是Ceph集群的精华，用户实现数据分配、Failover等集群操作。\n\n- Libradio \n\n  Librados是Rados提供库，因为RADOS是协议很难直接访问，因此上层的RBD、RGW和CephFS都是通过librados访问的，目前提供PHP、Ruby、Java、Python、C和C++支持。\n\n- CRUSH \n\n  CRUSH是Ceph使用的数据分布算法，类似一致性哈希，让数据分配到预期的地方。\n\n- RBD \n\n  RBD全称RADOS block device，是Ceph对外提供的块设备服务。\n\n- RGW \n\n  RGW全称RADOS gateway，是Ceph对外提供的对象存储服务，接口与S3和Swift兼容。\n\n- CephFS \n\n  CephFS全称Ceph File System，是Ceph对外提供的文件系统服务。\n\n\n\n# CEPH Filesystem\n\n## 文件存储\n\n{% asset_img ceph_file.jpg  file-system %}\n\n**典型设备：** FTP、NFS服务器\n为了克服块存储文件无法共享的问题，所以有了文件存储。\n在服务器上架设FTP与NFS服务，就是文件存储。\n\n**优点：**\n\n- 造价低，随便一台机器就可以了。\n- 方便文件共享。\n\n**缺点：**\n\n- 读写速率低。\n- 传输速率慢。\n\n**使用场景：**\n\n- 日志存储。\n- 有目录结构的文件存储。\n- …\n\n## Ceph 文件系统\n\nCeph 文件系统（ Ceph FS ）是个 POSIX 兼容的文件系统，它使用 Ceph 存储集群来存储数据。 Ceph 文件系统与 Ceph 块设备、同时提供 S3 和 Swift API 的 Ceph 对象存储、或者原生库（ librados ）一样，都使用着相同的 Ceph 存储集群系统。 \n\n![cephfs](http://docs.ceph.org.cn/_images/ditaa-b5a320fc160057a1a7da010b4215489fa66de242.png)\n\nCeph 文件系统要求 Ceph 存储集群内至少有一个 Ceph 元数据服务器。\n\n当前， CephFS 还缺乏健壮得像 ‘fsck’ 这样的检查和修复功能。存储重要数据时需小心使用，因为灾难恢复工具还没开发完。\n\ncephfs目前发展比较慢，之前一直没有稳定版本，2016年4月21日官方发布的jewel V10.2.0才公布第一个稳定版本，当前在生产环节中使用很少，所以还是建议谨慎使用，如果要使用需要进行严格的测试后才能上线。\n\n\n\n# CEPH Block Device\n\n## 块存储\n\n{% asset_img disk.jpg  block device %}\n\n**典型设备：** 磁盘阵列，硬盘\n\n主要是将裸磁盘空间映射给主机使用的。\n\n**优点：**\n\n- 通过Raid与LVM等手段，对数据提供了保护。\n- 多块廉价的硬盘组合起来，提高容量。\n- 多块磁盘组合出来的逻辑盘，提升读写效率。\n\n**缺点：**\n\n- 采用SAN架构组网时，光纤交换机，造价成本高。\n- 主机之间无法共享数据。\n\n**使用场景：**\n\n- docker容器、虚拟机磁盘存储分配。\n- 日志存储。\n- 文件存储。\n- …\n\n\n\n## Ceph 块设备 (RBD)\n\n块是一个字节序列（例如，一个 512 字节的数据块）。基于块的存储接口是最常见的存储数据方法，它们基于旋转介质，像硬盘、 CD 、软盘、甚至传统的 9 磁道磁带。无处不在的块设备接口使虚拟块设备成为与 Ceph 这样的海量存储系统交互的理想之选。\n\nCeph 块设备是精简配置的、大小可调且将数据条带化存储到集群内的多个 OSD 。 Ceph 块设备利用 RADOS 的多种能力，如快照、复制和一致性。 Ceph 的 RADOS 块设备（ RBD ）使用内核模块或 librbd 库与 OSD 交互。\n\n![rbd](http://docs.ceph.org.cn/_images/ditaa-dc9f80d771b55f2daa5cbbfdb2dd0d3e6dfc17c0.png)\n\n内核模块可使用 Linux 页缓存。对基于 librbd 的应用程序， Ceph 可提供 RBD 缓存。\n\n客户端可以通过内核模块挂在rbd使用，客户端使用rbd块设备就像使用普通硬盘一样，可以对其就行格式化然后使用；客户应用也可以通过librbd使用ceph块，典型的是云平台的块存储服务（如下图），云平台可以使用rbd作为云的存储后端提供镜像存储、volume块或者客户的系统引导盘等。\n\n{% asset_img ceph_rbd2.png ceph-rbd %}\n\nCeph 块设备靠无限伸缩性提供了高性能，如向内核模块、或向 abbr:KVM (kernel virtual machines) （如 Qemu 、 OpenStack 和 CloudStack等云计算系统通过 libvirt 和 Qemu 可与 Ceph 块设备集成）。你可以用同一个集群同时运行 Ceph RADOS gateway、 Ceph FS 文件系统、和 Ceph 块设备。\n\n目前ceph rbd在云平台使用比较广泛而且也很稳定，社区的支持力度也非常大。\n\n# CEPH Object Gateway\n\n## 对象存储\n\n对象存储是提供restful接口并数据组织形式扁平化的存储方法，对象存储同兼具块存储高速直接访问磁盘及文件存储的分布式共享特点。\n\n{% asset_img ceph-object.jpg %}\n\n**典型设备：** 内置大容量硬盘的分布式服务器(swift, s3)\n多台服务器内置大容量硬盘，安装上对象存储管理软件，对外提供读写访问功能。\n\n**优点：**\n\n- 具备块存储的读写高速。\n- 具备文件存储的共享等特性。\n\n**使用场景：** (适合更新变动较少的数据)\n\n- 图片存储。\n- 视频存储。\n- …\n\n## Ceph 对象存储 (radosgw)\n\nCeph 对象网关是一个构建在 `librados` 之上的对象存储接口，它为应用程序访问Ceph 存储集群提供了一个 RESTful 风格的网关 。 Ceph 对象存储支持 2 种接口：\n\n1. **兼容S3:** 提供了对象存储接口，兼容大部分 亚马逊S3 RESTful 接口。\n2. **兼容Swift:** 提供了对象存储接口，兼容大部分 Openstack Swift 接口。\n\nCeph 对象存储使用 Ceph 对象网关守护进程（ `radosgw` ），它是个与 Ceph 存储集群交互的 FastCGI 模块。因为它提供了与 OpenStack Swift 和 Amazon S3 兼容的接口， RADOS 要有它自己的用户管理。 Ceph 对象网关可与 Ceph FS 客户端或 Ceph 块设备客户端共用一个存储集群。 S3 和 Swift 接口共用一个通用命名空间，所以你可以用一个接口写入数据、然后用另一个接口取出数据。\n\n![radosgw](http://docs.ceph.org.cn/_images/ditaa-50d12451eb76c5c72c4574b08f0320b39a42e5f1.png)\n\nCeph 对象存储**不使用** Ceph 元数据服务器。\n\n对象存储的应用场景：\n\n1）资源分发下载\n\n网站或者app需要上传、下载和分发视频图片等\n\n分发和下载app安装包等\n\n2）网盘\n\n可以对用户提供网盘服务，用户可以通过网盘存储自己任何格式的文件\n\nceph对象存储目前已经有厂商在使用，但是大多会基于网关等做些优化以适应自己的使用场景。","slug":"Ceph_introduction","published":1,"updated":"2018-11-19T13:33:19.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsarl0031gvygq0ynwqa7","content":"<h1><span id=\"ceph架构简介\">Ceph架构简介</span></h1>\n<p>最近工作中要使用ceph作为底层存储架构，故对其进行了一番调研，本篇乃ceph系列的第一篇。</p>\n<h2><span id=\"ceph\">Ceph</span></h2>\n<p>Ceph是一个统一的分布式存储系统，设计初衷是提供较好的性能、可靠性和可扩展性。</p>\n<p>Ceph项目最早起源于Sage就读博士期间的工作（最早的成果于2004年发表），并随后贡献给开源社区。在经过了数年的发展之后，目前已得到众多云计算厂商的支持并被广泛应用。RedHat及OpenStack都可与Ceph整合以支持虚拟机镜像的后端存储。</p>\n<p>Ceph is a distributed object, block, and file storage platform.</p>\n<p>使用Ceph系统可以提供<strong>对象存储</strong>、<strong>块设备存储</strong>和<strong>文件系统服务</strong>.</p>\n<p>Ceph底层提供了分布式的RADOS存储，用与支撑上层的librados和RGW、RBD、CephFS等服务。Ceph实现了非常底层的object storage，是纯粹的SDS，并且支持通用的ZFS、BtrFS和Ext4文件系统，能轻易得Scale，没有单点故障。</p>\n<h2><span id=\"ceph特点\">Ceph特点</span></h2>\n<ul>\n<li>高性能<br>\na. 摒弃了传统的集中式存储元数据寻址的方案，采用CRUSH算法，数据分布均衡，并行度高。<br>\nb.考虑了容灾域的隔离，能够实现各类负载的副本放置规则，例如跨机房、机架感知等。<br>\nc. 能够支持上千个存储节点的规模，支持TB到PB级的数据。</li>\n<li>高可用性<br>\na. 副本数可以灵活控制。<br>\nb. 支持故障域分隔，数据强一致性。<br>\nc. 多种故障场景自动进行修复自愈。<br>\nd. 没有单点故障，自动管理。</li>\n<li>高可扩展性<br>\na. 去中心化。<br>\nb. 扩展灵活。<br>\nc. 随着节点增加而线性增长。</li>\n<li>特性丰富<br>\na. 支持三种存储接口：块存储、文件存储、对象存储。<br>\nb. 支持自定义接口，支持多种语言驱动。</li>\n</ul>\n<h2><span id=\"ceph架构\">Ceph架构</span></h2>\n<p><strong>支持三种接口：</strong></p>\n<ul>\n<li>Object：有原生的API，而且也兼容Swift和S3的API。</li>\n<li>Block：支持精简配置、快照、克隆。</li>\n<li>File：Posix接口，支持快照。</li>\n</ul>\n<img src=\"/post/3a6a8a8c/rados.jpg\" title=\"rados\">\n<img src=\"/post/3a6a8a8c/ceph-architectural.png\" title=\"ceph-architectural\">\n<h2><span id=\"ceph核心组件及概念介绍\">Ceph核心组件及概念介绍</span></h2>\n<img src=\"/post/3a6a8a8c/ceph_all_component.png\" title=\"ceph-all-component\">\n<ul>\n<li>\n<p>Monitor</p>\n<p>一个Ceph集群需要多个Monitor组成的小集群，它们通过Paxos同步数据，用来保存OSD的元数据。</p>\n</li>\n<li>\n<p>OSD</p>\n<p>OSD全称Object Storage Device，也就是负责响应客户端请求返回具体数据的进程。一个Ceph集群一般都有很多个OSD。</p>\n</li>\n<li>\n<p>MDS</p>\n<p>MDS全称Ceph Metadata Server，是CephFS服务依赖的元数据服务。</p>\n</li>\n<li>\n<p>Object</p>\n<p>Ceph最底层的存储单元是Object对象，每个Object包含元数据和原始数据。</p>\n</li>\n<li>\n<p>PG</p>\n<p>PG全称Placement Grouops，是一个逻辑的概念，一个PG包含多个OSD。引入PG这一层其实是为了更好的分配数据和定位数据。</p>\n</li>\n<li>\n<p>RADOS</p>\n<p>RADOS全称Reliable Autonomic Distributed Object Store，是Ceph集群的精华，用户实现数据分配、Failover等集群操作。</p>\n</li>\n<li>\n<p>Libradio</p>\n<p>Librados是Rados提供库，因为RADOS是协议很难直接访问，因此上层的RBD、RGW和CephFS都是通过librados访问的，目前提供PHP、Ruby、Java、Python、C和C++支持。</p>\n</li>\n<li>\n<p>CRUSH</p>\n<p>CRUSH是Ceph使用的数据分布算法，类似一致性哈希，让数据分配到预期的地方。</p>\n</li>\n<li>\n<p>RBD</p>\n<p>RBD全称RADOS block device，是Ceph对外提供的块设备服务。</p>\n</li>\n<li>\n<p>RGW</p>\n<p>RGW全称RADOS gateway，是Ceph对外提供的对象存储服务，接口与S3和Swift兼容。</p>\n</li>\n<li>\n<p>CephFS</p>\n<p>CephFS全称Ceph File System，是Ceph对外提供的文件系统服务。</p>\n</li>\n</ul>\n<h1><span id=\"ceph-filesystem\">CEPH Filesystem</span></h1>\n<h2><span id=\"文件存储\">文件存储</span></h2>\n<img src=\"/post/3a6a8a8c/ceph_file.jpg\" title=\"file-system\">\n<p><strong>典型设备：</strong> FTP、NFS服务器<br>\n为了克服块存储文件无法共享的问题，所以有了文件存储。<br>\n在服务器上架设FTP与NFS服务，就是文件存储。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>造价低，随便一台机器就可以了。</li>\n<li>方便文件共享。</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>读写速率低。</li>\n<li>传输速率慢。</li>\n</ul>\n<p><strong>使用场景：</strong></p>\n<ul>\n<li>日志存储。</li>\n<li>有目录结构的文件存储。</li>\n<li>…</li>\n</ul>\n<h2><span id=\"ceph-文件系统\">Ceph 文件系统</span></h2>\n<p>Ceph 文件系统（ Ceph FS ）是个 POSIX 兼容的文件系统，它使用 Ceph 存储集群来存储数据。 Ceph 文件系统与 Ceph 块设备、同时提供 S3 和 Swift API 的 Ceph 对象存储、或者原生库（ librados ）一样，都使用着相同的 Ceph 存储集群系统。</p>\n<p><img src=\"http://docs.ceph.org.cn/_images/ditaa-b5a320fc160057a1a7da010b4215489fa66de242.png\" alt=\"cephfs\"></p>\n<p>Ceph 文件系统要求 Ceph 存储集群内至少有一个 Ceph 元数据服务器。</p>\n<p>当前， CephFS 还缺乏健壮得像 ‘fsck’ 这样的检查和修复功能。存储重要数据时需小心使用，因为灾难恢复工具还没开发完。</p>\n<p>cephfs目前发展比较慢，之前一直没有稳定版本，2016年4月21日官方发布的jewel V10.2.0才公布第一个稳定版本，当前在生产环节中使用很少，所以还是建议谨慎使用，如果要使用需要进行严格的测试后才能上线。</p>\n<h1><span id=\"ceph-block-device\">CEPH Block Device</span></h1>\n<h2><span id=\"块存储\">块存储</span></h2>\n<img src=\"/post/3a6a8a8c/disk.jpg\" title=\"block device\">\n<p><strong>典型设备：</strong> 磁盘阵列，硬盘</p>\n<p>主要是将裸磁盘空间映射给主机使用的。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>通过Raid与LVM等手段，对数据提供了保护。</li>\n<li>多块廉价的硬盘组合起来，提高容量。</li>\n<li>多块磁盘组合出来的逻辑盘，提升读写效率。</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>采用SAN架构组网时，光纤交换机，造价成本高。</li>\n<li>主机之间无法共享数据。</li>\n</ul>\n<p><strong>使用场景：</strong></p>\n<ul>\n<li>docker容器、虚拟机磁盘存储分配。</li>\n<li>日志存储。</li>\n<li>文件存储。</li>\n<li>…</li>\n</ul>\n<h2><span id=\"ceph-块设备-rbd\">Ceph 块设备 (RBD)</span></h2>\n<p>块是一个字节序列（例如，一个 512 字节的数据块）。基于块的存储接口是最常见的存储数据方法，它们基于旋转介质，像硬盘、 CD 、软盘、甚至传统的 9 磁道磁带。无处不在的块设备接口使虚拟块设备成为与 Ceph 这样的海量存储系统交互的理想之选。</p>\n<p>Ceph 块设备是精简配置的、大小可调且将数据条带化存储到集群内的多个 OSD 。 Ceph 块设备利用 RADOS 的多种能力，如快照、复制和一致性。 Ceph 的 RADOS 块设备（ RBD ）使用内核模块或 librbd 库与 OSD 交互。</p>\n<p><img src=\"http://docs.ceph.org.cn/_images/ditaa-dc9f80d771b55f2daa5cbbfdb2dd0d3e6dfc17c0.png\" alt=\"rbd\"></p>\n<p>内核模块可使用 Linux 页缓存。对基于 librbd 的应用程序， Ceph 可提供 RBD 缓存。</p>\n<p>客户端可以通过内核模块挂在rbd使用，客户端使用rbd块设备就像使用普通硬盘一样，可以对其就行格式化然后使用；客户应用也可以通过librbd使用ceph块，典型的是云平台的块存储服务（如下图），云平台可以使用rbd作为云的存储后端提供镜像存储、volume块或者客户的系统引导盘等。</p>\n<img src=\"/post/3a6a8a8c/ceph_rbd2.png\" title=\"ceph-rbd\">\n<p>Ceph 块设备靠无限伸缩性提供了高性能，如向内核模块、或向 abbr:KVM (kernel virtual machines) （如 Qemu 、 OpenStack 和 CloudStack等云计算系统通过 libvirt 和 Qemu 可与 Ceph 块设备集成）。你可以用同一个集群同时运行 Ceph RADOS gateway、 Ceph FS 文件系统、和 Ceph 块设备。</p>\n<p>目前ceph rbd在云平台使用比较广泛而且也很稳定，社区的支持力度也非常大。</p>\n<h1><span id=\"ceph-object-gateway\">CEPH Object Gateway</span></h1>\n<h2><span id=\"对象存储\">对象存储</span></h2>\n<p>对象存储是提供restful接口并数据组织形式扁平化的存储方法，对象存储同兼具块存储高速直接访问磁盘及文件存储的分布式共享特点。</p>\n\n<p><strong>典型设备：</strong> 内置大容量硬盘的分布式服务器(swift, s3)<br>\n多台服务器内置大容量硬盘，安装上对象存储管理软件，对外提供读写访问功能。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>具备块存储的读写高速。</li>\n<li>具备文件存储的共享等特性。</li>\n</ul>\n<p><strong>使用场景：</strong> (适合更新变动较少的数据)</p>\n<ul>\n<li>图片存储。</li>\n<li>视频存储。</li>\n<li>…</li>\n</ul>\n<h2><span id=\"ceph-对象存储-radosgw\">Ceph 对象存储 (radosgw)</span></h2>\n<p>Ceph 对象网关是一个构建在 <code>librados</code> 之上的对象存储接口，它为应用程序访问Ceph 存储集群提供了一个 RESTful 风格的网关 。 Ceph 对象存储支持 2 种接口：</p>\n<ol>\n<li><strong>兼容S3:</strong> 提供了对象存储接口，兼容大部分 亚马逊S3 RESTful 接口。</li>\n<li><strong>兼容Swift:</strong> 提供了对象存储接口，兼容大部分 Openstack Swift 接口。</li>\n</ol>\n<p>Ceph 对象存储使用 Ceph 对象网关守护进程（ <code>radosgw</code> ），它是个与 Ceph 存储集群交互的 FastCGI 模块。因为它提供了与 OpenStack Swift 和 Amazon S3 兼容的接口， RADOS 要有它自己的用户管理。 Ceph 对象网关可与 Ceph FS 客户端或 Ceph 块设备客户端共用一个存储集群。 S3 和 Swift 接口共用一个通用命名空间，所以你可以用一个接口写入数据、然后用另一个接口取出数据。</p>\n<p><img src=\"http://docs.ceph.org.cn/_images/ditaa-50d12451eb76c5c72c4574b08f0320b39a42e5f1.png\" alt=\"radosgw\"></p>\n<p>Ceph 对象存储<strong>不使用</strong> Ceph 元数据服务器。</p>\n<p>对象存储的应用场景：</p>\n<p>1）资源分发下载</p>\n<p>网站或者app需要上传、下载和分发视频图片等</p>\n<p>分发和下载app安装包等</p>\n<p>2）网盘</p>\n<p>可以对用户提供网盘服务，用户可以通过网盘存储自己任何格式的文件</p>\n<p>ceph对象存储目前已经有厂商在使用，但是大多会基于网关等做些优化以适应自己的使用场景。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1>Ceph架构简介</h1>\n<p>最近工作中要使用ceph作为底层存储架构，故对其进行了一番调研，本篇乃ceph系列的第一篇。</p>\n<h2 id=\"ceph\"><a class=\"headerlink\" href=\"#ceph\"></a>Ceph</h2>\n<p>Ceph是一个统一的分布式存储系统，设计初衷是提供较好的性能、可靠性和可扩展性。</p>\n<p>Ceph项目最早起源于Sage就读博士期间的工作（最早的成果于2004年发表），并随后贡献给开源社区。在经过了数年的发展之后，目前已得到众多云计算厂商的支持并被广泛应用。RedHat及OpenStack都可与Ceph整合以支持虚拟机镜像的后端存储。</p>\n<p>Ceph is a distributed object, block, and file storage platform.</p>\n<p>使用Ceph系统可以提供<strong>对象存储</strong>、<strong>块设备存储</strong>和<strong>文件系统服务</strong>.</p>\n<p>Ceph底层提供了分布式的RADOS存储，用与支撑上层的librados和RGW、RBD、CephFS等服务。Ceph实现了非常底层的object storage，是纯粹的SDS，并且支持通用的ZFS、BtrFS和Ext4文件系统，能轻易得Scale，没有单点故障。</p>\n<h2 id=\"ceph特点\"><a class=\"headerlink\" href=\"#ceph特点\"></a>Ceph特点</h2>\n<ul>\n<li>高性能<br>\na. 摒弃了传统的集中式存储元数据寻址的方案，采用CRUSH算法，数据分布均衡，并行度高。<br>\nb.考虑了容灾域的隔离，能够实现各类负载的副本放置规则，例如跨机房、机架感知等。<br>\nc. 能够支持上千个存储节点的规模，支持TB到PB级的数据。</li>\n<li>高可用性<br>\na. 副本数可以灵活控制。<br>\nb. 支持故障域分隔，数据强一致性。<br>\nc. 多种故障场景自动进行修复自愈。<br>\nd. 没有单点故障，自动管理。</li>\n<li>高可扩展性<br>\na. 去中心化。<br>\nb. 扩展灵活。<br>\nc. 随着节点增加而线性增长。</li>\n<li>特性丰富<br>\na. 支持三种存储接口：块存储、文件存储、对象存储。<br>\nb. 支持自定义接口，支持多种语言驱动。</li>\n</ul>\n<h2 id=\"ceph架构\"><a class=\"headerlink\" href=\"#ceph架构\"></a>Ceph架构</h2>\n<p><strong>支持三种接口：</strong></p>\n<ul>\n<li>Object：有原生的API，而且也兼容Swift和S3的API。</li>\n<li>Block：支持精简配置、快照、克隆。</li>\n<li>File：Posix接口，支持快照。</li>\n</ul>\n<img src=\"/post/3a6a8a8c/rados.jpg\" title=\"rados\">\n<img src=\"/post/3a6a8a8c/ceph-architectural.png\" title=\"ceph-architectural\">\n<h2 id=\"ceph核心组件及概念介绍\"><a class=\"headerlink\" href=\"#ceph核心组件及概念介绍\"></a>Ceph核心组件及概念介绍</h2>\n<img src=\"/post/3a6a8a8c/ceph_all_component.png\" title=\"ceph-all-component\">\n<ul>\n<li>\n<p>Monitor</p>\n<p>一个Ceph集群需要多个Monitor组成的小集群，它们通过Paxos同步数据，用来保存OSD的元数据。</p>\n</li>\n<li>\n<p>OSD</p>\n<p>OSD全称Object Storage Device，也就是负责响应客户端请求返回具体数据的进程。一个Ceph集群一般都有很多个OSD。</p>\n</li>\n<li>\n<p>MDS</p>\n<p>MDS全称Ceph Metadata Server，是CephFS服务依赖的元数据服务。</p>\n</li>\n<li>\n<p>Object</p>\n<p>Ceph最底层的存储单元是Object对象，每个Object包含元数据和原始数据。</p>\n</li>\n<li>\n<p>PG</p>\n<p>PG全称Placement Grouops，是一个逻辑的概念，一个PG包含多个OSD。引入PG这一层其实是为了更好的分配数据和定位数据。</p>\n</li>\n<li>\n<p>RADOS</p>\n<p>RADOS全称Reliable Autonomic Distributed Object Store，是Ceph集群的精华，用户实现数据分配、Failover等集群操作。</p>\n</li>\n<li>\n<p>Libradio</p>\n<p>Librados是Rados提供库，因为RADOS是协议很难直接访问，因此上层的RBD、RGW和CephFS都是通过librados访问的，目前提供PHP、Ruby、Java、Python、C和C++支持。</p>\n</li>\n<li>\n<p>CRUSH</p>\n<p>CRUSH是Ceph使用的数据分布算法，类似一致性哈希，让数据分配到预期的地方。</p>\n</li>\n<li>\n<p>RBD</p>\n<p>RBD全称RADOS block device，是Ceph对外提供的块设备服务。</p>\n</li>\n<li>\n<p>RGW</p>\n<p>RGW全称RADOS gateway，是Ceph对外提供的对象存储服务，接口与S3和Swift兼容。</p>\n</li>\n<li>\n<p>CephFS</p>\n<p>CephFS全称Ceph File System，是Ceph对外提供的文件系统服务。</p>\n</li>\n</ul>\n<h1>CEPH Filesystem</h1>\n<h2 id=\"文件存储\"><a class=\"headerlink\" href=\"#文件存储\"></a>文件存储</h2>\n<img src=\"/post/3a6a8a8c/ceph_file.jpg\" title=\"file-system\">\n<p><strong>典型设备：</strong> FTP、NFS服务器<br>\n为了克服块存储文件无法共享的问题，所以有了文件存储。<br>\n在服务器上架设FTP与NFS服务，就是文件存储。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>造价低，随便一台机器就可以了。</li>\n<li>方便文件共享。</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>读写速率低。</li>\n<li>传输速率慢。</li>\n</ul>\n<p><strong>使用场景：</strong></p>\n<ul>\n<li>日志存储。</li>\n<li>有目录结构的文件存储。</li>\n<li>…</li>\n</ul>\n<h2 id=\"ceph-文件系统\"><a class=\"headerlink\" href=\"#ceph-文件系统\"></a>Ceph 文件系统</h2>\n<p>Ceph 文件系统（ Ceph FS ）是个 POSIX 兼容的文件系统，它使用 Ceph 存储集群来存储数据。 Ceph 文件系统与 Ceph 块设备、同时提供 S3 和 Swift API 的 Ceph 对象存储、或者原生库（ librados ）一样，都使用着相同的 Ceph 存储集群系统。</p>\n<p><img src=\"http://docs.ceph.org.cn/_images/ditaa-b5a320fc160057a1a7da010b4215489fa66de242.png\" alt=\"cephfs\"></p>\n<p>Ceph 文件系统要求 Ceph 存储集群内至少有一个 Ceph 元数据服务器。</p>\n<p>当前， CephFS 还缺乏健壮得像 ‘fsck’ 这样的检查和修复功能。存储重要数据时需小心使用，因为灾难恢复工具还没开发完。</p>\n<p>cephfs目前发展比较慢，之前一直没有稳定版本，2016年4月21日官方发布的jewel V10.2.0才公布第一个稳定版本，当前在生产环节中使用很少，所以还是建议谨慎使用，如果要使用需要进行严格的测试后才能上线。</p>\n<h1>CEPH Block Device</h1>\n<h2 id=\"块存储\"><a class=\"headerlink\" href=\"#块存储\"></a>块存储</h2>\n<img src=\"/post/3a6a8a8c/disk.jpg\" title=\"block device\">\n<p><strong>典型设备：</strong> 磁盘阵列，硬盘</p>\n<p>主要是将裸磁盘空间映射给主机使用的。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>通过Raid与LVM等手段，对数据提供了保护。</li>\n<li>多块廉价的硬盘组合起来，提高容量。</li>\n<li>多块磁盘组合出来的逻辑盘，提升读写效率。</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>采用SAN架构组网时，光纤交换机，造价成本高。</li>\n<li>主机之间无法共享数据。</li>\n</ul>\n<p><strong>使用场景：</strong></p>\n<ul>\n<li>docker容器、虚拟机磁盘存储分配。</li>\n<li>日志存储。</li>\n<li>文件存储。</li>\n<li>…</li>\n</ul>\n<h2 id=\"ceph-块设备-rbd\"><a class=\"headerlink\" href=\"#ceph-块设备-rbd\"></a>Ceph 块设备 (RBD)</h2>\n<p>块是一个字节序列（例如，一个 512 字节的数据块）。基于块的存储接口是最常见的存储数据方法，它们基于旋转介质，像硬盘、 CD 、软盘、甚至传统的 9 磁道磁带。无处不在的块设备接口使虚拟块设备成为与 Ceph 这样的海量存储系统交互的理想之选。</p>\n<p>Ceph 块设备是精简配置的、大小可调且将数据条带化存储到集群内的多个 OSD 。 Ceph 块设备利用 RADOS 的多种能力，如快照、复制和一致性。 Ceph 的 RADOS 块设备（ RBD ）使用内核模块或 librbd 库与 OSD 交互。</p>\n<p><img src=\"http://docs.ceph.org.cn/_images/ditaa-dc9f80d771b55f2daa5cbbfdb2dd0d3e6dfc17c0.png\" alt=\"rbd\"></p>\n<p>内核模块可使用 Linux 页缓存。对基于 librbd 的应用程序， Ceph 可提供 RBD 缓存。</p>\n<p>客户端可以通过内核模块挂在rbd使用，客户端使用rbd块设备就像使用普通硬盘一样，可以对其就行格式化然后使用；客户应用也可以通过librbd使用ceph块，典型的是云平台的块存储服务（如下图），云平台可以使用rbd作为云的存储后端提供镜像存储、volume块或者客户的系统引导盘等。</p>\n<img src=\"/post/3a6a8a8c/ceph_rbd2.png\" title=\"ceph-rbd\">\n<p>Ceph 块设备靠无限伸缩性提供了高性能，如向内核模块、或向 abbr:KVM (kernel virtual machines) （如 Qemu 、 OpenStack 和 CloudStack等云计算系统通过 libvirt 和 Qemu 可与 Ceph 块设备集成）。你可以用同一个集群同时运行 Ceph RADOS gateway、 Ceph FS 文件系统、和 Ceph 块设备。</p>\n<p>目前ceph rbd在云平台使用比较广泛而且也很稳定，社区的支持力度也非常大。</p>\n<h1>CEPH Object Gateway</h1>\n<h2 id=\"对象存储\"><a class=\"headerlink\" href=\"#对象存储\"></a>对象存储</h2>\n<p>对象存储是提供restful接口并数据组织形式扁平化的存储方法，对象存储同兼具块存储高速直接访问磁盘及文件存储的分布式共享特点。</p>\n\n<p><strong>典型设备：</strong> 内置大容量硬盘的分布式服务器(swift, s3)<br>\n多台服务器内置大容量硬盘，安装上对象存储管理软件，对外提供读写访问功能。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>具备块存储的读写高速。</li>\n<li>具备文件存储的共享等特性。</li>\n</ul>\n<p><strong>使用场景：</strong> (适合更新变动较少的数据)</p>\n<ul>\n<li>图片存储。</li>\n<li>视频存储。</li>\n<li>…</li>\n</ul>\n<h2 id=\"ceph-对象存储-radosgw\"><a class=\"headerlink\" href=\"#ceph-对象存储-radosgw\"></a>Ceph 对象存储 (radosgw)</h2>\n<p>Ceph 对象网关是一个构建在 <code>librados</code> 之上的对象存储接口，它为应用程序访问Ceph 存储集群提供了一个 RESTful 风格的网关 。 Ceph 对象存储支持 2 种接口：</p>\n<ol>\n<li><strong>兼容S3:</strong> 提供了对象存储接口，兼容大部分 亚马逊S3 RESTful 接口。</li>\n<li><strong>兼容Swift:</strong> 提供了对象存储接口，兼容大部分 Openstack Swift 接口。</li>\n</ol>\n<p>Ceph 对象存储使用 Ceph 对象网关守护进程（ <code>radosgw</code> ），它是个与 Ceph 存储集群交互的 FastCGI 模块。因为它提供了与 OpenStack Swift 和 Amazon S3 兼容的接口， RADOS 要有它自己的用户管理。 Ceph 对象网关可与 Ceph FS 客户端或 Ceph 块设备客户端共用一个存储集群。 S3 和 Swift 接口共用一个通用命名空间，所以你可以用一个接口写入数据、然后用另一个接口取出数据。</p>\n<p><img src=\"http://docs.ceph.org.cn/_images/ditaa-50d12451eb76c5c72c4574b08f0320b39a42e5f1.png\" alt=\"radosgw\"></p>\n<p>Ceph 对象存储<strong>不使用</strong> Ceph 元数据服务器。</p>\n<p>对象存储的应用场景：</p>\n<p>1）资源分发下载</p>\n<p>网站或者app需要上传、下载和分发视频图片等</p>\n<p>分发和下载app安装包等</p>\n<p>2）网盘</p>\n<p>可以对用户提供网盘服务，用户可以通过网盘存储自己任何格式的文件</p>\n<p>ceph对象存储目前已经有厂商在使用，但是大多会基于网关等做些优化以适应自己的使用场景。</p>\n"},{"title":"第二篇：Ceph集群环境准备","comments":1,"author":"zuoyang","type":"原创","toc":true,"abbrlink":"ad293d8","date":"2018-11-20T10:28:27.000Z","_content":"\n第一篇简单介绍了Ceph的架构，让我们对Ceph有了一个初步的印象。\n\n接下来，我将在MAC上介绍如何基于本机搭建ceph集群及cephfs、cephrgw、cephrbd服务。\n\n集群规划：\n\n- 生产环境\n  - 至少3台物理机组成Ceph集群\n  - 双网卡\n- 测试环境\n  - 1台主机也可以\n  - 单网卡也可以\n\n本文使用虚拟机搭建集群，集群设置如下：\n\n- mon集群：\n  - 3台虚拟机组成mon集群\n- osd集群：\n  - 3台虚拟机组成osd集群\n  - 每台虚拟机上3个osd进程\n- mgr集群：\n  - 3个mgr进程\n\n在部署之前，首先需要介绍前期环境的准备工作：\n\n- 软件准备：VirtualBox，CentOS\n- 安装虚拟机\n- 克隆虚拟机\n- \n\n# 软件准备\n\n## 安装VirtualBox\n\n点击 [VirtualBox Mac版本](http://download.virtualbox.org/virtualbox/5.1.6/VirtualBox-5.1.6-110634-OSX.dmg)，下载VirtualBox，然后双击下载好的软件，按照提示一直安装即可。\n\n### 添加网络\n\n安装好之后，需要添加一个网络，这样可以保证在虚拟机里也能正常上网。具体操作如下：\n\n点击左上角的`VirtualBox->偏好设置->网络->仅主机(Host-Only)网络->`点击右边的绿色➕，一般会默认添加了`vboxnet0`，双击`vboxnet0`，可以看到网络的IP信息，默认为`192.168.56.1`，如下图：\n\n{% asset_img  network.jpg 配置网络  %}\n\n{% asset_img  ip.jpg 默认IP %}\n\n\n\n## 下载CentOS镜像\n\n点击[CentOS 7.5 镜像Minimal](<http://mirrors.aliyun.com/centos/7.5.1804/isos/x86_64/CentOS-7-x86_64-Minimal-1804.iso >) ，这里我们下载Minimal版本，后面操作的时候，我们直接通过配置虚拟机IP，使得本机可以直接ssh访问虚拟机进行操作。\n\n\n\n# 安装CentOS虚拟机\n\n## 创建虚拟机\n\n- 打开VirtualBox，点击`新建`，这时会新建一个虚拟机，命名为`ceph-1`,类型选择`Linux`，版本选择`Linux 2.6/3.x/4.x 64bit`，具体见下图：\n\n  {% asset_img new.jpg  新建虚拟机 %}\n\n- 内存设置：默认值为1G，直接下一步即可，如下图:\n\n  {% asset_img memory.jpg 设置内存大小 %}\n\n- 创建虚拟硬盘：选择创建VDI，然后下一步，如下图:\n\n  {% asset_img  disk.jpg  创建虚拟硬盘 %}\n\n  {% asset_img virtual_disk.jpg  创建虚拟硬盘 %}\n\n- 存储在物理盘：这里有两个选项-`动态分配`或`固定大小`，这里选择`动态分配`，见下图:\n\n  {% asset_img  dynamic.jpg 动态分配 %}\n\n  - `动态分配`，这种方式下，创建一个2T的磁盘，实际只会占用计算机几十MB的空间，实际使用多少空间，才会占用多少空间，相当于用时分配。\n  - `固定大小`，这种方式下，创建多大的盘就会占用多大的空间。\n\n- 文件位置与大小：将空间大小设置为100G，这是用于系统盘。然后点击创建即可:\n\n  {% asset_img  disk_size.jpg 系统盘大小 %}\n\n至此，虚拟机创建完成。\n\n\n\n## 配置虚拟机\n\n### 添加CentOS镜像\n\n选择刚刚创建好的虚拟机，点击`设置`->`存储`->`控制器:IDE`->`没有盘片`，点击右侧的光盘按钮，将刚刚下载的CentOS的镜像添加进来，如下图所示：\n\n{% asset_img addios.jpg  添加CentOS镜像 %}\n\n### 添加3个2T磁盘\n\n点击`控制器:SATA`旁边的方形加号，添加SATA盘，`创建新的虚拟盘-> VHD-> 动态分配 -> 2TB`.\n\n步骤如下图：\n\n{% asset_img  newvhd.jpg  添加虚拟磁盘 %}\n\n{% asset_img  newvhd2.jpg  添加虚拟磁盘 %}\n\n{% asset_img finish.jpg  完成虚拟盘创建 %}\n\n\n\n### 配置网络\n\n点击`设置-> 网络-> 网卡 1-> 连接方式 -> 网络地址转换(NAT)`，用于给VM上网，如下图所示：\n\n{% asset_img adapter1.jpg 配置网卡1 %}\n\n点击`网卡2 -> 勾选启用网络连接 -> 连接方式 -> 仅主机(Host-only)网络 -> 界面名称 -> vboxnet0`这里的`vboxnet0`是在上一步中添加的，如下图所示：\n\n{% asset_img adapter2.jpg 配置网络 %}\n\n虚拟机配置完成，接下来进行安装CentOS。\n\n\n\n### 安装CentOS\n\n启动刚刚创建的虚拟机，Install CentOS 7，一直往下点，然后出现下面的页面：\n\n{% asset_img install_os1.jpg 安装CentOS1 %}\n\n点击红框中的选项，然后Begin Install：\n\n{% asset_img install_os2.jpg  安装CentOS2 %}\n\n之后再设置root密码：\n\n{% asset_img install_os3.jpg  设置root密码 %}\n\n{% asset_img  user.jpg  添加用户 %}\n\n{% asset_img user_set.jpg 设置账号密码 %}\n\n之后一直等就可以了，最后重启机器，安装完成。\n\n\n\n### 配置网卡\n\n#### 修改ifcfg-enp0s3\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n将最后一行的`ONBOOT=no`改为`ONBOOT=yes`,添加IPADDR，NETMASK，这个是`网卡1`，用于给虚拟机上网。\n\n#### 修改ifcfg-enp0s8\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s8\n#修改以下几个配置项\nBOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.56.101 #因为vboxnet0的IP为192.168.56.1\nNETMASK=255.255.255.0\n```\n\n重启网卡并检查联网状态：\n\n```shell\nsystemctl restart network\nping www.baidu.com\nPING www.a.shifen.com (115.239.211.112) 56(84) bytes of data.\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=1 ttl=63 time=2.79 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=2 ttl=63 time=25.7 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=3 ttl=63 time=3.58 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=5 ttl=63 time=3.62 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=6 ttl=63 time=2.97 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=7 ttl=63 time=2.99 ms\n```\n\n修改主机名`hostname`:\n\n```shell\necho ceph-1 > /etc/hostname\n```\n\n**然后重启机器，这样配置的hostname跟IP就会生效**\n\n然后就可以通过本机终端直接ssh到虚拟机进行操作，可以方便的进行复制黏贴。\n\n登录到虚拟机：\n\n```shell\nssh root@192.168.56.101\nThe authenticity of host '192.168.56.101 (192.168.56.101)' can't be established.\nECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.56.101' (ECDSA) to the list of known hosts.\nroot@192.168.56.101's password:\nLast login: Wed Nov 21 01:08:21 2018\n[root@ceph-1 ~]#\n```\n\n登录成功之后开始进行下面的操作。\n\n### 修改yum源\n\n这里将yum源修改成aliyun的源，指令如下:\n\n```shell\nyum clean all\ncurl http://mirrors.aliyun.com/repo/Centos-7.repo >/etc/yum.repos.d/CentOS-Base.repo\ncurl http://mirrors.aliyun.com/repo/epel-7.repo >/etc/yum.repos.d/epel.repo \nsed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo\nsed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo\nyum makecache\n```\n\n安装软件：\n\n```shell\nyum -y install wget ntp vim \n```\n\n\n\n## 虚拟机ceph软件安装\n\n### 配置ceph源\n\n在`/etc/yum.repos.d/`目录下新增一个ceph源文件`ceph.repo`,并写入下面内容：\n\n```shell\nvim /etc/yum.repos.d/ceph.repo\n#写入以下内容\n[ceph]\nname=ceph\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/\ngpgcheck=0\n[ceph-noarch]\nname=cephnoarch\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/\ngpgcheck=0\n[ceph-source]\nname=ceph-source\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/\ngpgcheck=0\n```\n\n### 安装ceph\n\n执行以下命令安装ceph:\n\n```shell\nyum clean all && yum makecache\nyum -y install yum-plugin-priorities \nyum -y install openssh-server\nyum -y install ceph ceph-radosgw\n```\n\n验证ceph是否安装完成：\n\n```shell\n[root@ceph-1 ~]# ceph -v\nceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)\n```\n\n说明ceph安装成功。\n\n至此，第一台虚拟机创建完成，然后关机。\n\n\n\n# 克隆虚拟机\n\n## 克隆机器\n\n点击刚刚创建好的虚拟机，然后右键点击复制，\n\n重命名虚拟机为`ceph-2`，并勾选重新初始化MAC和网卡选项。\n\n{% asset_img  clone2.jpg  %}\n\n点击继续，然后勾选完全复制\n\n{% asset_img  clone3.jpg  %}\n\n\n\n## 修改机器配置\n\n在VM上登陆`ceph-2`，修改`enp0s8`的IP。\n\n```shell\nvim /etc/sysconfig/network-scripts/ifcfg-enp0s8\nIPADDR=192.168.56.102\n```\n\n修改`hostname`\n\n```shell\necho ceph-2 > /etc/hostname\n```\n\n修改好之后重启，就可以通过本机终端ssh访问了\n\n```shell\nssh root@192.168.56.102\nThe authenticity of host '192.168.56.102 (192.168.56.102)' can't be established.\nECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.56.102' (ECDSA) to the list of known hosts.\nroot@192.168.56.102's password:\nLast login: Wed Nov 21 02:14:58 2018\n[root@ceph-2 ~]#\n```\n\n说明克隆成功。\n\n同样的方法克隆`ceph-3`，将修改IP为`192.168.56.103`。\n\n最后，将各个主机的IP加入各自的`/etc/hosts`中:\n\n```\nvim /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.56.101 ceph-1\n192.168.56.102 ceph-2\n192.168.56.103 ceph-3\n```\n\n最后重启所有主机。\n\n本篇结束，下一篇将重点介绍ceph集群的手工搭建。","source":"_posts/ceph-enviroment-set.md","raw":"---\ntitle: 第二篇：Ceph集群环境准备\ncomments: true\nauthor: zuoyang\ntype: 原创\ntoc: true\ncategories:\n  - ceph\ntags:\n  - ceph\n  - virtualBox\nabbrlink: ad293d8\ndate: 2018-11-20 18:28:27\n---\n\n第一篇简单介绍了Ceph的架构，让我们对Ceph有了一个初步的印象。\n\n接下来，我将在MAC上介绍如何基于本机搭建ceph集群及cephfs、cephrgw、cephrbd服务。\n\n集群规划：\n\n- 生产环境\n  - 至少3台物理机组成Ceph集群\n  - 双网卡\n- 测试环境\n  - 1台主机也可以\n  - 单网卡也可以\n\n本文使用虚拟机搭建集群，集群设置如下：\n\n- mon集群：\n  - 3台虚拟机组成mon集群\n- osd集群：\n  - 3台虚拟机组成osd集群\n  - 每台虚拟机上3个osd进程\n- mgr集群：\n  - 3个mgr进程\n\n在部署之前，首先需要介绍前期环境的准备工作：\n\n- 软件准备：VirtualBox，CentOS\n- 安装虚拟机\n- 克隆虚拟机\n- \n\n# 软件准备\n\n## 安装VirtualBox\n\n点击 [VirtualBox Mac版本](http://download.virtualbox.org/virtualbox/5.1.6/VirtualBox-5.1.6-110634-OSX.dmg)，下载VirtualBox，然后双击下载好的软件，按照提示一直安装即可。\n\n### 添加网络\n\n安装好之后，需要添加一个网络，这样可以保证在虚拟机里也能正常上网。具体操作如下：\n\n点击左上角的`VirtualBox->偏好设置->网络->仅主机(Host-Only)网络->`点击右边的绿色➕，一般会默认添加了`vboxnet0`，双击`vboxnet0`，可以看到网络的IP信息，默认为`192.168.56.1`，如下图：\n\n{% asset_img  network.jpg 配置网络  %}\n\n{% asset_img  ip.jpg 默认IP %}\n\n\n\n## 下载CentOS镜像\n\n点击[CentOS 7.5 镜像Minimal](<http://mirrors.aliyun.com/centos/7.5.1804/isos/x86_64/CentOS-7-x86_64-Minimal-1804.iso >) ，这里我们下载Minimal版本，后面操作的时候，我们直接通过配置虚拟机IP，使得本机可以直接ssh访问虚拟机进行操作。\n\n\n\n# 安装CentOS虚拟机\n\n## 创建虚拟机\n\n- 打开VirtualBox，点击`新建`，这时会新建一个虚拟机，命名为`ceph-1`,类型选择`Linux`，版本选择`Linux 2.6/3.x/4.x 64bit`，具体见下图：\n\n  {% asset_img new.jpg  新建虚拟机 %}\n\n- 内存设置：默认值为1G，直接下一步即可，如下图:\n\n  {% asset_img memory.jpg 设置内存大小 %}\n\n- 创建虚拟硬盘：选择创建VDI，然后下一步，如下图:\n\n  {% asset_img  disk.jpg  创建虚拟硬盘 %}\n\n  {% asset_img virtual_disk.jpg  创建虚拟硬盘 %}\n\n- 存储在物理盘：这里有两个选项-`动态分配`或`固定大小`，这里选择`动态分配`，见下图:\n\n  {% asset_img  dynamic.jpg 动态分配 %}\n\n  - `动态分配`，这种方式下，创建一个2T的磁盘，实际只会占用计算机几十MB的空间，实际使用多少空间，才会占用多少空间，相当于用时分配。\n  - `固定大小`，这种方式下，创建多大的盘就会占用多大的空间。\n\n- 文件位置与大小：将空间大小设置为100G，这是用于系统盘。然后点击创建即可:\n\n  {% asset_img  disk_size.jpg 系统盘大小 %}\n\n至此，虚拟机创建完成。\n\n\n\n## 配置虚拟机\n\n### 添加CentOS镜像\n\n选择刚刚创建好的虚拟机，点击`设置`->`存储`->`控制器:IDE`->`没有盘片`，点击右侧的光盘按钮，将刚刚下载的CentOS的镜像添加进来，如下图所示：\n\n{% asset_img addios.jpg  添加CentOS镜像 %}\n\n### 添加3个2T磁盘\n\n点击`控制器:SATA`旁边的方形加号，添加SATA盘，`创建新的虚拟盘-> VHD-> 动态分配 -> 2TB`.\n\n步骤如下图：\n\n{% asset_img  newvhd.jpg  添加虚拟磁盘 %}\n\n{% asset_img  newvhd2.jpg  添加虚拟磁盘 %}\n\n{% asset_img finish.jpg  完成虚拟盘创建 %}\n\n\n\n### 配置网络\n\n点击`设置-> 网络-> 网卡 1-> 连接方式 -> 网络地址转换(NAT)`，用于给VM上网，如下图所示：\n\n{% asset_img adapter1.jpg 配置网卡1 %}\n\n点击`网卡2 -> 勾选启用网络连接 -> 连接方式 -> 仅主机(Host-only)网络 -> 界面名称 -> vboxnet0`这里的`vboxnet0`是在上一步中添加的，如下图所示：\n\n{% asset_img adapter2.jpg 配置网络 %}\n\n虚拟机配置完成，接下来进行安装CentOS。\n\n\n\n### 安装CentOS\n\n启动刚刚创建的虚拟机，Install CentOS 7，一直往下点，然后出现下面的页面：\n\n{% asset_img install_os1.jpg 安装CentOS1 %}\n\n点击红框中的选项，然后Begin Install：\n\n{% asset_img install_os2.jpg  安装CentOS2 %}\n\n之后再设置root密码：\n\n{% asset_img install_os3.jpg  设置root密码 %}\n\n{% asset_img  user.jpg  添加用户 %}\n\n{% asset_img user_set.jpg 设置账号密码 %}\n\n之后一直等就可以了，最后重启机器，安装完成。\n\n\n\n### 配置网卡\n\n#### 修改ifcfg-enp0s3\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n将最后一行的`ONBOOT=no`改为`ONBOOT=yes`,添加IPADDR，NETMASK，这个是`网卡1`，用于给虚拟机上网。\n\n#### 修改ifcfg-enp0s8\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s8\n#修改以下几个配置项\nBOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.56.101 #因为vboxnet0的IP为192.168.56.1\nNETMASK=255.255.255.0\n```\n\n重启网卡并检查联网状态：\n\n```shell\nsystemctl restart network\nping www.baidu.com\nPING www.a.shifen.com (115.239.211.112) 56(84) bytes of data.\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=1 ttl=63 time=2.79 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=2 ttl=63 time=25.7 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=3 ttl=63 time=3.58 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=5 ttl=63 time=3.62 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=6 ttl=63 time=2.97 ms\n64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=7 ttl=63 time=2.99 ms\n```\n\n修改主机名`hostname`:\n\n```shell\necho ceph-1 > /etc/hostname\n```\n\n**然后重启机器，这样配置的hostname跟IP就会生效**\n\n然后就可以通过本机终端直接ssh到虚拟机进行操作，可以方便的进行复制黏贴。\n\n登录到虚拟机：\n\n```shell\nssh root@192.168.56.101\nThe authenticity of host '192.168.56.101 (192.168.56.101)' can't be established.\nECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.56.101' (ECDSA) to the list of known hosts.\nroot@192.168.56.101's password:\nLast login: Wed Nov 21 01:08:21 2018\n[root@ceph-1 ~]#\n```\n\n登录成功之后开始进行下面的操作。\n\n### 修改yum源\n\n这里将yum源修改成aliyun的源，指令如下:\n\n```shell\nyum clean all\ncurl http://mirrors.aliyun.com/repo/Centos-7.repo >/etc/yum.repos.d/CentOS-Base.repo\ncurl http://mirrors.aliyun.com/repo/epel-7.repo >/etc/yum.repos.d/epel.repo \nsed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo\nsed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo\nyum makecache\n```\n\n安装软件：\n\n```shell\nyum -y install wget ntp vim \n```\n\n\n\n## 虚拟机ceph软件安装\n\n### 配置ceph源\n\n在`/etc/yum.repos.d/`目录下新增一个ceph源文件`ceph.repo`,并写入下面内容：\n\n```shell\nvim /etc/yum.repos.d/ceph.repo\n#写入以下内容\n[ceph]\nname=ceph\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/\ngpgcheck=0\n[ceph-noarch]\nname=cephnoarch\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/\ngpgcheck=0\n[ceph-source]\nname=ceph-source\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/\ngpgcheck=0\n```\n\n### 安装ceph\n\n执行以下命令安装ceph:\n\n```shell\nyum clean all && yum makecache\nyum -y install yum-plugin-priorities \nyum -y install openssh-server\nyum -y install ceph ceph-radosgw\n```\n\n验证ceph是否安装完成：\n\n```shell\n[root@ceph-1 ~]# ceph -v\nceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)\n```\n\n说明ceph安装成功。\n\n至此，第一台虚拟机创建完成，然后关机。\n\n\n\n# 克隆虚拟机\n\n## 克隆机器\n\n点击刚刚创建好的虚拟机，然后右键点击复制，\n\n重命名虚拟机为`ceph-2`，并勾选重新初始化MAC和网卡选项。\n\n{% asset_img  clone2.jpg  %}\n\n点击继续，然后勾选完全复制\n\n{% asset_img  clone3.jpg  %}\n\n\n\n## 修改机器配置\n\n在VM上登陆`ceph-2`，修改`enp0s8`的IP。\n\n```shell\nvim /etc/sysconfig/network-scripts/ifcfg-enp0s8\nIPADDR=192.168.56.102\n```\n\n修改`hostname`\n\n```shell\necho ceph-2 > /etc/hostname\n```\n\n修改好之后重启，就可以通过本机终端ssh访问了\n\n```shell\nssh root@192.168.56.102\nThe authenticity of host '192.168.56.102 (192.168.56.102)' can't be established.\nECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.56.102' (ECDSA) to the list of known hosts.\nroot@192.168.56.102's password:\nLast login: Wed Nov 21 02:14:58 2018\n[root@ceph-2 ~]#\n```\n\n说明克隆成功。\n\n同样的方法克隆`ceph-3`，将修改IP为`192.168.56.103`。\n\n最后，将各个主机的IP加入各自的`/etc/hosts`中:\n\n```\nvim /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.56.101 ceph-1\n192.168.56.102 ceph-2\n192.168.56.103 ceph-3\n```\n\n最后重启所有主机。\n\n本篇结束，下一篇将重点介绍ceph集群的手工搭建。","slug":"ceph-enviroment-set","published":1,"updated":"2018-11-23T04:03:56.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsarn0033gvyg1axkc6l1","content":"<p>第一篇简单介绍了Ceph的架构，让我们对Ceph有了一个初步的印象。</p>\n<p>接下来，我将在MAC上介绍如何基于本机搭建ceph集群及cephfs、cephrgw、cephrbd服务。</p>\n<p>集群规划：</p>\n<ul>\n<li>生产环境\n<ul>\n<li>至少3台物理机组成Ceph集群</li>\n<li>双网卡</li>\n</ul>\n</li>\n<li>测试环境\n<ul>\n<li>1台主机也可以</li>\n<li>单网卡也可以</li>\n</ul>\n</li>\n</ul>\n<p>本文使用虚拟机搭建集群，集群设置如下：</p>\n<ul>\n<li>mon集群：\n<ul>\n<li>3台虚拟机组成mon集群</li>\n</ul>\n</li>\n<li>osd集群：\n<ul>\n<li>3台虚拟机组成osd集群</li>\n<li>每台虚拟机上3个osd进程</li>\n</ul>\n</li>\n<li>mgr集群：\n<ul>\n<li>3个mgr进程</li>\n</ul>\n</li>\n</ul>\n<p>在部署之前，首先需要介绍前期环境的准备工作：</p>\n<ul>\n<li>软件准备：VirtualBox，CentOS</li>\n<li>安装虚拟机</li>\n<li>克隆虚拟机</li>\n<li></li>\n</ul>\n<h1><span id=\"软件准备\">软件准备</span></h1>\n<h2><span id=\"安装virtualbox\">安装VirtualBox</span></h2>\n<p>点击 <a href=\"http://download.virtualbox.org/virtualbox/5.1.6/VirtualBox-5.1.6-110634-OSX.dmg\" target=\"_blank\" rel=\"noopener\">VirtualBox Mac版本</a>，下载VirtualBox，然后双击下载好的软件，按照提示一直安装即可。</p>\n<h3><span id=\"添加网络\">添加网络</span></h3>\n<p>安装好之后，需要添加一个网络，这样可以保证在虚拟机里也能正常上网。具体操作如下：</p>\n<p>点击左上角的<code>VirtualBox-&gt;偏好设置-&gt;网络-&gt;仅主机(Host-Only)网络-&gt;</code>点击右边的绿色➕，一般会默认添加了<code>vboxnet0</code>，双击<code>vboxnet0</code>，可以看到网络的IP信息，默认为<code>192.168.56.1</code>，如下图：</p>\n<img src=\"/post/ad293d8/network.jpg\" title=\"配置网络\">\n<img src=\"/post/ad293d8/ip.jpg\" title=\"默认IP\">\n<h2><span id=\"下载centos镜像\">下载CentOS镜像</span></h2>\n<p>点击<a href=\"http://mirrors.aliyun.com/centos/7.5.1804/isos/x86_64/CentOS-7-x86_64-Minimal-1804.iso\" target=\"_blank\" rel=\"noopener\">CentOS 7.5 镜像Minimal</a> ，这里我们下载Minimal版本，后面操作的时候，我们直接通过配置虚拟机IP，使得本机可以直接ssh访问虚拟机进行操作。</p>\n<h1><span id=\"安装centos虚拟机\">安装CentOS虚拟机</span></h1>\n<h2><span id=\"创建虚拟机\">创建虚拟机</span></h2>\n<ul>\n<li>\n<p>打开VirtualBox，点击<code>新建</code>，这时会新建一个虚拟机，命名为<code>ceph-1</code>,类型选择<code>Linux</code>，版本选择<code>Linux 2.6/3.x/4.x 64bit</code>，具体见下图：</p>\n<img src=\"/post/ad293d8/new.jpg\" title=\"新建虚拟机\">\n</li>\n<li>\n<p>内存设置：默认值为1G，直接下一步即可，如下图:</p>\n<img src=\"/post/ad293d8/memory.jpg\" title=\"设置内存大小\">\n</li>\n<li>\n<p>创建虚拟硬盘：选择创建VDI，然后下一步，如下图:</p>\n<img src=\"/post/ad293d8/disk.jpg\" title=\"创建虚拟硬盘\">\n<img src=\"/post/ad293d8/virtual_disk.jpg\" title=\"创建虚拟硬盘\">\n</li>\n<li>\n<p>存储在物理盘：这里有两个选项-<code>动态分配</code>或<code>固定大小</code>，这里选择<code>动态分配</code>，见下图:</p>\n<img src=\"/post/ad293d8/dynamic.jpg\" title=\"动态分配\">\n<ul>\n<li><code>动态分配</code>，这种方式下，创建一个2T的磁盘，实际只会占用计算机几十MB的空间，实际使用多少空间，才会占用多少空间，相当于用时分配。</li>\n<li><code>固定大小</code>，这种方式下，创建多大的盘就会占用多大的空间。</li>\n</ul>\n</li>\n<li>\n<p>文件位置与大小：将空间大小设置为100G，这是用于系统盘。然后点击创建即可:</p>\n<img src=\"/post/ad293d8/disk_size.jpg\" title=\"系统盘大小\">\n</li>\n</ul>\n<p>至此，虚拟机创建完成。</p>\n<h2><span id=\"配置虚拟机\">配置虚拟机</span></h2>\n<h3><span id=\"添加centos镜像\">添加CentOS镜像</span></h3>\n<p>选择刚刚创建好的虚拟机，点击<code>设置</code>-&gt;<code>存储</code>-&gt;<code>控制器:IDE</code>-&gt;<code>没有盘片</code>，点击右侧的光盘按钮，将刚刚下载的CentOS的镜像添加进来，如下图所示：</p>\n<img src=\"/post/ad293d8/addios.jpg\" title=\"添加CentOS镜像\">\n<h3><span id=\"添加3个2t磁盘\">添加3个2T磁盘</span></h3>\n<p>点击<code>控制器:SATA</code>旁边的方形加号，添加SATA盘，<code>创建新的虚拟盘-&gt; VHD-&gt; 动态分配 -&gt; 2TB</code>.</p>\n<p>步骤如下图：</p>\n<img src=\"/post/ad293d8/newvhd.jpg\" title=\"添加虚拟磁盘\">\n<img src=\"/post/ad293d8/newvhd2.jpg\" title=\"添加虚拟磁盘\">\n<img src=\"/post/ad293d8/finish.jpg\" title=\"完成虚拟盘创建\">\n<h3><span id=\"配置网络\">配置网络</span></h3>\n<p>点击<code>设置-&gt; 网络-&gt; 网卡 1-&gt; 连接方式 -&gt; 网络地址转换(NAT)</code>，用于给VM上网，如下图所示：</p>\n<img src=\"/post/ad293d8/adapter1.jpg\" title=\"配置网卡1\">\n<p>点击<code>网卡2 -&gt; 勾选启用网络连接 -&gt; 连接方式 -&gt; 仅主机(Host-only)网络 -&gt; 界面名称 -&gt; vboxnet0</code>这里的<code>vboxnet0</code>是在上一步中添加的，如下图所示：</p>\n<img src=\"/post/ad293d8/adapter2.jpg\" title=\"配置网络\">\n<p>虚拟机配置完成，接下来进行安装CentOS。</p>\n<h3><span id=\"安装centos\">安装CentOS</span></h3>\n<p>启动刚刚创建的虚拟机，Install CentOS 7，一直往下点，然后出现下面的页面：</p>\n<img src=\"/post/ad293d8/install_os1.jpg\" title=\"安装CentOS1\">\n<p>点击红框中的选项，然后Begin Install：</p>\n<img src=\"/post/ad293d8/install_os2.jpg\" title=\"安装CentOS2\">\n<p>之后再设置root密码：</p>\n<img src=\"/post/ad293d8/install_os3.jpg\" title=\"设置root密码\">\n<img src=\"/post/ad293d8/user.jpg\" title=\"添加用户\">\n<img src=\"/post/ad293d8/user_set.jpg\" title=\"设置账号密码\">\n<p>之后一直等就可以了，最后重启机器，安装完成。</p>\n<h3><span id=\"配置网卡\">配置网卡</span></h3>\n<h4><span id=\"修改ifcfg-enp0s3\">修改ifcfg-enp0s3</span></h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n<p>将最后一行的<code>ONBOOT=no</code>改为<code>ONBOOT=yes</code>,添加IPADDR，NETMASK，这个是<code>网卡1</code>，用于给虚拟机上网。</p>\n<h4><span id=\"修改ifcfg-enp0s8\">修改ifcfg-enp0s8</span></h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">修改以下几个配置项</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.56.101 #因为vboxnet0的IP为192.168.56.1</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br></pre></td></tr></table></figure>\n<p>重启网卡并检查联网状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br><span class=\"line\">ping www.baidu.com</span><br><span class=\"line\">PING www.a.shifen.com (115.239.211.112) 56(84) bytes of data.</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=1 ttl=63 time=2.79 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=2 ttl=63 time=25.7 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=3 ttl=63 time=3.58 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=5 ttl=63 time=3.62 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=6 ttl=63 time=2.97 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=7 ttl=63 time=2.99 ms</span><br></pre></td></tr></table></figure>\n<p>修改主机名<code>hostname</code>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo ceph-1 &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n<p><strong>然后重启机器，这样配置的hostname跟IP就会生效</strong></p>\n<p>然后就可以通过本机终端直接ssh到虚拟机进行操作，可以方便的进行复制黏贴。</p>\n<p>登录到虚拟机：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br><span class=\"line\">The authenticity of host '192.168.56.101 (192.168.56.101)' can't be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">Warning: Permanently added '192.168.56.101' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">root@192.168.56.101's password:</span><br><span class=\"line\">Last login: Wed Nov 21 01:08:21 2018</span><br><span class=\"line\">[root@ceph-1 ~]#</span><br></pre></td></tr></table></figure>\n<p>登录成功之后开始进行下面的操作。</p>\n<h3><span id=\"修改yum源\">修改yum源</span></h3>\n<p>这里将yum源修改成aliyun的源，指令如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/Centos-7.repo &gt;/etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/epel-7.repo &gt;/etc/yum.repos.d/epel.repo </span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<p>安装软件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install wget ntp vim</span><br></pre></td></tr></table></figure>\n<h2><span id=\"虚拟机ceph软件安装\">虚拟机ceph软件安装</span></h2>\n<h3><span id=\"配置ceph源\">配置ceph源</span></h3>\n<p>在<code>/etc/yum.repos.d/</code>目录下新增一个ceph源文件<code>ceph.repo</code>,并写入下面内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/ceph.repo</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">写入以下内容</span></span><br><span class=\"line\">[ceph]</span><br><span class=\"line\">name=ceph</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-noarch]</span><br><span class=\"line\">name=cephnoarch</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-source]</span><br><span class=\"line\">name=ceph-source</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n<h3><span id=\"安装ceph\">安装ceph</span></h3>\n<p>执行以下命令安装ceph:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br><span class=\"line\">yum -y install yum-plugin-priorities </span><br><span class=\"line\">yum -y install openssh-server</span><br><span class=\"line\">yum -y install ceph ceph-radosgw</span><br></pre></td></tr></table></figure>\n<p>验证ceph是否安装完成：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph -v</span><br><span class=\"line\">ceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)</span><br></pre></td></tr></table></figure>\n<p>说明ceph安装成功。</p>\n<p>至此，第一台虚拟机创建完成，然后关机。</p>\n<h1><span id=\"克隆虚拟机\">克隆虚拟机</span></h1>\n<h2><span id=\"克隆机器\">克隆机器</span></h2>\n<p>点击刚刚创建好的虚拟机，然后右键点击复制，</p>\n<p>重命名虚拟机为<code>ceph-2</code>，并勾选重新初始化MAC和网卡选项。</p>\n<img src=\"/post/ad293d8/clone2.jpg\">\n<p>点击继续，然后勾选完全复制</p>\n<img src=\"/post/ad293d8/clone3.jpg\">\n<h2><span id=\"修改机器配置\">修改机器配置</span></h2>\n<p>在VM上登陆<code>ceph-2</code>，修改<code>enp0s8</code>的IP。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class=\"line\">IPADDR=192.168.56.102</span><br></pre></td></tr></table></figure>\n<p>修改<code>hostname</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo ceph-2 &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n<p>修改好之后重启，就可以通过本机终端ssh访问了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.102</span><br><span class=\"line\">The authenticity of host '192.168.56.102 (192.168.56.102)' can't be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">Warning: Permanently added '192.168.56.102' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">root@192.168.56.102's password:</span><br><span class=\"line\">Last login: Wed Nov 21 02:14:58 2018</span><br><span class=\"line\">[root@ceph-2 ~]#</span><br></pre></td></tr></table></figure>\n<p>说明克隆成功。</p>\n<p>同样的方法克隆<code>ceph-3</code>，将修改IP为<code>192.168.56.103</code>。</p>\n<p>最后，将各个主机的IP加入各自的<code>/etc/hosts</code>中:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\"><span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>   localhost localhost<span class=\"selector-class\">.localdomain</span> localhost4 localhost4.localdomain4</span><br><span class=\"line\">::<span class=\"number\">1</span>         localhost localhost<span class=\"selector-class\">.localdomain</span> localhost6 localhost6.localdomain6</span><br><span class=\"line\"><span class=\"number\">192.168</span>.<span class=\"number\">56.101</span> ceph-<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">192.168</span>.<span class=\"number\">56.102</span> ceph-<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">192.168</span>.<span class=\"number\">56.103</span> ceph-<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>最后重启所有主机。</p>\n<p>本篇结束，下一篇将重点介绍ceph集群的手工搭建。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一篇简单介绍了Ceph的架构，让我们对Ceph有了一个初步的印象。</p>\n<p>接下来，我将在MAC上介绍如何基于本机搭建ceph集群及cephfs、cephrgw、cephrbd服务。</p>\n<p>集群规划：</p>\n<ul>\n<li>生产环境\n<ul>\n<li>至少3台物理机组成Ceph集群</li>\n<li>双网卡</li>\n</ul>\n</li>\n<li>测试环境\n<ul>\n<li>1台主机也可以</li>\n<li>单网卡也可以</li>\n</ul>\n</li>\n</ul>\n<p>本文使用虚拟机搭建集群，集群设置如下：</p>\n<ul>\n<li>mon集群：\n<ul>\n<li>3台虚拟机组成mon集群</li>\n</ul>\n</li>\n<li>osd集群：\n<ul>\n<li>3台虚拟机组成osd集群</li>\n<li>每台虚拟机上3个osd进程</li>\n</ul>\n</li>\n<li>mgr集群：\n<ul>\n<li>3个mgr进程</li>\n</ul>\n</li>\n</ul>\n<p>在部署之前，首先需要介绍前期环境的准备工作：</p>\n<ul>\n<li>软件准备：VirtualBox，CentOS</li>\n<li>安装虚拟机</li>\n<li>克隆虚拟机</li>\n<li></li>\n</ul>\n<h1>软件准备</h1>\n<h2 id=\"安装virtualbox\"><a class=\"headerlink\" href=\"#安装virtualbox\"></a>安装VirtualBox</h2>\n<p>点击 <a href=\"http://download.virtualbox.org/virtualbox/5.1.6/VirtualBox-5.1.6-110634-OSX.dmg\" target=\"_blank\" rel=\"noopener\">VirtualBox Mac版本</a>，下载VirtualBox，然后双击下载好的软件，按照提示一直安装即可。</p>\n<h3 id=\"添加网络\"><a class=\"headerlink\" href=\"#添加网络\"></a>添加网络</h3>\n<p>安装好之后，需要添加一个网络，这样可以保证在虚拟机里也能正常上网。具体操作如下：</p>\n<p>点击左上角的<code>VirtualBox-&gt;偏好设置-&gt;网络-&gt;仅主机(Host-Only)网络-&gt;</code>点击右边的绿色➕，一般会默认添加了<code>vboxnet0</code>，双击<code>vboxnet0</code>，可以看到网络的IP信息，默认为<code>192.168.56.1</code>，如下图：</p>\n<img src=\"/post/ad293d8/network.jpg\" title=\"配置网络\">\n<img src=\"/post/ad293d8/ip.jpg\" title=\"默认IP\">\n<h2 id=\"下载centos镜像\"><a class=\"headerlink\" href=\"#下载centos镜像\"></a>下载CentOS镜像</h2>\n<p>点击<a href=\"http://mirrors.aliyun.com/centos/7.5.1804/isos/x86_64/CentOS-7-x86_64-Minimal-1804.iso\" target=\"_blank\" rel=\"noopener\">CentOS 7.5 镜像Minimal</a> ，这里我们下载Minimal版本，后面操作的时候，我们直接通过配置虚拟机IP，使得本机可以直接ssh访问虚拟机进行操作。</p>\n<h1>安装CentOS虚拟机</h1>\n<h2 id=\"创建虚拟机\"><a class=\"headerlink\" href=\"#创建虚拟机\"></a>创建虚拟机</h2>\n<ul>\n<li>\n<p>打开VirtualBox，点击<code>新建</code>，这时会新建一个虚拟机，命名为<code>ceph-1</code>,类型选择<code>Linux</code>，版本选择<code>Linux 2.6/3.x/4.x 64bit</code>，具体见下图：</p>\n<img src=\"/post/ad293d8/new.jpg\" title=\"新建虚拟机\">\n</li>\n<li>\n<p>内存设置：默认值为1G，直接下一步即可，如下图:</p>\n<img src=\"/post/ad293d8/memory.jpg\" title=\"设置内存大小\">\n</li>\n<li>\n<p>创建虚拟硬盘：选择创建VDI，然后下一步，如下图:</p>\n<img src=\"/post/ad293d8/disk.jpg\" title=\"创建虚拟硬盘\">\n<img src=\"/post/ad293d8/virtual_disk.jpg\" title=\"创建虚拟硬盘\">\n</li>\n<li>\n<p>存储在物理盘：这里有两个选项-<code>动态分配</code>或<code>固定大小</code>，这里选择<code>动态分配</code>，见下图:</p>\n<img src=\"/post/ad293d8/dynamic.jpg\" title=\"动态分配\">\n<ul>\n<li><code>动态分配</code>，这种方式下，创建一个2T的磁盘，实际只会占用计算机几十MB的空间，实际使用多少空间，才会占用多少空间，相当于用时分配。</li>\n<li><code>固定大小</code>，这种方式下，创建多大的盘就会占用多大的空间。</li>\n</ul>\n</li>\n<li>\n<p>文件位置与大小：将空间大小设置为100G，这是用于系统盘。然后点击创建即可:</p>\n<img src=\"/post/ad293d8/disk_size.jpg\" title=\"系统盘大小\">\n</li>\n</ul>\n<p>至此，虚拟机创建完成。</p>\n<h2 id=\"配置虚拟机\"><a class=\"headerlink\" href=\"#配置虚拟机\"></a>配置虚拟机</h2>\n<h3 id=\"添加centos镜像\"><a class=\"headerlink\" href=\"#添加centos镜像\"></a>添加CentOS镜像</h3>\n<p>选择刚刚创建好的虚拟机，点击<code>设置</code>-&gt;<code>存储</code>-&gt;<code>控制器:IDE</code>-&gt;<code>没有盘片</code>，点击右侧的光盘按钮，将刚刚下载的CentOS的镜像添加进来，如下图所示：</p>\n<img src=\"/post/ad293d8/addios.jpg\" title=\"添加CentOS镜像\">\n<h3 id=\"添加3个2t磁盘\"><a class=\"headerlink\" href=\"#添加3个2t磁盘\"></a>添加3个2T磁盘</h3>\n<p>点击<code>控制器:SATA</code>旁边的方形加号，添加SATA盘，<code>创建新的虚拟盘-&gt; VHD-&gt; 动态分配 -&gt; 2TB</code>.</p>\n<p>步骤如下图：</p>\n<img src=\"/post/ad293d8/newvhd.jpg\" title=\"添加虚拟磁盘\">\n<img src=\"/post/ad293d8/newvhd2.jpg\" title=\"添加虚拟磁盘\">\n<img src=\"/post/ad293d8/finish.jpg\" title=\"完成虚拟盘创建\">\n<h3 id=\"配置网络\"><a class=\"headerlink\" href=\"#配置网络\"></a>配置网络</h3>\n<p>点击<code>设置-&gt; 网络-&gt; 网卡 1-&gt; 连接方式 -&gt; 网络地址转换(NAT)</code>，用于给VM上网，如下图所示：</p>\n<img src=\"/post/ad293d8/adapter1.jpg\" title=\"配置网卡1\">\n<p>点击<code>网卡2 -&gt; 勾选启用网络连接 -&gt; 连接方式 -&gt; 仅主机(Host-only)网络 -&gt; 界面名称 -&gt; vboxnet0</code>这里的<code>vboxnet0</code>是在上一步中添加的，如下图所示：</p>\n<img src=\"/post/ad293d8/adapter2.jpg\" title=\"配置网络\">\n<p>虚拟机配置完成，接下来进行安装CentOS。</p>\n<h3 id=\"安装centos\"><a class=\"headerlink\" href=\"#安装centos\"></a>安装CentOS</h3>\n<p>启动刚刚创建的虚拟机，Install CentOS 7，一直往下点，然后出现下面的页面：</p>\n<img src=\"/post/ad293d8/install_os1.jpg\" title=\"安装CentOS1\">\n<p>点击红框中的选项，然后Begin Install：</p>\n<img src=\"/post/ad293d8/install_os2.jpg\" title=\"安装CentOS2\">\n<p>之后再设置root密码：</p>\n<img src=\"/post/ad293d8/install_os3.jpg\" title=\"设置root密码\">\n<img src=\"/post/ad293d8/user.jpg\" title=\"添加用户\">\n<img src=\"/post/ad293d8/user_set.jpg\" title=\"设置账号密码\">\n<p>之后一直等就可以了，最后重启机器，安装完成。</p>\n<h3 id=\"配置网卡\"><a class=\"headerlink\" href=\"#配置网卡\"></a>配置网卡</h3>\n<h4 id=\"修改ifcfg-enp0s3\"><a class=\"headerlink\" href=\"#修改ifcfg-enp0s3\"></a>修改ifcfg-enp0s3</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n<p>将最后一行的<code>ONBOOT=no</code>改为<code>ONBOOT=yes</code>,添加IPADDR，NETMASK，这个是<code>网卡1</code>，用于给虚拟机上网。</p>\n<h4 id=\"修改ifcfg-enp0s8\"><a class=\"headerlink\" href=\"#修改ifcfg-enp0s8\"></a>修改ifcfg-enp0s8</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">修改以下几个配置项</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.56.101 #因为vboxnet0的IP为192.168.56.1</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br></pre></td></tr></table></figure>\n<p>重启网卡并检查联网状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br><span class=\"line\">ping www.baidu.com</span><br><span class=\"line\">PING www.a.shifen.com (115.239.211.112) 56(84) bytes of data.</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=1 ttl=63 time=2.79 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=2 ttl=63 time=25.7 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=3 ttl=63 time=3.58 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=5 ttl=63 time=3.62 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=6 ttl=63 time=2.97 ms</span><br><span class=\"line\">64 bytes from 115.239.211.112 (115.239.211.112): icmp_seq=7 ttl=63 time=2.99 ms</span><br></pre></td></tr></table></figure>\n<p>修改主机名<code>hostname</code>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo ceph-1 &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n<p><strong>然后重启机器，这样配置的hostname跟IP就会生效</strong></p>\n<p>然后就可以通过本机终端直接ssh到虚拟机进行操作，可以方便的进行复制黏贴。</p>\n<p>登录到虚拟机：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br><span class=\"line\">The authenticity of host '192.168.56.101 (192.168.56.101)' can't be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">Warning: Permanently added '192.168.56.101' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">root@192.168.56.101's password:</span><br><span class=\"line\">Last login: Wed Nov 21 01:08:21 2018</span><br><span class=\"line\">[root@ceph-1 ~]#</span><br></pre></td></tr></table></figure>\n<p>登录成功之后开始进行下面的操作。</p>\n<h3 id=\"修改yum源\"><a class=\"headerlink\" href=\"#修改yum源\"></a>修改yum源</h3>\n<p>这里将yum源修改成aliyun的源，指令如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/Centos-7.repo &gt;/etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/epel-7.repo &gt;/etc/yum.repos.d/epel.repo </span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<p>安装软件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install wget ntp vim</span><br></pre></td></tr></table></figure>\n<h2 id=\"虚拟机ceph软件安装\"><a class=\"headerlink\" href=\"#虚拟机ceph软件安装\"></a>虚拟机ceph软件安装</h2>\n<h3 id=\"配置ceph源\"><a class=\"headerlink\" href=\"#配置ceph源\"></a>配置ceph源</h3>\n<p>在<code>/etc/yum.repos.d/</code>目录下新增一个ceph源文件<code>ceph.repo</code>,并写入下面内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/ceph.repo</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">写入以下内容</span></span><br><span class=\"line\">[ceph]</span><br><span class=\"line\">name=ceph</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-noarch]</span><br><span class=\"line\">name=cephnoarch</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-source]</span><br><span class=\"line\">name=ceph-source</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装ceph\"><a class=\"headerlink\" href=\"#安装ceph\"></a>安装ceph</h3>\n<p>执行以下命令安装ceph:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br><span class=\"line\">yum -y install yum-plugin-priorities </span><br><span class=\"line\">yum -y install openssh-server</span><br><span class=\"line\">yum -y install ceph ceph-radosgw</span><br></pre></td></tr></table></figure>\n<p>验证ceph是否安装完成：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph -v</span><br><span class=\"line\">ceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)</span><br></pre></td></tr></table></figure>\n<p>说明ceph安装成功。</p>\n<p>至此，第一台虚拟机创建完成，然后关机。</p>\n<h1>克隆虚拟机</h1>\n<h2 id=\"克隆机器\"><a class=\"headerlink\" href=\"#克隆机器\"></a>克隆机器</h2>\n<p>点击刚刚创建好的虚拟机，然后右键点击复制，</p>\n<p>重命名虚拟机为<code>ceph-2</code>，并勾选重新初始化MAC和网卡选项。</p>\n<img src=\"/post/ad293d8/clone2.jpg\">\n<p>点击继续，然后勾选完全复制</p>\n<img src=\"/post/ad293d8/clone3.jpg\">\n<h2 id=\"修改机器配置\"><a class=\"headerlink\" href=\"#修改机器配置\"></a>修改机器配置</h2>\n<p>在VM上登陆<code>ceph-2</code>，修改<code>enp0s8</code>的IP。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class=\"line\">IPADDR=192.168.56.102</span><br></pre></td></tr></table></figure>\n<p>修改<code>hostname</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo ceph-2 &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n<p>修改好之后重启，就可以通过本机终端ssh访问了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.102</span><br><span class=\"line\">The authenticity of host '192.168.56.102 (192.168.56.102)' can't be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:uuwVZ9O8+0KypxxJUgZLANVYMOFKY2QAd1Jv7Fa2fQE.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">Warning: Permanently added '192.168.56.102' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">root@192.168.56.102's password:</span><br><span class=\"line\">Last login: Wed Nov 21 02:14:58 2018</span><br><span class=\"line\">[root@ceph-2 ~]#</span><br></pre></td></tr></table></figure>\n<p>说明克隆成功。</p>\n<p>同样的方法克隆<code>ceph-3</code>，将修改IP为<code>192.168.56.103</code>。</p>\n<p>最后，将各个主机的IP加入各自的<code>/etc/hosts</code>中:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\"><span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>   localhost localhost<span class=\"selector-class\">.localdomain</span> localhost4 localhost4.localdomain4</span><br><span class=\"line\">::<span class=\"number\">1</span>         localhost localhost<span class=\"selector-class\">.localdomain</span> localhost6 localhost6.localdomain6</span><br><span class=\"line\"><span class=\"number\">192.168</span>.<span class=\"number\">56.101</span> ceph-<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">192.168</span>.<span class=\"number\">56.102</span> ceph-<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">192.168</span>.<span class=\"number\">56.103</span> ceph-<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>最后重启所有主机。</p>\n<p>本篇结束，下一篇将重点介绍ceph集群的手工搭建。</p>\n"},{"title":"第四篇：创建cephfs服务","comments":1,"author":"zuoyang","type":"原创","toc":true,"abbrlink":"4a310db5","date":"2018-11-23T04:06:35.000Z","_content":"\n基于[上一篇](https://www.zuoyangblog.com/post/28a4bfb3.html)，我们搭建好了一个健康的ceph集群：\n\n- 3个mon节点组成的mon集群\n- 9个osd节点组成的osd集群\n- 3个mgr节点(ceph luminous版本才有的)\n- 3个mds服务(cephfs使用)\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   965MiB used, 18.0TiB / 18.0TiB avail\n    pgs:\n\n```\n\n本篇主要讲如何基于ceph集群搭建cephfs服务。\n\n# cephFS简介\n\nThe [Ceph Filesystem](http://docs.ceph.com/docs/mimic/glossary/#term-ceph-filesystem) (Ceph FS) is a POSIX-compliant filesystem that uses a Ceph Storage Cluster to store its data. \n\n{% asset_img  cephfs.jpg  %}\n\nCeph文件系统（CephFS）提供符合POSIX标准的文件系统作为服务，该服务在基于对象的Ceph存储集群之上。 CephFS文件被映射到Ceph存储在Ceph存储集群中的对象。 Ceph客户端有两种挂载cephfs的方式：基于内核和FUSE.下图为cephfs的结构图：\n\n{% asset_img  ceph_archite.jpg  %}\n\nCeph文件系统服务包括与Ceph存储集群一起部署的Ceph元数据服务器（MDS）。 MDS存储了文件系统里的所有元数据（目录，文件所有权，访问模式等）。 MDS（ceph-mds的守护进程）将一些简单的文件系统操作（例如列出目录或更改目录（ls，cd）等）与Ceph OSD守护进程隔离，这样可以减少对OSD进程造成不必要的负担。 因此，将元数据与数据分离意味着Ceph文件系统可以提供高性能服务，而不会对Ceph存储集群造成负担。\n\n- MDS：存储metadata(元数据)\n- OSD：存储file data(数据)\n\nceph-mds可以作为单个进程运行，也可以分发到多个物理机器，以实现高可用性或可伸缩性。\n\n- 高可用性：集群中处于standby状态的ceph-mds进程随时可以取代失败的active状态的ceph-mds，当active状态的ceph-mds进程失败时，ceph-mon很容易就可以把standby状态的mds转换成active状态，从而维持集群的可用性\n- 可扩展性：集群中可以有多个active状态的ceph-mds进程，它们会将目录树拆分为子树（以及单个繁忙目录的分片），从而有效地平衡所有活动服务器之间的负载。\n\n\n\n# 新建ceph client虚拟机\n\n根据[第二篇](https://www.zuoyangblog.com/post/ad293d8.html)的方法，新建一个虚拟机，我们命名为ceph-client.\n\n安装好之后配置相应的网络，具体方法详见[这里](https://www.zuoyangblog.com/post/ad293d8.html)\n\n## 修改ifcfg-enp0s3\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n将最后一行的`ONBOOT=no`改为`ONBOOT=yes`,添加IPADDR，NETMASK，这个是`网卡1`，用于给虚拟机上网。\n\n## 修改ifcfg-enp0s8\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s8\nBOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.56.200\nNETMASK=255.255.255.0\n```\n\n## 重启网卡并检查联网状态：\n\n```shell\nsystemctl restart network\n```\n\n## 修改主机名`hostname`:\n\n```shell\necho ceph-client > /etc/hostname\n```\n\n## 重启，通过本机终端登录\n\n```shell\nssh root@192.168.56.200\n```\n\n## 修改yum源\n\n```shell\nyum clean all\ncurl http://mirrors.aliyun.com/repo/Centos-7.repo >/etc/yum.repos.d/CentOS-Base.repo\ncurl http://mirrors.aliyun.com/repo/epel-7.repo >/etc/yum.repos.d/epel.repo \nsed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo\nsed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo\nyum makecache\n```\n\n## 配置ceph源\n\n在`/etc/yum.repos.d/`目录下新增一个ceph源文件`ceph.repo`,并写入下面内容：\n\n```shell\nvim /etc/yum.repos.d/ceph.repo\n#写入以下内容\n[ceph]\nname=ceph\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/\ngpgcheck=0\n[ceph-noarch]\nname=cephnoarch\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/\ngpgcheck=0\n[ceph-source]\nname=ceph-source\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/\ngpgcheck=0\n```\n\n## 安装软件\n\n```shell\nyum clean all && yum makecache\nyum -y install yum-plugin-priorities \nyum -y install openssh-server\n```\n\n\n\n# 创建cephFS\n\n登录mon集群的那三台机器中的一台即可，我这里登录ceph-1\n\n```shell\nssh root@192.168.56.101\n```\n\n## 创建cephfs\n\ncreatring pools\n\n```shell\n[root@ceph-1 ceph]# ceph osd pool create cephfs_data 64\npool 'cephfs_data' created\n[root@ceph-1 ceph]# ceph osd pool create cephfs_metadata 64\npool 'cephfs_metadata' created\n```\n\ncreating a filesystem\n\n```shell\n[root@ceph-1 ceph]# ceph fs new cephfs cephfs_metadata cephfs_data\nnew fs with metadata pool 2 and data pool 1\n[root@ceph-1 ceph]# ceph fs ls\nname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]\n```\n\n一旦文件系统创建好之后，mds的状态就会发生变化，如下所示：\n\n```shell\n[root@ceph-1 ceph]# ceph mds stat\ncephfs-1/1/1 up  {0=ceph-2=up:active}, 2 up:standby\n```\n\n再看看集群状态：\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    mds: cephfs-1/1/1 up  {0=ceph-2=up:active}, 2 up:standby\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   2 pools, 128 pgs\n    objects: 21 objects, 3.14KiB\n    usage:   967MiB used, 18.0TiB / 18.0TiB avail\n    pgs:     128 active+clean\n\n```\n\n- mds进入active状态\n- 生成了两个pool，128个pg\n\n## 挂载cephfs\n\ncephfs支持两种方式挂载：\n\n- 内核驱动\n- 使用fuse\n\n这是官网给出的两种挂载方式的对比：\n\nThe **FUSE client** is the most accessible and the easiest to upgrade to the version of Ceph used by the storage cluster, while the **kernel client** will often give better performance.\n\nThe clients do not always provide equivalent functionality, for example the **fuse client** supports client-enforced quotas while the **kernel client** does not.\n\n### 内核驱动 (with kernel)\n\nceph一个集群只支持创建一个cephfs,所以只要创建一次cephfs之后，就可以在客户端机器上创建目录并挂载到集群：\n\n在客户端机器上进行如下操作\n\n```shell\n[root@ceph-client ~]# mkdir -p /mycephfs\n[root@ceph-client ~]# mount -t ceph 192.168.56.101,192.168.56.102,192.168.56.103:6789:/ /mycephfs\n```\n\n查看挂载情况：\n\n```shell\n[root@ceph-client ~]# df -h\n文件系统                                             容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root                               50G  1.6G   49G    4% /\ndevtmpfs                                             485M     0  485M    0% /dev\ntmpfs                                                496M     0  496M    0% /dev/shm\ntmpfs                                                496M  6.8M  490M    2% /run\ntmpfs                                                496M     0  496M    0% /sys/fs/cgroup\n/dev/sda1                                           1014M  129M  886M   13% /boot\n/dev/mapper/centos-home                              347G   35M  347G    1% /home\ntmpfs                                                100M     0  100M    0% /run/user/0\n192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs\n```\n\n最后一行可以看到挂载成功。\n\n### 使用fuse (with fuse)\n\n使用fuse方式进行挂载，需要安装ceph-fuse工具，\n\n```shell\n[root@ceph-client ~]# yum install ceph-fuse\n ........\n已安装:\n  ceph-fuse.x86_64 2:12.2.9-0.el7\n\n作为依赖被安装:\n  fuse-libs.x86_64 0:2.9.2-10.el7    gperftools-libs.x86_64 0:2.6.1-1.el7    libibverbs.x86_64 0:15-7.el7_5    pciutils.x86_64 0:3.5.1-3.el7\n  rdma-core.x86_64 0:15-7.el7_5\n\n完毕！\n```\n\n```shell\n[root@ceph-client ~]# ceph-fuse -v\nceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)\n```\n\nceph-fuse安装完成。\n\n挂载cephfs\n\n```shell\n[root@ceph-client ~]# mkdir /fusefs\n[root@ceph-client ~]# ceph-fuse -m 192.168.56.101:6789 /fusefs\nceph-fuse[10854]: starting ceph client\nceph-fuse[10854]: starting fuse\n```\n\n```shell\n[root@ceph-client ~]# df -h\n文件系统                                             容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root                               50G  1.6G   49G    4% /\ndevtmpfs                                             485M     0  485M    0% /dev\ntmpfs                                                496M     0  496M    0% /dev/shm\ntmpfs                                                496M  6.8M  490M    2% /run\ntmpfs                                                496M     0  496M    0% /sys/fs/cgroup\n/dev/sda1                                           1014M  129M  886M   13% /boot\n/dev/mapper/centos-home                              347G   35M  347G    1% /home\ntmpfs                                                100M     0  100M    0% /run/user/0\n192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs\nceph-fuse                                            5.4T     0  5.4T    0% /fusefs\n```\n\n查看最后一行，说明挂载成功。\n\n# 总结\n\n本篇主要介绍了cephfs的架构以及在ceph集群上挂载cephfs的流程。","source":"_posts/create-cephfs.md","raw":"---\ntitle: 第四篇：创建cephfs服务\ncomments: true\nauthor: zuoyang\ntype: 原创\ntoc: true\ncategories:\n  - ceph\ntags:\n  - ceph\n  - cephfs\nabbrlink: 4a310db5\ndate: 2018-11-23 12:06:35\n---\n\n基于[上一篇](https://www.zuoyangblog.com/post/28a4bfb3.html)，我们搭建好了一个健康的ceph集群：\n\n- 3个mon节点组成的mon集群\n- 9个osd节点组成的osd集群\n- 3个mgr节点(ceph luminous版本才有的)\n- 3个mds服务(cephfs使用)\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   965MiB used, 18.0TiB / 18.0TiB avail\n    pgs:\n\n```\n\n本篇主要讲如何基于ceph集群搭建cephfs服务。\n\n# cephFS简介\n\nThe [Ceph Filesystem](http://docs.ceph.com/docs/mimic/glossary/#term-ceph-filesystem) (Ceph FS) is a POSIX-compliant filesystem that uses a Ceph Storage Cluster to store its data. \n\n{% asset_img  cephfs.jpg  %}\n\nCeph文件系统（CephFS）提供符合POSIX标准的文件系统作为服务，该服务在基于对象的Ceph存储集群之上。 CephFS文件被映射到Ceph存储在Ceph存储集群中的对象。 Ceph客户端有两种挂载cephfs的方式：基于内核和FUSE.下图为cephfs的结构图：\n\n{% asset_img  ceph_archite.jpg  %}\n\nCeph文件系统服务包括与Ceph存储集群一起部署的Ceph元数据服务器（MDS）。 MDS存储了文件系统里的所有元数据（目录，文件所有权，访问模式等）。 MDS（ceph-mds的守护进程）将一些简单的文件系统操作（例如列出目录或更改目录（ls，cd）等）与Ceph OSD守护进程隔离，这样可以减少对OSD进程造成不必要的负担。 因此，将元数据与数据分离意味着Ceph文件系统可以提供高性能服务，而不会对Ceph存储集群造成负担。\n\n- MDS：存储metadata(元数据)\n- OSD：存储file data(数据)\n\nceph-mds可以作为单个进程运行，也可以分发到多个物理机器，以实现高可用性或可伸缩性。\n\n- 高可用性：集群中处于standby状态的ceph-mds进程随时可以取代失败的active状态的ceph-mds，当active状态的ceph-mds进程失败时，ceph-mon很容易就可以把standby状态的mds转换成active状态，从而维持集群的可用性\n- 可扩展性：集群中可以有多个active状态的ceph-mds进程，它们会将目录树拆分为子树（以及单个繁忙目录的分片），从而有效地平衡所有活动服务器之间的负载。\n\n\n\n# 新建ceph client虚拟机\n\n根据[第二篇](https://www.zuoyangblog.com/post/ad293d8.html)的方法，新建一个虚拟机，我们命名为ceph-client.\n\n安装好之后配置相应的网络，具体方法详见[这里](https://www.zuoyangblog.com/post/ad293d8.html)\n\n## 修改ifcfg-enp0s3\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n将最后一行的`ONBOOT=no`改为`ONBOOT=yes`,添加IPADDR，NETMASK，这个是`网卡1`，用于给虚拟机上网。\n\n## 修改ifcfg-enp0s8\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s8\nBOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.56.200\nNETMASK=255.255.255.0\n```\n\n## 重启网卡并检查联网状态：\n\n```shell\nsystemctl restart network\n```\n\n## 修改主机名`hostname`:\n\n```shell\necho ceph-client > /etc/hostname\n```\n\n## 重启，通过本机终端登录\n\n```shell\nssh root@192.168.56.200\n```\n\n## 修改yum源\n\n```shell\nyum clean all\ncurl http://mirrors.aliyun.com/repo/Centos-7.repo >/etc/yum.repos.d/CentOS-Base.repo\ncurl http://mirrors.aliyun.com/repo/epel-7.repo >/etc/yum.repos.d/epel.repo \nsed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo\nsed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo\nyum makecache\n```\n\n## 配置ceph源\n\n在`/etc/yum.repos.d/`目录下新增一个ceph源文件`ceph.repo`,并写入下面内容：\n\n```shell\nvim /etc/yum.repos.d/ceph.repo\n#写入以下内容\n[ceph]\nname=ceph\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/\ngpgcheck=0\n[ceph-noarch]\nname=cephnoarch\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/\ngpgcheck=0\n[ceph-source]\nname=ceph-source\nbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/\ngpgcheck=0\n```\n\n## 安装软件\n\n```shell\nyum clean all && yum makecache\nyum -y install yum-plugin-priorities \nyum -y install openssh-server\n```\n\n\n\n# 创建cephFS\n\n登录mon集群的那三台机器中的一台即可，我这里登录ceph-1\n\n```shell\nssh root@192.168.56.101\n```\n\n## 创建cephfs\n\ncreatring pools\n\n```shell\n[root@ceph-1 ceph]# ceph osd pool create cephfs_data 64\npool 'cephfs_data' created\n[root@ceph-1 ceph]# ceph osd pool create cephfs_metadata 64\npool 'cephfs_metadata' created\n```\n\ncreating a filesystem\n\n```shell\n[root@ceph-1 ceph]# ceph fs new cephfs cephfs_metadata cephfs_data\nnew fs with metadata pool 2 and data pool 1\n[root@ceph-1 ceph]# ceph fs ls\nname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]\n```\n\n一旦文件系统创建好之后，mds的状态就会发生变化，如下所示：\n\n```shell\n[root@ceph-1 ceph]# ceph mds stat\ncephfs-1/1/1 up  {0=ceph-2=up:active}, 2 up:standby\n```\n\n再看看集群状态：\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    mds: cephfs-1/1/1 up  {0=ceph-2=up:active}, 2 up:standby\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   2 pools, 128 pgs\n    objects: 21 objects, 3.14KiB\n    usage:   967MiB used, 18.0TiB / 18.0TiB avail\n    pgs:     128 active+clean\n\n```\n\n- mds进入active状态\n- 生成了两个pool，128个pg\n\n## 挂载cephfs\n\ncephfs支持两种方式挂载：\n\n- 内核驱动\n- 使用fuse\n\n这是官网给出的两种挂载方式的对比：\n\nThe **FUSE client** is the most accessible and the easiest to upgrade to the version of Ceph used by the storage cluster, while the **kernel client** will often give better performance.\n\nThe clients do not always provide equivalent functionality, for example the **fuse client** supports client-enforced quotas while the **kernel client** does not.\n\n### 内核驱动 (with kernel)\n\nceph一个集群只支持创建一个cephfs,所以只要创建一次cephfs之后，就可以在客户端机器上创建目录并挂载到集群：\n\n在客户端机器上进行如下操作\n\n```shell\n[root@ceph-client ~]# mkdir -p /mycephfs\n[root@ceph-client ~]# mount -t ceph 192.168.56.101,192.168.56.102,192.168.56.103:6789:/ /mycephfs\n```\n\n查看挂载情况：\n\n```shell\n[root@ceph-client ~]# df -h\n文件系统                                             容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root                               50G  1.6G   49G    4% /\ndevtmpfs                                             485M     0  485M    0% /dev\ntmpfs                                                496M     0  496M    0% /dev/shm\ntmpfs                                                496M  6.8M  490M    2% /run\ntmpfs                                                496M     0  496M    0% /sys/fs/cgroup\n/dev/sda1                                           1014M  129M  886M   13% /boot\n/dev/mapper/centos-home                              347G   35M  347G    1% /home\ntmpfs                                                100M     0  100M    0% /run/user/0\n192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs\n```\n\n最后一行可以看到挂载成功。\n\n### 使用fuse (with fuse)\n\n使用fuse方式进行挂载，需要安装ceph-fuse工具，\n\n```shell\n[root@ceph-client ~]# yum install ceph-fuse\n ........\n已安装:\n  ceph-fuse.x86_64 2:12.2.9-0.el7\n\n作为依赖被安装:\n  fuse-libs.x86_64 0:2.9.2-10.el7    gperftools-libs.x86_64 0:2.6.1-1.el7    libibverbs.x86_64 0:15-7.el7_5    pciutils.x86_64 0:3.5.1-3.el7\n  rdma-core.x86_64 0:15-7.el7_5\n\n完毕！\n```\n\n```shell\n[root@ceph-client ~]# ceph-fuse -v\nceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)\n```\n\nceph-fuse安装完成。\n\n挂载cephfs\n\n```shell\n[root@ceph-client ~]# mkdir /fusefs\n[root@ceph-client ~]# ceph-fuse -m 192.168.56.101:6789 /fusefs\nceph-fuse[10854]: starting ceph client\nceph-fuse[10854]: starting fuse\n```\n\n```shell\n[root@ceph-client ~]# df -h\n文件系统                                             容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root                               50G  1.6G   49G    4% /\ndevtmpfs                                             485M     0  485M    0% /dev\ntmpfs                                                496M     0  496M    0% /dev/shm\ntmpfs                                                496M  6.8M  490M    2% /run\ntmpfs                                                496M     0  496M    0% /sys/fs/cgroup\n/dev/sda1                                           1014M  129M  886M   13% /boot\n/dev/mapper/centos-home                              347G   35M  347G    1% /home\ntmpfs                                                100M     0  100M    0% /run/user/0\n192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs\nceph-fuse                                            5.4T     0  5.4T    0% /fusefs\n```\n\n查看最后一行，说明挂载成功。\n\n# 总结\n\n本篇主要介绍了cephfs的架构以及在ceph集群上挂载cephfs的流程。","slug":"create-cephfs","published":1,"updated":"2018-11-23T08:06:09.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsarp0036gvygd2p6yo3s","content":"<p>基于<a href=\"https://www.zuoyangblog.com/post/28a4bfb3.html\">上一篇</a>，我们搭建好了一个健康的ceph集群：</p>\n<ul>\n<li>3个mon节点组成的mon集群</li>\n<li>9个osd节点组成的osd集群</li>\n<li>3个mgr节点(ceph luminous版本才有的)</li>\n<li>3个mds服务(cephfs使用)</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   965MiB used, 18.0TiB / 18.0TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>本篇主要讲如何基于ceph集群搭建cephfs服务。</p>\n<h1><span id=\"cephfs简介\">cephFS简介</span></h1>\n<p>The <a href=\"http://docs.ceph.com/docs/mimic/glossary/#term-ceph-filesystem\" target=\"_blank\" rel=\"noopener\">Ceph Filesystem</a> (Ceph FS) is a POSIX-compliant filesystem that uses a Ceph Storage Cluster to store its data.</p>\n<img src=\"/post/4a310db5/cephfs.jpg\">\n<p>Ceph文件系统（CephFS）提供符合POSIX标准的文件系统作为服务，该服务在基于对象的Ceph存储集群之上。 CephFS文件被映射到Ceph存储在Ceph存储集群中的对象。 Ceph客户端有两种挂载cephfs的方式：基于内核和FUSE.下图为cephfs的结构图：</p>\n<img src=\"/post/4a310db5/ceph_archite.jpg\">\n<p>Ceph文件系统服务包括与Ceph存储集群一起部署的Ceph元数据服务器（MDS）。 MDS存储了文件系统里的所有元数据（目录，文件所有权，访问模式等）。 MDS（ceph-mds的守护进程）将一些简单的文件系统操作（例如列出目录或更改目录（ls，cd）等）与Ceph OSD守护进程隔离，这样可以减少对OSD进程造成不必要的负担。 因此，将元数据与数据分离意味着Ceph文件系统可以提供高性能服务，而不会对Ceph存储集群造成负担。</p>\n<ul>\n<li>MDS：存储metadata(元数据)</li>\n<li>OSD：存储file data(数据)</li>\n</ul>\n<p>ceph-mds可以作为单个进程运行，也可以分发到多个物理机器，以实现高可用性或可伸缩性。</p>\n<ul>\n<li>高可用性：集群中处于standby状态的ceph-mds进程随时可以取代失败的active状态的ceph-mds，当active状态的ceph-mds进程失败时，ceph-mon很容易就可以把standby状态的mds转换成active状态，从而维持集群的可用性</li>\n<li>可扩展性：集群中可以有多个active状态的ceph-mds进程，它们会将目录树拆分为子树（以及单个繁忙目录的分片），从而有效地平衡所有活动服务器之间的负载。</li>\n</ul>\n<h1><span id=\"新建ceph-client虚拟机\">新建ceph client虚拟机</span></h1>\n<p>根据<a href=\"https://www.zuoyangblog.com/post/ad293d8.html\">第二篇</a>的方法，新建一个虚拟机，我们命名为ceph-client.</p>\n<p>安装好之后配置相应的网络，具体方法详见<a href=\"https://www.zuoyangblog.com/post/ad293d8.html\">这里</a></p>\n<h2><span id=\"修改ifcfg-enp0s3\">修改ifcfg-enp0s3</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n<p>将最后一行的<code>ONBOOT=no</code>改为<code>ONBOOT=yes</code>,添加IPADDR，NETMASK，这个是<code>网卡1</code>，用于给虚拟机上网。</p>\n<h2><span id=\"修改ifcfg-enp0s8\">修改ifcfg-enp0s8</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.56.200</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br></pre></td></tr></table></figure>\n<h2><span id=\"重启网卡并检查联网状态\">重启网卡并检查联网状态：</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n<h2><span id=\"修改主机名hostname\">修改主机名<code>hostname</code>:</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo ceph-client &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n<h2><span id=\"重启通过本机终端登录\">重启，通过本机终端登录</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.200</span><br></pre></td></tr></table></figure>\n<h2><span id=\"修改yum源\">修改yum源</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/Centos-7.repo &gt;/etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/epel-7.repo &gt;/etc/yum.repos.d/epel.repo </span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<h2><span id=\"配置ceph源\">配置ceph源</span></h2>\n<p>在<code>/etc/yum.repos.d/</code>目录下新增一个ceph源文件<code>ceph.repo</code>,并写入下面内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/ceph.repo</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">写入以下内容</span></span><br><span class=\"line\">[ceph]</span><br><span class=\"line\">name=ceph</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-noarch]</span><br><span class=\"line\">name=cephnoarch</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-source]</span><br><span class=\"line\">name=ceph-source</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n<h2><span id=\"安装软件\">安装软件</span></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br><span class=\"line\">yum -y install yum-plugin-priorities </span><br><span class=\"line\">yum -y install openssh-server</span><br></pre></td></tr></table></figure>\n<h1><span id=\"创建cephfs\">创建cephFS</span></h1>\n<p>登录mon集群的那三台机器中的一台即可，我这里登录ceph-1</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br></pre></td></tr></table></figure>\n<h2><span id=\"创建cephfs\">创建cephfs</span></h2>\n<p>creatring pools</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd pool create cephfs_data 64</span><br><span class=\"line\">pool 'cephfs_data' created</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph osd pool create cephfs_metadata 64</span><br><span class=\"line\">pool 'cephfs_metadata' created</span><br></pre></td></tr></table></figure>\n<p>creating a filesystem</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph fs new cephfs cephfs_metadata cephfs_data</span><br><span class=\"line\">new fs with metadata pool 2 and data pool 1</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph fs ls</span><br><span class=\"line\">name: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]</span><br></pre></td></tr></table></figure>\n<p>一旦文件系统创建好之后，mds的状态就会发生变化，如下所示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph mds stat</span><br><span class=\"line\">cephfs-1/1/1 up  &#123;0=ceph-2=up:active&#125;, 2 up:standby</span><br></pre></td></tr></table></figure>\n<p>再看看集群状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    mds: cephfs-1/1/1 up  &#123;0=ceph-2=up:active&#125;, 2 up:standby</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   2 pools, 128 pgs</span><br><span class=\"line\">    objects: 21 objects, 3.14KiB</span><br><span class=\"line\">    usage:   967MiB used, 18.0TiB / 18.0TiB avail</span><br><span class=\"line\">    pgs:     128 active+clean</span><br></pre></td></tr></table></figure>\n<ul>\n<li>mds进入active状态</li>\n<li>生成了两个pool，128个pg</li>\n</ul>\n<h2><span id=\"挂载cephfs\">挂载cephfs</span></h2>\n<p>cephfs支持两种方式挂载：</p>\n<ul>\n<li>内核驱动</li>\n<li>使用fuse</li>\n</ul>\n<p>这是官网给出的两种挂载方式的对比：</p>\n<p>The <strong>FUSE client</strong> is the most accessible and the easiest to upgrade to the version of Ceph used by the storage cluster, while the <strong>kernel client</strong> will often give better performance.</p>\n<p>The clients do not always provide equivalent functionality, for example the <strong>fuse client</strong> supports client-enforced quotas while the <strong>kernel client</strong> does not.</p>\n<h3><span id=\"内核驱动-with-kernel\">内核驱动 (with kernel)</span></h3>\n<p>ceph一个集群只支持创建一个cephfs,所以只要创建一次cephfs之后，就可以在客户端机器上创建目录并挂载到集群：</p>\n<p>在客户端机器上进行如下操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# mkdir -p /mycephfs</span><br><span class=\"line\">[root@ceph-client ~]# mount -t ceph 192.168.56.101,192.168.56.102,192.168.56.103:6789:/ /mycephfs</span><br></pre></td></tr></table></figure>\n<p>查看挂载情况：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# df -h</span><br><span class=\"line\">文件系统                                             容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">/dev/mapper/centos-root                               50G  1.6G   49G    4% /</span><br><span class=\"line\">devtmpfs                                             485M     0  485M    0% /dev</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /dev/shm</span><br><span class=\"line\">tmpfs                                                496M  6.8M  490M    2% /run</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1                                           1014M  129M  886M   13% /boot</span><br><span class=\"line\">/dev/mapper/centos-home                              347G   35M  347G    1% /home</span><br><span class=\"line\">tmpfs                                                100M     0  100M    0% /run/user/0</span><br><span class=\"line\">192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs</span><br></pre></td></tr></table></figure>\n<p>最后一行可以看到挂载成功。</p>\n<h3><span id=\"使用fuse-with-fuse\">使用fuse (with fuse)</span></h3>\n<p>使用fuse方式进行挂载，需要安装ceph-fuse工具，</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# yum install ceph-fuse</span><br><span class=\"line\"> ........</span><br><span class=\"line\">已安装:</span><br><span class=\"line\">  ceph-fuse.x86_64 2:12.2.9-0.el7</span><br><span class=\"line\"></span><br><span class=\"line\">作为依赖被安装:</span><br><span class=\"line\">  fuse-libs.x86_64 0:2.9.2-10.el7    gperftools-libs.x86_64 0:2.6.1-1.el7    libibverbs.x86_64 0:15-7.el7_5    pciutils.x86_64 0:3.5.1-3.el7</span><br><span class=\"line\">  rdma-core.x86_64 0:15-7.el7_5</span><br><span class=\"line\"></span><br><span class=\"line\">完毕！</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# ceph-fuse -v</span><br><span class=\"line\">ceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)</span><br></pre></td></tr></table></figure>\n<p>ceph-fuse安装完成。</p>\n<p>挂载cephfs</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# mkdir /fusefs</span><br><span class=\"line\">[root@ceph-client ~]# ceph-fuse -m 192.168.56.101:6789 /fusefs</span><br><span class=\"line\">ceph-fuse[10854]: starting ceph client</span><br><span class=\"line\">ceph-fuse[10854]: starting fuse</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# df -h</span><br><span class=\"line\">文件系统                                             容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">/dev/mapper/centos-root                               50G  1.6G   49G    4% /</span><br><span class=\"line\">devtmpfs                                             485M     0  485M    0% /dev</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /dev/shm</span><br><span class=\"line\">tmpfs                                                496M  6.8M  490M    2% /run</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1                                           1014M  129M  886M   13% /boot</span><br><span class=\"line\">/dev/mapper/centos-home                              347G   35M  347G    1% /home</span><br><span class=\"line\">tmpfs                                                100M     0  100M    0% /run/user/0</span><br><span class=\"line\">192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs</span><br><span class=\"line\">ceph-fuse                                            5.4T     0  5.4T    0% /fusefs</span><br></pre></td></tr></table></figure>\n<p>查看最后一行，说明挂载成功。</p>\n<h1><span id=\"总结\">总结</span></h1>\n<p>本篇主要介绍了cephfs的架构以及在ceph集群上挂载cephfs的流程。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>基于<a href=\"https://www.zuoyangblog.com/post/28a4bfb3.html\">上一篇</a>，我们搭建好了一个健康的ceph集群：</p>\n<ul>\n<li>3个mon节点组成的mon集群</li>\n<li>9个osd节点组成的osd集群</li>\n<li>3个mgr节点(ceph luminous版本才有的)</li>\n<li>3个mds服务(cephfs使用)</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   965MiB used, 18.0TiB / 18.0TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>本篇主要讲如何基于ceph集群搭建cephfs服务。</p>\n<h1>cephFS简介</h1>\n<p>The <a href=\"http://docs.ceph.com/docs/mimic/glossary/#term-ceph-filesystem\" target=\"_blank\" rel=\"noopener\">Ceph Filesystem</a> (Ceph FS) is a POSIX-compliant filesystem that uses a Ceph Storage Cluster to store its data.</p>\n<img src=\"/post/4a310db5/cephfs.jpg\">\n<p>Ceph文件系统（CephFS）提供符合POSIX标准的文件系统作为服务，该服务在基于对象的Ceph存储集群之上。 CephFS文件被映射到Ceph存储在Ceph存储集群中的对象。 Ceph客户端有两种挂载cephfs的方式：基于内核和FUSE.下图为cephfs的结构图：</p>\n<img src=\"/post/4a310db5/ceph_archite.jpg\">\n<p>Ceph文件系统服务包括与Ceph存储集群一起部署的Ceph元数据服务器（MDS）。 MDS存储了文件系统里的所有元数据（目录，文件所有权，访问模式等）。 MDS（ceph-mds的守护进程）将一些简单的文件系统操作（例如列出目录或更改目录（ls，cd）等）与Ceph OSD守护进程隔离，这样可以减少对OSD进程造成不必要的负担。 因此，将元数据与数据分离意味着Ceph文件系统可以提供高性能服务，而不会对Ceph存储集群造成负担。</p>\n<ul>\n<li>MDS：存储metadata(元数据)</li>\n<li>OSD：存储file data(数据)</li>\n</ul>\n<p>ceph-mds可以作为单个进程运行，也可以分发到多个物理机器，以实现高可用性或可伸缩性。</p>\n<ul>\n<li>高可用性：集群中处于standby状态的ceph-mds进程随时可以取代失败的active状态的ceph-mds，当active状态的ceph-mds进程失败时，ceph-mon很容易就可以把standby状态的mds转换成active状态，从而维持集群的可用性</li>\n<li>可扩展性：集群中可以有多个active状态的ceph-mds进程，它们会将目录树拆分为子树（以及单个繁忙目录的分片），从而有效地平衡所有活动服务器之间的负载。</li>\n</ul>\n<h1>新建ceph client虚拟机</h1>\n<p>根据<a href=\"https://www.zuoyangblog.com/post/ad293d8.html\">第二篇</a>的方法，新建一个虚拟机，我们命名为ceph-client.</p>\n<p>安装好之后配置相应的网络，具体方法详见<a href=\"https://www.zuoyangblog.com/post/ad293d8.html\">这里</a></p>\n<h2 id=\"修改ifcfg-enp0s3\"><a class=\"headerlink\" href=\"#修改ifcfg-enp0s3\"></a>修改ifcfg-enp0s3</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n<p>将最后一行的<code>ONBOOT=no</code>改为<code>ONBOOT=yes</code>,添加IPADDR，NETMASK，这个是<code>网卡1</code>，用于给虚拟机上网。</p>\n<h2 id=\"修改ifcfg-enp0s8\"><a class=\"headerlink\" href=\"#修改ifcfg-enp0s8\"></a>修改ifcfg-enp0s8</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.56.200</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br></pre></td></tr></table></figure>\n<h2 id=\"重启网卡并检查联网状态：\"><a class=\"headerlink\" href=\"#重启网卡并检查联网状态：\"></a>重启网卡并检查联网状态：</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改主机名hostname\"><a class=\"headerlink\" href=\"#修改主机名hostname\"></a>修改主机名<code>hostname</code>:</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo ceph-client &gt; /etc/hostname</span><br></pre></td></tr></table></figure>\n<h2 id=\"重启-通过本机终端登录\"><a class=\"headerlink\" href=\"#重启-通过本机终端登录\"></a>重启，通过本机终端登录</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.200</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改yum源\"><a class=\"headerlink\" href=\"#修改yum源\"></a>修改yum源</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/Centos-7.repo &gt;/etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/epel-7.repo &gt;/etc/yum.repos.d/epel.repo </span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">sed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置ceph源\"><a class=\"headerlink\" href=\"#配置ceph源\"></a>配置ceph源</h2>\n<p>在<code>/etc/yum.repos.d/</code>目录下新增一个ceph源文件<code>ceph.repo</code>,并写入下面内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/ceph.repo</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">写入以下内容</span></span><br><span class=\"line\">[ceph]</span><br><span class=\"line\">name=ceph</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/x86_64/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-noarch]</span><br><span class=\"line\">name=cephnoarch</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">[ceph-source]</span><br><span class=\"line\">name=ceph-source</span><br><span class=\"line\">baseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMS/</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装软件\"><a class=\"headerlink\" href=\"#安装软件\"></a>安装软件</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br><span class=\"line\">yum -y install yum-plugin-priorities </span><br><span class=\"line\">yum -y install openssh-server</span><br></pre></td></tr></table></figure>\n<h1>创建cephFS</h1>\n<p>登录mon集群的那三台机器中的一台即可，我这里登录ceph-1</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建cephfs\"><a class=\"headerlink\" href=\"#创建cephfs\"></a>创建cephfs</h2>\n<p>creatring pools</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd pool create cephfs_data 64</span><br><span class=\"line\">pool 'cephfs_data' created</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph osd pool create cephfs_metadata 64</span><br><span class=\"line\">pool 'cephfs_metadata' created</span><br></pre></td></tr></table></figure>\n<p>creating a filesystem</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph fs new cephfs cephfs_metadata cephfs_data</span><br><span class=\"line\">new fs with metadata pool 2 and data pool 1</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph fs ls</span><br><span class=\"line\">name: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]</span><br></pre></td></tr></table></figure>\n<p>一旦文件系统创建好之后，mds的状态就会发生变化，如下所示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph mds stat</span><br><span class=\"line\">cephfs-1/1/1 up  &#123;0=ceph-2=up:active&#125;, 2 up:standby</span><br></pre></td></tr></table></figure>\n<p>再看看集群状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    mds: cephfs-1/1/1 up  &#123;0=ceph-2=up:active&#125;, 2 up:standby</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   2 pools, 128 pgs</span><br><span class=\"line\">    objects: 21 objects, 3.14KiB</span><br><span class=\"line\">    usage:   967MiB used, 18.0TiB / 18.0TiB avail</span><br><span class=\"line\">    pgs:     128 active+clean</span><br></pre></td></tr></table></figure>\n<ul>\n<li>mds进入active状态</li>\n<li>生成了两个pool，128个pg</li>\n</ul>\n<h2 id=\"挂载cephfs\"><a class=\"headerlink\" href=\"#挂载cephfs\"></a>挂载cephfs</h2>\n<p>cephfs支持两种方式挂载：</p>\n<ul>\n<li>内核驱动</li>\n<li>使用fuse</li>\n</ul>\n<p>这是官网给出的两种挂载方式的对比：</p>\n<p>The <strong>FUSE client</strong> is the most accessible and the easiest to upgrade to the version of Ceph used by the storage cluster, while the <strong>kernel client</strong> will often give better performance.</p>\n<p>The clients do not always provide equivalent functionality, for example the <strong>fuse client</strong> supports client-enforced quotas while the <strong>kernel client</strong> does not.</p>\n<h3 id=\"内核驱动-with-kernel\"><a class=\"headerlink\" href=\"#内核驱动-with-kernel\"></a>内核驱动 (with kernel)</h3>\n<p>ceph一个集群只支持创建一个cephfs,所以只要创建一次cephfs之后，就可以在客户端机器上创建目录并挂载到集群：</p>\n<p>在客户端机器上进行如下操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# mkdir -p /mycephfs</span><br><span class=\"line\">[root@ceph-client ~]# mount -t ceph 192.168.56.101,192.168.56.102,192.168.56.103:6789:/ /mycephfs</span><br></pre></td></tr></table></figure>\n<p>查看挂载情况：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# df -h</span><br><span class=\"line\">文件系统                                             容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">/dev/mapper/centos-root                               50G  1.6G   49G    4% /</span><br><span class=\"line\">devtmpfs                                             485M     0  485M    0% /dev</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /dev/shm</span><br><span class=\"line\">tmpfs                                                496M  6.8M  490M    2% /run</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1                                           1014M  129M  886M   13% /boot</span><br><span class=\"line\">/dev/mapper/centos-home                              347G   35M  347G    1% /home</span><br><span class=\"line\">tmpfs                                                100M     0  100M    0% /run/user/0</span><br><span class=\"line\">192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs</span><br></pre></td></tr></table></figure>\n<p>最后一行可以看到挂载成功。</p>\n<h3 id=\"使用fuse-with-fuse\"><a class=\"headerlink\" href=\"#使用fuse-with-fuse\"></a>使用fuse (with fuse)</h3>\n<p>使用fuse方式进行挂载，需要安装ceph-fuse工具，</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# yum install ceph-fuse</span><br><span class=\"line\"> ........</span><br><span class=\"line\">已安装:</span><br><span class=\"line\">  ceph-fuse.x86_64 2:12.2.9-0.el7</span><br><span class=\"line\"></span><br><span class=\"line\">作为依赖被安装:</span><br><span class=\"line\">  fuse-libs.x86_64 0:2.9.2-10.el7    gperftools-libs.x86_64 0:2.6.1-1.el7    libibverbs.x86_64 0:15-7.el7_5    pciutils.x86_64 0:3.5.1-3.el7</span><br><span class=\"line\">  rdma-core.x86_64 0:15-7.el7_5</span><br><span class=\"line\"></span><br><span class=\"line\">完毕！</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# ceph-fuse -v</span><br><span class=\"line\">ceph version 12.2.9 (9e300932ef8a8916fb3fda78c58691a6ab0f4217) luminous (stable)</span><br></pre></td></tr></table></figure>\n<p>ceph-fuse安装完成。</p>\n<p>挂载cephfs</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# mkdir /fusefs</span><br><span class=\"line\">[root@ceph-client ~]# ceph-fuse -m 192.168.56.101:6789 /fusefs</span><br><span class=\"line\">ceph-fuse[10854]: starting ceph client</span><br><span class=\"line\">ceph-fuse[10854]: starting fuse</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-client ~]# df -h</span><br><span class=\"line\">文件系统                                             容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">/dev/mapper/centos-root                               50G  1.6G   49G    4% /</span><br><span class=\"line\">devtmpfs                                             485M     0  485M    0% /dev</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /dev/shm</span><br><span class=\"line\">tmpfs                                                496M  6.8M  490M    2% /run</span><br><span class=\"line\">tmpfs                                                496M     0  496M    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1                                           1014M  129M  886M   13% /boot</span><br><span class=\"line\">/dev/mapper/centos-home                              347G   35M  347G    1% /home</span><br><span class=\"line\">tmpfs                                                100M     0  100M    0% /run/user/0</span><br><span class=\"line\">192.168.56.101,192.168.56.102,192.168.56.103:6789:/  5.4T     0  5.4T    0% /mycephfs</span><br><span class=\"line\">ceph-fuse                                            5.4T     0  5.4T    0% /fusefs</span><br></pre></td></tr></table></figure>\n<p>查看最后一行，说明挂载成功。</p>\n<h1>总结</h1>\n<p>本篇主要介绍了cephfs的架构以及在ceph集群上挂载cephfs的流程。</p>\n"},{"title":"第三篇：手动部署Ceph集群","comments":1,"author":"zuoyang","type":"原创","toc":true,"abbrlink":"28a4bfb3","date":"2018-11-21T12:33:05.000Z","_content":"\n上篇介绍了部署Ceph的环境准备工作，本篇主要内容是介绍手动部署Ceph的全过程。\n\n# 环境\n\n## 集群环境\n\n[上一篇](https://www.zuoyangblog.com/post/ad293d8.html)，我们创建了3台虚拟机，虚拟机配置如下：\n\n```shell\n[root@ceph-1 ~]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda               8:0    0  100G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   99G  0 part\n  ├─centos-root 253:0    0   50G  0 lvm  /\n  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]\n  └─centos-home 253:2    0   47G  0 lvm  /home\nsdb               8:16   0    2T  0 disk\nsdc               8:32   0    2T  0 disk\nsdd               8:48   0    2T  0 disk\nsde               8:64   0  600G  0 disk\nsr0              11:0    1 1024M  0 rom\n```\n\n- 3块大小为2T的磁盘，sdb,sdc,sdd，用于启动osd进程\n- 一块大小为600G的磁盘，作为osd的journal分区\n\n**集群配置如下：**\n\n| 主机   | IP             | 功能                   |\n| ------ | -------------- | ---------------------- |\n| ceph-1 | 192.168.56.101 | mon1、osd0、osd1、osd2 |\n| ceph-2 | 192.168.56.102 | mon2、osd3、osd4、osd5 |\n| ceph-3 | 192.168.56.103 | mon3、osd6、osd7、osd8 |\n\n\n\n## 配置NTP服务\n\n将NTP server放在ceph-1节点上，ceph-2/3节点是NTP client，这样可以从根本上解决时间同步问题。\n\n### 修改配置文件\n\n从本机登录到ceph-1：\n\n```shell\nssh root@192.168.56.101\n```\n\n在ceph-1节点上进行如下操作：\n\n修改`/etc/ntp.conf`,注释掉默认的四个server，添加三行配置如下：\n\n```shell\nvim  /etc/ntp.conf\n###comment following lines:\n#server 0.centos.pool.ntp.org iburst\n#server 1.centos.pool.ntp.org iburst\n#server 2.centos.pool.ntp.org iburst\n#server 3.centos.pool.ntp.org iburst\n###add following lines:\nserver 127.127.1.0 minpoll 4\nfudge 127.127.1.0 stratum 0\nrestrict 192.168.56.0 mask 255.255.0.0 nomodify notrap\n```\n\n修改`/etc/ntp/step-tickers`文件如下：\n\n```shell\n# List of NTP servers used by the ntpdate service.\n# 0.centos.pool.ntp.org\n127.127.1.0\n```\n\n在重启ntp服务之前需要将防火墙关闭，否则客户端不能访问ntp服务：\n\n### 关闭防火墙\n\n关闭`selinux`&`firewalld`\n\n```shell\nsed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsetenforce 0\nsystemctl stop firewalld \nsystemctl disable firewalld\n```\n\n### 启动ntp服务\n\n重启ntp服务，并查看server端是否运行正常，正常的标准就是`ntpq -p`指令的最下面一行是`*`:\n\n```shell\n[root@ceph-1 ~]# systemctl enable ntpd\nCreated symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.\n[root@ceph-1 ~]# systemctl restart ntpd \n[root@ceph-1 ~]# ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n*LOCAL(0)        .LOCL.           0 l   15   16    1    0.000    0.000   0.000\n```\n\nNTP server端已经配置完毕，下面开始配置client端。\n\n### 配置客户端ntp同步\n\n同样的方式登录到**ceph-2/ceph-3**机器上：\n\n修改`/etc/ntp.conf`，注释掉四行server，添加一行server指向ceph-1:\n\n```shell\nvim /etc/ntp.conf\n\n#server 0.centos.pool.ntp.org iburst\n#server 1.centos.pool.ntp.org iburst\n#server 2.centos.pool.ntp.org iburst\n#server 3.centos.pool.ntp.org iburst\n\nserver 192.168.56.101\n```\n\n重启ntp服务并观察client是否正确连接到server端，同样正确连接的标准是`ntpq -p`的最下面一行以`*`号开头:\n\n```shell\n[root@ceph-2 ~]# systemctl stop firewalld\n[root@ceph-2 ~]# systemctl disable firewalld \n[root@ceph-2 ~]# systemctl restart ntpd\n[root@ceph-2 ~]# systemctl enable ntpd\nCreated symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.\n```\n\n开始的时候会显示INIT状态，然后等了几分钟之后就出现了`*`。\n\n异常状态：\n\n```shell\n[root@ceph-2 ~]# ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n ceph-1          .INIT.          16 u    -   64    0    0.000    0.000   0.000\n```\n\n正常状态：\n\n```shell\n[root@ceph-2 ~]# ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n*ceph-1          LOCAL(0)         3 u   45   64   77    0.323    0.060   0.034\n```\n\n**在搭建ceph集群之前，一定要保证ntp服务能够正常运行。**\n\n\n\n# 手动搭建ceph集群\n\n## 手动部署mon集群\n\n### 主mon节点部署 （192.168.56.101，ceph-1）\n\n登录到ceph-1机器：\n\n```shell\nssh root@192.168.56.101\n```\n\n- **创建ceph用户与目录**\n\n新建一个脚本文件`prepare_env.sh`,然后写入以下内容：\n\n```shell\n[root@ceph-1 ~]# vim prepare_env.sh\n/usr/sbin/groupadd ceph -g 167 -o -r\n/usr/sbin/useradd ceph -u 167 -o -r -g ceph -s /sbin/nologin -c \"Ceph daemons\"\nmkdir -p /etc/ceph/\nchown -R ceph:ceph /etc/ceph/\nmkdir -p /var/run/ceph\nchown -R ceph:ceph /var/run/ceph\nmkdir -p /var/log/ceph\nchown -R ceph:ceph /var/log/ceph\nmkdir -p /var/lib/ceph/mon\nchown -R ceph:ceph /var/lib/ceph\n```\n\n- **创建ceph.conf文件**\n\n新建一个conf文件`ceph.conf`,然后写入以下内容：\n\n```shell\n[root@ceph-1 ~]# vim /etc/ceph/ceph.conf\n[global]\nfsid = c165f9d0-88df-48a7-8cc5-11da82f99c93\nmon initial members = ceph-1\nmon host = 192.168.56.101,192.168.56.102,192.168.56.103\nrbd default features = 1\nauth_cluster_required = none\nauth_service_required = none\nauth_client_required = none\npublic network = 192.168.56.0/24\ncluster network = 192.168.56.0/24\nosd journal size = 1024\nosd pool default size = 3\nosd pool default min size = 1\nosd pool default pg num = 300\nosd pool default pgp num = 300\nosd crush chooseleaf type = 1\n\n[mon]\nmon allow pool delete = true\n```\n\n这里不对各个参数的含义进行解释，对于初学者而言，先把集群搭建起来，后面再去花时间了解整个ceph的原理及配置文件各个参数对集群的影响。\n\n其中 `fsid` 是为集群分配的一个 uuid, 可使用`uuidgen`命令生成。初始化 mon 节点其实只需要这一个配置就够了。\n`mon host` 配置 ceph 命令行工具访问操作 ceph 集群时查找 mon 节点入口。\nceph 集群可包含多个 mon 节点实现高可用容灾, 避免单点故障。\n`rbd default features = 1` 配置 rbd 客户端创建磁盘时禁用一些需要高版本内核才能支持的特性。\n\n- **拷贝这两个文件到ceph-2,ceph-3机器上**\n\n```shell\nscp prepare_env.sh  192.168.56.102:/home\nscp prepare_env.sh  192.168.56.103:/home\nscp /etc/ceph/ceph.conf  192.168.56.102:/etc/ceph/\nscp /etc/ceph/ceph.conf  192.168.56.103:/etc/ceph/\n```\n\n- **启动mon节点**\n\n首先执行脚本,创建ceph用户及相关目录。\n\n```shell\nsh prepare_env.sh\n```\n\n1、为此集群创建密钥环、并生成Monitor密钥 \n\n```shell\n[root@ceph-1 ~]# ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'\ncreating /tmp/ceph.mon.keyring\n```\n\n2、生成管理员密钥环，生成 `client.admin` 用户并加入密钥环\n\n```shell\n[root@ceph-1 ~]# ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --set-uid=0 --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'\ncreating /etc/ceph/ceph.client.admin.keyring\n```\n\n3、把 `client.admin` 密钥加入 `ceph.mon.keyring`  (3台机器一样)\n\n```shell\n[root@ceph-1 ~]# ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring\nimporting contents of /etc/ceph/ceph.client.admin.keyring into /tmp/ceph.mon.keyring\n```\n\n4、用规划好的主机名、对应 IP 地址、和 FSID 生成一个Monitor Map，并保存为 `/tmp/monmap`\n\n这里的`--fsid`需要跟ceph.conf里面的`fsid`保持一致\n\n```shell\n[root@ceph-1 ~]# monmaptool --create --add `hostname` `hostname -i`  --fsid c165f9d0-88df-48a7-8cc5-11da82f99c93 /tmp/monmap --clobber\nmonmaptool: monmap file /tmp/monmap\nmonmaptool: set fsid to c165f9d0-88df-48a7-8cc5-11da82f99c93\nmonmaptool: writing epoch 0 to /tmp/monmap (1 monitors)\n```\n\n5、在Monitor主机上分别创建数据目录\n\n```shell\n[root@ceph-1 ~]# rm -rf /var/lib/ceph/mon/ceph-`hostname`/\n[root@ceph-1 ~]# mkdir /var/lib/ceph/mon/ceph-`hostname`/\n[root@ceph-1 ~]# chown ceph:ceph -R /var/lib/ceph/mon/ceph-`hostname`/\n[root@ceph-1 ~]# chown -R ceph:ceph /var/lib/ceph/\n[root@ceph-1 ~]# chown  ceph:ceph /tmp/monmap\n[root@ceph-1 ~]# chown  ceph:ceph /tmp/ceph.mon.keyring\n```\n\n6、用Monitor Map和密钥环组装守护进程所需的初始数据\n\n```shell\n[root@ceph-1 ~]# sudo -u ceph ceph-mon --mkfs -i `hostname` --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring\n```\n\n7、建一个空文件 `done` ，表示监视器已创建、可以启动了\n\n```shell\n[root@ceph-1 ~]# touch /var/lib/ceph/mon/ceph-`hostname`/done\n```\n\n8、启动Monitor\n\n```shell\n[root@ceph-1 ~]# cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@`hostname`.service\n[root@ceph-1 ~]# sudo systemctl start ceph-mon@`hostname`\n[root@ceph-1 ~]# sudo systemctl enable ceph-mon@`hostname`\nCreated symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-1.service to /usr/lib/systemd/system/ceph-mon@ceph-1.service.\n```\n\n9、确认下集群在运行\n\n```shell\n [root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 1 daemons, quorum ceph-1\n    mgr: no daemons active\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n### 从mon节点部署 (192.168.56.102 & 192.168.56.103)\n\n在另外两台机器ceph-2,ceph-3上，分别ssh登录上去。\n\n#### 创建启动脚本\n\n新建启动脚本文件`start_repo_mon.sh`\n\n```\nvim start_repo_mon.sh\n```\n\n```shell\nhost_name=`hostname`\nsudo ceph mon getmap -o /tmp/monmap\nsudo rm -rf /var/lib/ceph/mon/ceph-$host_name\nsudo ceph-mon -i $host_name --mkfs --monmap /tmp/monmap\nsudo chown -R ceph:ceph /var/lib/ceph/mon/ceph-$host_name/\n#nohup ceph-mon -f --cluster ceph --id $host_name --setuser ceph --setgroup ceph &\n#ceph-mon -f --cluster ceph --id $host_name &\nsudo cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@$host_name.service\nsudo systemctl start ceph-mon@$host_name\nsudo systemctl enable ceph-mon@$host_name\n```\n\n#### 启动mon进程\n\n- **ceph-2机器192.168.56.102**\n\n```shell\n[root@ceph-2 ceph]# sh prepare_env.sh\ngroupadd：“ceph”组已存在\nuseradd：用户“ceph”已存在\n[root@ceph-2 ceph]# sh start_repo_mon.sh\ngot monmap epoch 1\nCreated symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-2.service to /usr/lib/systemd/system/ceph-mon@ceph-2.service.\n[root@ceph-2 ceph]# ps -ef | grep ceph\nceph       11852       1  0 20:47 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph\nroot       11908   11645  0 20:47 pts/0    00:00:00 grep --color=auto ceph\n```\n\n```shell\n[root@ceph-2 ceph]# ceph -s\n  id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 2 daemons, quorum ceph-1,ceph-2\n    mgr: no daemons active\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n\n\n- **ceph-3机器192.168.56.103**\n\n```shell\n[root@ceph-3 ceph]# sh prepare_env.sh\ngroupadd：“ceph”组已存在\nuseradd：用户“ceph”已存在\n[root@ceph-3 ceph]# sh start_repo_mon.sh\ngot monmap epoch 2\nCreated symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-3.service to /usr/lib/systemd/system/ceph-mon@ceph-3.service.\n[root@ceph-3 ceph]# ps -ef | grep ceph\nceph       11818       1  1 20:51 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-3 --setuser ceph --setgroup ceph\nroot       11874   11081  0 20:51 pts/0    00:00:00 grep --color=auto ceph\n```\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: no daemons active\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n至此可以看到ceph mon集群搭建完毕。\n\n\n\n## 手动搭建ceph-mgr\n\n首先在ceph-1机器上创建并启动ceph-mgr进程。\n\n### 创建 MGR 监控用户\n\n```shell\n[root@ceph-1 ceph]# ceph auth get-or-create mgr.`hostname` mon 'allow *' osd 'allow *' mds 'allow *'\n[mgr.ceph-1]\n\tkey = AQCvovZbpUHTDBAA+/RoCVv+GTBc7lb96rOXRg==\n```\n\n需要将之前创建的用户密码存放至对应位置\n\n```shell\n[root@ceph-1 ceph]# mkdir /var/lib/ceph/mgr/ceph-`hostname`\n[root@ceph-1 ceph]# ceph auth get mgr.`hostname` -o  /var/lib/ceph/mgr/ceph-`hostname`/keyring\nexported keyring for mgr.ceph-1\n```\n\n### 启动mgr\n\n```shell\n[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@`hostname`.service\n[root@ceph-1 ceph]# systemctl start ceph-mgr@`hostname`\n[root@ceph-1 ceph]# systemctl enable ceph-mgr@`hostname`\nCreated symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-1.service to /usr/lib/systemd/system/ceph-mgr@ceph-1.service.\n```\n\n### 验证是否成功\n\n```shell\n[root@ceph-1 ceph]# systemctl status ceph-mgr@`hostname`\n● ceph-mgr@ceph-1.service - Ceph cluster manager daemon\n   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-1.service; enabled; vendor preset: disabled)\n   Active: active (running) since 四 2018-11-22 07:38:49 EST; 14s ago\n Main PID: 2050 (ceph-mgr)\n   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-1.service\n           └─2050 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph\n\n11月 22 07:38:49 ceph-1 systemd[1]: Started Ceph cluster manager daemon.\n11月 22 07:38:49 ceph-1 systemd[1]: Starting Ceph cluster manager daemon...\n```\n\n或者：\n\n```shell\n[root@ceph-1 ceph]# ps -ef | grep ceph-mgr\nceph        2050       1  1 07:38 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph\nroot        2102    1249  0 07:39 pts/0    00:00:00 grep --color=auto ceph-mgr\n```\n\n说明mgr进程正常启动。\n\n监控状态\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n当 mgr 服务被激活之后, service 中 mgr 会显示 mgr-$name(active) \ndata 部分信息将变得可用\n\n### 脚本操作\n\n在ceph-2,ceph-3机器上，创建脚本`start_mgr.sh`，写入以下内容：\n\n```shell\n[root@ceph-2 ceph]# vim start_mgr.sh\nhost_name=`hostname`\nsudo ceph auth get-or-create mgr.$host_name mon 'allow *' osd 'allow *' mds 'allow *'\nsudo rm -rf /var/lib/ceph/mgr/ceph-$host_name\nsudo mkdir /var/lib/ceph/mgr/ceph-$host_name\nsudo ceph auth get mgr.$host_name -o  /var/lib/ceph/mgr/ceph-$host_name/keyring\nsudo cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@$host_name.service\nsudo systemctl start ceph-mgr@$host_name\nsudo systemctl enable ceph-mgr@$host_name\n```\n\n执行脚本：\n\n```shell\n[root@ceph-2 ceph]# sh start_mgr.sh\n[mgr.ceph-2]\n\tkey = AQCTpfZbNLmpFxAACe1gMNUM4vqKMfNdUGbY/A==\nexported keyring for mgr.ceph-2\nCreated symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-2.service to /usr/lib/systemd/system/ceph-mgr@ceph-2.service.\n```\n\n查看进程状态：\n\n```shell\n[root@ceph-2 ceph]# ps -ef | grep ceph-mgr\nceph       12101       1  0 07:48 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph\nroot       12173   11645  0 07:50 pts/0    00:00:00 grep --color=auto ceph-mgr\n[root@ceph-2 ceph]# systemctl status ceph-mgr*\n● ceph-mgr@ceph-2.service - Ceph cluster manager daemon\n   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-2.service; enabled; vendor preset: disabled)\n   Active: active (running) since 四 2018-11-22 07:48:19 EST; 2min 33s ago\n Main PID: 12101 (ceph-mgr)\n   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-2.service\n           └─12101 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph\n\n11月 22 07:48:19 ceph-2 systemd[1]: Started Ceph cluster manager daemon.\n11月 22 07:48:19 ceph-2 systemd[1]: Starting Ceph cluster manager daemon...\n```\n\n```shell\n[root@ceph-2 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n可以看到在ceph-2机器上，ceph-mgr进程正常启动。\n\n最后再ceph-3上进行同样的操作。\n\n所有mgr进程创建完成之后，集群的状态如下：\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n\n```\n\n- health是处于OK状态\n- 3个mon daemons\n- mgr进程：ceph-1是active状态，剩下的ceph-2,ceph-3处于standby\n\n\n\n## 手动搭建osd集群\n\n### 磁盘分区\n\n每个osd对应一块磁盘，是ceph集群存储数据的物理单位，在搭建osd集群之前，先要对三台机器的磁盘进行处理，这里每台机器都是相同的操作，这里只演示ceph-1上的操作：\n\n- 查看磁盘分布情况\n\n```shell\n[root@ceph-1 ceph]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda               8:0    0  100G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   99G  0 part\n  ├─centos-root 253:0    0   50G  0 lvm  /\n  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]\n  └─centos-home 253:2    0   47G  0 lvm  /home\nsdb               8:16   0    2T  0 disk\nsdc               8:32   0    2T  0 disk\nsdd               8:48   0    2T  0 disk\nsde               8:64   0  600G  0 disk\nsr0              11:0    1 1024M  0 rom\n```\n\n这里我们可以看到有三块2T的磁盘:`sdb,sdc,sdd`,用来部署osd;一块600G的磁盘用作每个osd的journal分区。\n\n- sde进行分区：\n\n```shell\n[root@ceph-1 ceph]# fdisk /dev/sde\n欢迎使用 fdisk (util-linux 2.23.2)。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\nDevice does not contain a recognized partition table\n使用磁盘标识符 0x986f9840 创建新的 DOS 磁盘标签。\n\n命令(输入 m 获取帮助)：g\nBuilding a new GPT disklabel (GUID: E7350C3E-586A-424E-ABAB-73860654C2C8)\n\n\n命令(输入 m 获取帮助)：n\n分区号 (1-128，默认 1)：\n第一个扇区 (2048-1258279965，默认 2048)：\nLast sector, +sectors or +size{K,M,G,T,P} (2048-1258279965，默认 1258279965)：+200G\n已创建分区 1\n\n\n命令(输入 m 获取帮助)：n\n分区号 (2-128，默认 2)：\n第一个扇区 (419432448-1258279965，默认 419432448)：\nLast sector, +sectors or +size{K,M,G,T,P} (419432448-1258279965，默认 1258279965)：+200G\n已创建分区 2\n\n\n命令(输入 m 获取帮助)：n\n分区号 (3-128，默认 3)：\n第一个扇区 (838862848-1258279965，默认 838862848)：\nLast sector, +sectors or +size{K,M,G,T,P} (838862848-1258279965，默认 1258279965)：\n已创建分区 3\n\n\n命令(输入 m 获取帮助)：w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n正在同步磁盘。\n```\n\nsde磁盘分区好之后，如下图所示：\n\n{% asset_img disk_part.jpg %}\n\n- 创建xfs文件系统\n\n分别对磁盘`sdb,sdc,sdd,sde1,sde2,sde3`进行如下操作：\n\n```shell\n[root@ceph-1 ceph]# mkfs.xfs /dev/sdb # 之后将sdb替换为sdc,sdd,sde1,sde2,sde3\nmeta-data=/dev/sdb               isize=512    agcount=4, agsize=134211328 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=0, sparse=0\ndata     =                       bsize=4096   blocks=536845310, imaxpct=5\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\nlog      =internal log           bsize=4096   blocks=262131, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\n```\n\n对这几个磁盘操作完之后，查看每个磁盘的uuid\n\n```shell\n[root@ceph-1 ceph]# blkid\n/dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"\n/dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"\n/dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"\n/dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"\n/dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"\n/dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"\n/dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"\n/dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"\n/dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"\n/dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"\n/dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"\n```\n\n可以看到这些磁盘都有独立的UUID，且TYPE都为“xfs”。说明创建成功。\n\n### 启动osd进程\n\n1. **创建osd id**\n\n   添加一个新osd，`id`可以省略，ceph会自动使用最小可用整数，第一个osd从0开始\n\n   ```shell\n   [root@ceph-1 ceph]# ceph osd create\n   0\n   ```\n\n2. **初始化osd目录**\n\n   创建osd.0目录，目录名格式`{cluster-name}-{id}`\n\n   ```shell\n   #mkdir /var/lib/ceph/osd/{cluster-name}-{id}\n   [root@ceph-1 ceph]# mkdir /var/lib/ceph/osd/ceph-0\n   ```\n\n   挂载osd.0的数据盘/dev/sdb\n\n   ```shell\n   [root@ceph-1 ceph]# mount /dev/sdb /var/lib/ceph/osd/ceph-0\n   ```\n\n   查看挂载结果：\n\n   ```shell\n   [root@ceph-1 ceph]# lsblk\n   NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\n   sda               8:0    0  100G  0 disk\n   ├─sda1            8:1    0    1G  0 part /boot\n   └─sda2            8:2    0   99G  0 part\n     ├─centos-root 253:0    0   50G  0 lvm  /\n     ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]\n     └─centos-home 253:2    0   47G  0 lvm  /home\n   sdb               8:16   0    2T  0 disk /var/lib/ceph/osd/ceph-0\n   sdc               8:32   0    2T  0 disk\n   sdd               8:48   0    2T  0 disk\n   sde               8:64   0  600G  0 disk\n   ├─sde1            8:65   0  200G  0 part\n   ├─sde2            8:66   0  200G  0 part\n   └─sde3            8:67   0  200G  0 part\n   sr0              11:0    1 1024M  0 rom\n   ```\n\n   初始化osd数据目录\n\n   ```shell\n   # sudo ceph-osd -i {id} --mkfs --mkkey\n   [root@ceph-1 ceph]# ceph-osd -i 0 --mkfs --mkkey\n   2018-11-22 08:26:54.255294 7fb2734e6d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-0/keyring: can't open /var/lib/ceph/osd/ceph-0/keyring: (2) No such file or directory\n   2018-11-22 08:26:54.257686 7fb2734e6d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-0/keyring\n   2018-11-22 08:26:54.306488 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n   2018-11-22 08:26:54.341905 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n   2018-11-22 08:26:54.342312 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic\n   2018-11-22 08:26:54.342327 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic\n   2018-11-22 08:26:54.342704 7fb2734e6d80 -1 read_settings error reading settings: (2) No such file or directory\n   2018-11-22 08:26:54.395459 7fb2734e6d80 -1 created object store /var/lib/ceph/osd/ceph-0 for osd.0 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93\n   ```\n\n3. **创建journal**\n\n   生成journal分区，一般选ssd盘作为journal分区，这里使用/dev/sde1分区作为osd.0的journal。\n\n   ```shell\n   #查看分区对应的partuuid， 找出/dev/sde1对应的partuuid\n   [root@ceph-1 ceph]# rm -f /var/lib/ceph/osd/ceph-0/journal\n   [root@ceph-1 ceph]# blkid\n   /dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"\n   /dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"\n   /dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"\n   /dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"\n   /dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"\n   /dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"\n   /dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"\n   /dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"\n   /dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"\n   /dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"\n   /dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"\n   [root@ceph-1 ceph]# ln -s /dev/disk/by-partuuid/ca1a9c40-e020-4bf8-a17b-5716b3e1d453  /var/lib/ceph/osd/ceph-0/journal\n   [root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/osd/ceph-0\n   [root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal\n   [root@ceph-1 ceph]# ceph-osd --mkjournal -i 0\n   2018-11-22 08:31:06.832760 7f97505afd80 -1 journal read_header error decoding journal header\n   [root@ceph-1 ceph]# ceph-osd --mkjournal -i 0\n   [root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal\n   ```\n\n4. **注册osd.{id}，id为osd编号，默认从0开始**\n\n   ```shell\n   # sudo ceph auth add osd.{id} osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-{id}/keyring\n   [root@ceph-1 ceph]# ceph auth add osd.0 osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-0/keyring\n   added key for osd.0\n   ```\n\n5. **加入crush map**\n\n   这是ceph-1上新创建的第一个osd，CRUSH map中还没有ceph-1节点，因此首先要把ceph-1节点加入CRUSH map，同理，ceph-2/ceph-3节点也需要加入CRUSH map\n\n   ```shell\n   [root@ceph-1 ceph]# ceph osd crush add-bucket `hostname` host\n   added bucket ceph-1 type host to crush map\n   ```\n\n   然后把三个节点移动到默认的root `default`下面\n\n   ```shell\n   [root@ceph-1 ceph]# ceph osd crush move `hostname` root=default\n   moved item id -2 name 'ceph-1' to location {root=default} in crush map\n   ```\n\n   添加osd.0到CRUSH map中的ceph-1节点下面，加入后，osd.0就能够接收数据\n\n   ```shell\n   #ceph osd crush add osd.{id} 0.4 root=sata rack=sata-rack01 host=sata-node5\n   #0.4为此osd在CRUSH map中的权重值，它表示数据落在此osd上的比重，是一个相对值，一般按照1T磁盘比重值为1来计算，这里的osd数据盘1.7，所以值为1.7  \n   [root@ceph-1 ceph]# ceph osd crush add osd.0 2.0 root=default host=`hostname`\n   add item id 0 name 'osd.0' weight 2 at location {host=ceph-1,root=default} to crush map\n   ```\n\n   此时osd.0状态是`down`且`in`，`in`表示此osd位于CRUSH map，已经准备好接受数据，`down`表示osd进程运行异常，因为我们还没有启动osd.0进程\n\n6. **启动ceph-osd进程**\n\n   需要向systemctl传递osd的`id`以启动指定的osd进程，如下，我们准备启动osd.0进程\n\n   ```shell\n   [root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@0.service\n   [root@ceph-1 ceph]# systemctl start ceph-osd@0\n   [root@ceph-1 ceph]# systemctl enable ceph-osd@0\n   Created symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@0.service to /usr/lib/systemd/system/ceph-osd@0.service.\n   ```\n\n   上面就是添加osd.0的步骤，然后可以接着在其他`hostname`节点上添加osd.{1,2}，添加了这3个osd后，可以查看集群状态 ceph -s。\n\n7. **验证osd进程是否成功启动**\n\n   ```shell\n   [root@ceph-1 ceph]# ps -ef | grep ceph-osd\n   ceph        2593       1  0 08:55 ?        00:00:00 /usr/bin/ceph-osd -f --cluster ceph --id 0 --setuser ceph --setgroup ceph\n   root        2697    1249  0 08:55 pts/0    00:00:00 grep --color=auto ceph-osd\n   ```\n\n   说明osd.0已经启动成功\n\n查看集群状态\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 1 osds: 1 up, 1 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   107MiB used, 2.00TiB / 2.00TiB avail\n    pgs:\n```\n\nosd已经有一个处于up跟in状态了。\n\n按照上面的步骤重复操作，添加剩下的osd。\n\n也可以执行如下脚本进行启动osd\n\n```shell\n[root@ceph-1 ceph]# vim start_osd.sh\n#执行脚本时需要输入三个参数,顺序依次为：osd.num, osd数据存储分区，osd journal存储分区\n#例如：sudo sh start_osd.sh 0 /dev/sdc2 /dev/sdc1\n\n#获取参数\nhost_name=`hostname`\nid=$1\ndata_disk=$2\njournal_disk=$3\n\n#创建osd data\nceph osd create $id\nsudo rm -rf /var/lib/ceph/osd/ceph-$id\nsudo mkdir /var/lib/ceph/osd/ceph-$id\n#sudo mkfs.xfs $data_disk -f\nsudo mount $data_disk /var/lib/ceph/osd/ceph-$id\nsudo ceph-osd -i $id --mkfs --mkkey\n#创建 journal\n#sudo mkfs.xfs $journal_disk -f\nuuid=`sudo blkid | grep $journal_disk | awk -F\\\" '{print $6}'`\nsudo rm -f /var/lib/ceph/osd/ceph-$id/journal \nsudo ln -s /dev/disk/by-partuuid/$uuid /var/lib/ceph/osd/ceph-$id/journal\nsudo chown ceph:ceph -R /var/lib/ceph/osd/ceph-$id\nsudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal\n#初始化新的journal\nsudo ceph-osd --mkjournal -i $id\nsudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal\n\n# 添加osd到crushmap\nsudo ceph auth add osd.$id osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-$id/keyring\nsudo ceph osd crush add-bucket $host_name host\nsudo ceph osd crush move $host_name root=default\nsudo ceph osd crush add osd.$id 1.7 root=default host=$host_name\n\n# 启动osd\nsudo cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@$id.service\nsudo systemctl start ceph-osd@$id\nsudo systemctl enable ceph-osd@$id\n```\n\n执行实例：\n\n```shell\n# 第一个参数：osd的id, 第二个参数： osd数据分区  第三个参数： osd的journal\n[root@ceph-1 ceph]# sh start_osd.sh 1 /dev/sdc /dev/sde2\n1\n2018-11-22 09:31:18.144721 7fc56f8b5d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-1/keyring: can't open /var/lib/ceph/osd/ceph-1/keyring: (2) No such file or directory\n2018-11-22 09:31:18.147361 7fc56f8b5d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-1/keyring\n2018-11-22 09:31:18.184083 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n2018-11-22 09:31:18.208952 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n2018-11-22 09:31:18.209302 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic\n2018-11-22 09:31:18.209321 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic\n2018-11-22 09:31:18.209700 7fc56f8b5d80 -1 read_settings error reading settings: (2) No such file or directory\n2018-11-22 09:31:18.246674 7fc56f8b5d80 -1 created object store /var/lib/ceph/osd/ceph-1 for osd.1 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93\n2018-11-22 09:31:18.480406 7fce4eeb4d80 -1 journal read_header error decoding journal header\nadded key for osd.1\nbucket 'ceph-1' already exists\nno need to move item id -2 name 'ceph-1' to location {root=default} in crush map\nadd item id 1 name 'osd.1' weight 2 at location {host=ceph-1,root=default} to crush map\nCreated symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@1.service to /usr/lib/systemd/system/ceph-osd@1.service.\n```\n\n按照上面的方法添加所有的osd之后，可以得到如下的集群：\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   858MiB used, 16.0TiB / 16.0TiB avail\n    pgs:\n\n```\n\n\n\n## 手动搭建MDS (仅cephfs使用)\n\n- 创建目录：\n\n```shell\n[root@ceph-1 ceph]# mkdir /var/lib/ceph/mds/ceph-`hostname`\n[root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/mds/ceph-`hostname`\n```\n\n- 在ceph.conf中添加如下信息：\n\n```shell\n[mds.ceph-1]\nhost = ceph-1\n[mds.ceph-2]\nhost = ceph-2\n[mds.ceph-3]\nhost = ceph-3\n```\n\n- 重启ceph-mon\n\n  ```shell\n  [root@ceph-1 ceph]# systemctl restart ceph-mon@`hostname`\n  ```\n\n- 启动mds\n\n```shell\n[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mds@.service /usr/lib/systemd/system/ceph-mds@`hostname`.service\n[root@ceph-1 ceph]# systemctl start ceph-mds@`hostname`\n[root@ceph-1 ceph]# systemctl enable ceph-mds@`hostname`\nCreated symlink from /etc/systemd/system/ceph-mds.target.wants/ceph-mds@ceph-1.service to /usr/lib/systemd/system/ceph-mds@ceph-1.service.\n```\n\n- 查看mds状态\n\n```shell\n[root@ceph-1 ceph]# ceph mds stat\n, 1 up:standby\n```\n\n在ceph-2,ceph-3上执行以上相同操作即可。\n\n最终mds的状态为：\n\n```shell\n[root@ceph-3 ceph]# ceph mds stat\n, 3 up:standby\n```\n\n# Ceph集群搭建完成\n\n最终的ceph集群状态如下：\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   965MiB used, 18.0TiB / 18.0TiB avail\n    pgs:\n\n```\n\n至此ceph集群搭建完成。\n\n","source":"_posts/manual-deploy-ceph.md","raw":"---\ntitle: 第三篇：手动部署Ceph集群\ncomments: true\nauthor: zuoyang\ntype: 原创\ntoc: true\ncategories:\n  - ceph\ntags:\n  - ceph\n  - ceph-mon\n  - ceph-osd\n  - ceph-mgr\nabbrlink: 28a4bfb3\ndate: 2018-11-21 20:33:05\n---\n\n上篇介绍了部署Ceph的环境准备工作，本篇主要内容是介绍手动部署Ceph的全过程。\n\n# 环境\n\n## 集群环境\n\n[上一篇](https://www.zuoyangblog.com/post/ad293d8.html)，我们创建了3台虚拟机，虚拟机配置如下：\n\n```shell\n[root@ceph-1 ~]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda               8:0    0  100G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   99G  0 part\n  ├─centos-root 253:0    0   50G  0 lvm  /\n  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]\n  └─centos-home 253:2    0   47G  0 lvm  /home\nsdb               8:16   0    2T  0 disk\nsdc               8:32   0    2T  0 disk\nsdd               8:48   0    2T  0 disk\nsde               8:64   0  600G  0 disk\nsr0              11:0    1 1024M  0 rom\n```\n\n- 3块大小为2T的磁盘，sdb,sdc,sdd，用于启动osd进程\n- 一块大小为600G的磁盘，作为osd的journal分区\n\n**集群配置如下：**\n\n| 主机   | IP             | 功能                   |\n| ------ | -------------- | ---------------------- |\n| ceph-1 | 192.168.56.101 | mon1、osd0、osd1、osd2 |\n| ceph-2 | 192.168.56.102 | mon2、osd3、osd4、osd5 |\n| ceph-3 | 192.168.56.103 | mon3、osd6、osd7、osd8 |\n\n\n\n## 配置NTP服务\n\n将NTP server放在ceph-1节点上，ceph-2/3节点是NTP client，这样可以从根本上解决时间同步问题。\n\n### 修改配置文件\n\n从本机登录到ceph-1：\n\n```shell\nssh root@192.168.56.101\n```\n\n在ceph-1节点上进行如下操作：\n\n修改`/etc/ntp.conf`,注释掉默认的四个server，添加三行配置如下：\n\n```shell\nvim  /etc/ntp.conf\n###comment following lines:\n#server 0.centos.pool.ntp.org iburst\n#server 1.centos.pool.ntp.org iburst\n#server 2.centos.pool.ntp.org iburst\n#server 3.centos.pool.ntp.org iburst\n###add following lines:\nserver 127.127.1.0 minpoll 4\nfudge 127.127.1.0 stratum 0\nrestrict 192.168.56.0 mask 255.255.0.0 nomodify notrap\n```\n\n修改`/etc/ntp/step-tickers`文件如下：\n\n```shell\n# List of NTP servers used by the ntpdate service.\n# 0.centos.pool.ntp.org\n127.127.1.0\n```\n\n在重启ntp服务之前需要将防火墙关闭，否则客户端不能访问ntp服务：\n\n### 关闭防火墙\n\n关闭`selinux`&`firewalld`\n\n```shell\nsed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsetenforce 0\nsystemctl stop firewalld \nsystemctl disable firewalld\n```\n\n### 启动ntp服务\n\n重启ntp服务，并查看server端是否运行正常，正常的标准就是`ntpq -p`指令的最下面一行是`*`:\n\n```shell\n[root@ceph-1 ~]# systemctl enable ntpd\nCreated symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.\n[root@ceph-1 ~]# systemctl restart ntpd \n[root@ceph-1 ~]# ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n*LOCAL(0)        .LOCL.           0 l   15   16    1    0.000    0.000   0.000\n```\n\nNTP server端已经配置完毕，下面开始配置client端。\n\n### 配置客户端ntp同步\n\n同样的方式登录到**ceph-2/ceph-3**机器上：\n\n修改`/etc/ntp.conf`，注释掉四行server，添加一行server指向ceph-1:\n\n```shell\nvim /etc/ntp.conf\n\n#server 0.centos.pool.ntp.org iburst\n#server 1.centos.pool.ntp.org iburst\n#server 2.centos.pool.ntp.org iburst\n#server 3.centos.pool.ntp.org iburst\n\nserver 192.168.56.101\n```\n\n重启ntp服务并观察client是否正确连接到server端，同样正确连接的标准是`ntpq -p`的最下面一行以`*`号开头:\n\n```shell\n[root@ceph-2 ~]# systemctl stop firewalld\n[root@ceph-2 ~]# systemctl disable firewalld \n[root@ceph-2 ~]# systemctl restart ntpd\n[root@ceph-2 ~]# systemctl enable ntpd\nCreated symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.\n```\n\n开始的时候会显示INIT状态，然后等了几分钟之后就出现了`*`。\n\n异常状态：\n\n```shell\n[root@ceph-2 ~]# ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n ceph-1          .INIT.          16 u    -   64    0    0.000    0.000   0.000\n```\n\n正常状态：\n\n```shell\n[root@ceph-2 ~]# ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n*ceph-1          LOCAL(0)         3 u   45   64   77    0.323    0.060   0.034\n```\n\n**在搭建ceph集群之前，一定要保证ntp服务能够正常运行。**\n\n\n\n# 手动搭建ceph集群\n\n## 手动部署mon集群\n\n### 主mon节点部署 （192.168.56.101，ceph-1）\n\n登录到ceph-1机器：\n\n```shell\nssh root@192.168.56.101\n```\n\n- **创建ceph用户与目录**\n\n新建一个脚本文件`prepare_env.sh`,然后写入以下内容：\n\n```shell\n[root@ceph-1 ~]# vim prepare_env.sh\n/usr/sbin/groupadd ceph -g 167 -o -r\n/usr/sbin/useradd ceph -u 167 -o -r -g ceph -s /sbin/nologin -c \"Ceph daemons\"\nmkdir -p /etc/ceph/\nchown -R ceph:ceph /etc/ceph/\nmkdir -p /var/run/ceph\nchown -R ceph:ceph /var/run/ceph\nmkdir -p /var/log/ceph\nchown -R ceph:ceph /var/log/ceph\nmkdir -p /var/lib/ceph/mon\nchown -R ceph:ceph /var/lib/ceph\n```\n\n- **创建ceph.conf文件**\n\n新建一个conf文件`ceph.conf`,然后写入以下内容：\n\n```shell\n[root@ceph-1 ~]# vim /etc/ceph/ceph.conf\n[global]\nfsid = c165f9d0-88df-48a7-8cc5-11da82f99c93\nmon initial members = ceph-1\nmon host = 192.168.56.101,192.168.56.102,192.168.56.103\nrbd default features = 1\nauth_cluster_required = none\nauth_service_required = none\nauth_client_required = none\npublic network = 192.168.56.0/24\ncluster network = 192.168.56.0/24\nosd journal size = 1024\nosd pool default size = 3\nosd pool default min size = 1\nosd pool default pg num = 300\nosd pool default pgp num = 300\nosd crush chooseleaf type = 1\n\n[mon]\nmon allow pool delete = true\n```\n\n这里不对各个参数的含义进行解释，对于初学者而言，先把集群搭建起来，后面再去花时间了解整个ceph的原理及配置文件各个参数对集群的影响。\n\n其中 `fsid` 是为集群分配的一个 uuid, 可使用`uuidgen`命令生成。初始化 mon 节点其实只需要这一个配置就够了。\n`mon host` 配置 ceph 命令行工具访问操作 ceph 集群时查找 mon 节点入口。\nceph 集群可包含多个 mon 节点实现高可用容灾, 避免单点故障。\n`rbd default features = 1` 配置 rbd 客户端创建磁盘时禁用一些需要高版本内核才能支持的特性。\n\n- **拷贝这两个文件到ceph-2,ceph-3机器上**\n\n```shell\nscp prepare_env.sh  192.168.56.102:/home\nscp prepare_env.sh  192.168.56.103:/home\nscp /etc/ceph/ceph.conf  192.168.56.102:/etc/ceph/\nscp /etc/ceph/ceph.conf  192.168.56.103:/etc/ceph/\n```\n\n- **启动mon节点**\n\n首先执行脚本,创建ceph用户及相关目录。\n\n```shell\nsh prepare_env.sh\n```\n\n1、为此集群创建密钥环、并生成Monitor密钥 \n\n```shell\n[root@ceph-1 ~]# ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'\ncreating /tmp/ceph.mon.keyring\n```\n\n2、生成管理员密钥环，生成 `client.admin` 用户并加入密钥环\n\n```shell\n[root@ceph-1 ~]# ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --set-uid=0 --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'\ncreating /etc/ceph/ceph.client.admin.keyring\n```\n\n3、把 `client.admin` 密钥加入 `ceph.mon.keyring`  (3台机器一样)\n\n```shell\n[root@ceph-1 ~]# ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring\nimporting contents of /etc/ceph/ceph.client.admin.keyring into /tmp/ceph.mon.keyring\n```\n\n4、用规划好的主机名、对应 IP 地址、和 FSID 生成一个Monitor Map，并保存为 `/tmp/monmap`\n\n这里的`--fsid`需要跟ceph.conf里面的`fsid`保持一致\n\n```shell\n[root@ceph-1 ~]# monmaptool --create --add `hostname` `hostname -i`  --fsid c165f9d0-88df-48a7-8cc5-11da82f99c93 /tmp/monmap --clobber\nmonmaptool: monmap file /tmp/monmap\nmonmaptool: set fsid to c165f9d0-88df-48a7-8cc5-11da82f99c93\nmonmaptool: writing epoch 0 to /tmp/monmap (1 monitors)\n```\n\n5、在Monitor主机上分别创建数据目录\n\n```shell\n[root@ceph-1 ~]# rm -rf /var/lib/ceph/mon/ceph-`hostname`/\n[root@ceph-1 ~]# mkdir /var/lib/ceph/mon/ceph-`hostname`/\n[root@ceph-1 ~]# chown ceph:ceph -R /var/lib/ceph/mon/ceph-`hostname`/\n[root@ceph-1 ~]# chown -R ceph:ceph /var/lib/ceph/\n[root@ceph-1 ~]# chown  ceph:ceph /tmp/monmap\n[root@ceph-1 ~]# chown  ceph:ceph /tmp/ceph.mon.keyring\n```\n\n6、用Monitor Map和密钥环组装守护进程所需的初始数据\n\n```shell\n[root@ceph-1 ~]# sudo -u ceph ceph-mon --mkfs -i `hostname` --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring\n```\n\n7、建一个空文件 `done` ，表示监视器已创建、可以启动了\n\n```shell\n[root@ceph-1 ~]# touch /var/lib/ceph/mon/ceph-`hostname`/done\n```\n\n8、启动Monitor\n\n```shell\n[root@ceph-1 ~]# cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@`hostname`.service\n[root@ceph-1 ~]# sudo systemctl start ceph-mon@`hostname`\n[root@ceph-1 ~]# sudo systemctl enable ceph-mon@`hostname`\nCreated symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-1.service to /usr/lib/systemd/system/ceph-mon@ceph-1.service.\n```\n\n9、确认下集群在运行\n\n```shell\n [root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 1 daemons, quorum ceph-1\n    mgr: no daemons active\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n### 从mon节点部署 (192.168.56.102 & 192.168.56.103)\n\n在另外两台机器ceph-2,ceph-3上，分别ssh登录上去。\n\n#### 创建启动脚本\n\n新建启动脚本文件`start_repo_mon.sh`\n\n```\nvim start_repo_mon.sh\n```\n\n```shell\nhost_name=`hostname`\nsudo ceph mon getmap -o /tmp/monmap\nsudo rm -rf /var/lib/ceph/mon/ceph-$host_name\nsudo ceph-mon -i $host_name --mkfs --monmap /tmp/monmap\nsudo chown -R ceph:ceph /var/lib/ceph/mon/ceph-$host_name/\n#nohup ceph-mon -f --cluster ceph --id $host_name --setuser ceph --setgroup ceph &\n#ceph-mon -f --cluster ceph --id $host_name &\nsudo cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@$host_name.service\nsudo systemctl start ceph-mon@$host_name\nsudo systemctl enable ceph-mon@$host_name\n```\n\n#### 启动mon进程\n\n- **ceph-2机器192.168.56.102**\n\n```shell\n[root@ceph-2 ceph]# sh prepare_env.sh\ngroupadd：“ceph”组已存在\nuseradd：用户“ceph”已存在\n[root@ceph-2 ceph]# sh start_repo_mon.sh\ngot monmap epoch 1\nCreated symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-2.service to /usr/lib/systemd/system/ceph-mon@ceph-2.service.\n[root@ceph-2 ceph]# ps -ef | grep ceph\nceph       11852       1  0 20:47 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph\nroot       11908   11645  0 20:47 pts/0    00:00:00 grep --color=auto ceph\n```\n\n```shell\n[root@ceph-2 ceph]# ceph -s\n  id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 2 daemons, quorum ceph-1,ceph-2\n    mgr: no daemons active\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n\n\n- **ceph-3机器192.168.56.103**\n\n```shell\n[root@ceph-3 ceph]# sh prepare_env.sh\ngroupadd：“ceph”组已存在\nuseradd：用户“ceph”已存在\n[root@ceph-3 ceph]# sh start_repo_mon.sh\ngot monmap epoch 2\nCreated symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-3.service to /usr/lib/systemd/system/ceph-mon@ceph-3.service.\n[root@ceph-3 ceph]# ps -ef | grep ceph\nceph       11818       1  1 20:51 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-3 --setuser ceph --setgroup ceph\nroot       11874   11081  0 20:51 pts/0    00:00:00 grep --color=auto ceph\n```\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: no daemons active\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n至此可以看到ceph mon集群搭建完毕。\n\n\n\n## 手动搭建ceph-mgr\n\n首先在ceph-1机器上创建并启动ceph-mgr进程。\n\n### 创建 MGR 监控用户\n\n```shell\n[root@ceph-1 ceph]# ceph auth get-or-create mgr.`hostname` mon 'allow *' osd 'allow *' mds 'allow *'\n[mgr.ceph-1]\n\tkey = AQCvovZbpUHTDBAA+/RoCVv+GTBc7lb96rOXRg==\n```\n\n需要将之前创建的用户密码存放至对应位置\n\n```shell\n[root@ceph-1 ceph]# mkdir /var/lib/ceph/mgr/ceph-`hostname`\n[root@ceph-1 ceph]# ceph auth get mgr.`hostname` -o  /var/lib/ceph/mgr/ceph-`hostname`/keyring\nexported keyring for mgr.ceph-1\n```\n\n### 启动mgr\n\n```shell\n[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@`hostname`.service\n[root@ceph-1 ceph]# systemctl start ceph-mgr@`hostname`\n[root@ceph-1 ceph]# systemctl enable ceph-mgr@`hostname`\nCreated symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-1.service to /usr/lib/systemd/system/ceph-mgr@ceph-1.service.\n```\n\n### 验证是否成功\n\n```shell\n[root@ceph-1 ceph]# systemctl status ceph-mgr@`hostname`\n● ceph-mgr@ceph-1.service - Ceph cluster manager daemon\n   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-1.service; enabled; vendor preset: disabled)\n   Active: active (running) since 四 2018-11-22 07:38:49 EST; 14s ago\n Main PID: 2050 (ceph-mgr)\n   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-1.service\n           └─2050 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph\n\n11月 22 07:38:49 ceph-1 systemd[1]: Started Ceph cluster manager daemon.\n11月 22 07:38:49 ceph-1 systemd[1]: Starting Ceph cluster manager daemon...\n```\n\n或者：\n\n```shell\n[root@ceph-1 ceph]# ps -ef | grep ceph-mgr\nceph        2050       1  1 07:38 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph\nroot        2102    1249  0 07:39 pts/0    00:00:00 grep --color=auto ceph-mgr\n```\n\n说明mgr进程正常启动。\n\n监控状态\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n当 mgr 服务被激活之后, service 中 mgr 会显示 mgr-$name(active) \ndata 部分信息将变得可用\n\n### 脚本操作\n\n在ceph-2,ceph-3机器上，创建脚本`start_mgr.sh`，写入以下内容：\n\n```shell\n[root@ceph-2 ceph]# vim start_mgr.sh\nhost_name=`hostname`\nsudo ceph auth get-or-create mgr.$host_name mon 'allow *' osd 'allow *' mds 'allow *'\nsudo rm -rf /var/lib/ceph/mgr/ceph-$host_name\nsudo mkdir /var/lib/ceph/mgr/ceph-$host_name\nsudo ceph auth get mgr.$host_name -o  /var/lib/ceph/mgr/ceph-$host_name/keyring\nsudo cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@$host_name.service\nsudo systemctl start ceph-mgr@$host_name\nsudo systemctl enable ceph-mgr@$host_name\n```\n\n执行脚本：\n\n```shell\n[root@ceph-2 ceph]# sh start_mgr.sh\n[mgr.ceph-2]\n\tkey = AQCTpfZbNLmpFxAACe1gMNUM4vqKMfNdUGbY/A==\nexported keyring for mgr.ceph-2\nCreated symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-2.service to /usr/lib/systemd/system/ceph-mgr@ceph-2.service.\n```\n\n查看进程状态：\n\n```shell\n[root@ceph-2 ceph]# ps -ef | grep ceph-mgr\nceph       12101       1  0 07:48 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph\nroot       12173   11645  0 07:50 pts/0    00:00:00 grep --color=auto ceph-mgr\n[root@ceph-2 ceph]# systemctl status ceph-mgr*\n● ceph-mgr@ceph-2.service - Ceph cluster manager daemon\n   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-2.service; enabled; vendor preset: disabled)\n   Active: active (running) since 四 2018-11-22 07:48:19 EST; 2min 33s ago\n Main PID: 12101 (ceph-mgr)\n   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-2.service\n           └─12101 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph\n\n11月 22 07:48:19 ceph-2 systemd[1]: Started Ceph cluster manager daemon.\n11月 22 07:48:19 ceph-2 systemd[1]: Starting Ceph cluster manager daemon...\n```\n\n```shell\n[root@ceph-2 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n```\n\n可以看到在ceph-2机器上，ceph-mgr进程正常启动。\n\n最后再ceph-3上进行同样的操作。\n\n所有mgr进程创建完成之后，集群的状态如下：\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 0 osds: 0 up, 0 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   0B used, 0B / 0B avail\n    pgs:\n\n```\n\n- health是处于OK状态\n- 3个mon daemons\n- mgr进程：ceph-1是active状态，剩下的ceph-2,ceph-3处于standby\n\n\n\n## 手动搭建osd集群\n\n### 磁盘分区\n\n每个osd对应一块磁盘，是ceph集群存储数据的物理单位，在搭建osd集群之前，先要对三台机器的磁盘进行处理，这里每台机器都是相同的操作，这里只演示ceph-1上的操作：\n\n- 查看磁盘分布情况\n\n```shell\n[root@ceph-1 ceph]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda               8:0    0  100G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   99G  0 part\n  ├─centos-root 253:0    0   50G  0 lvm  /\n  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]\n  └─centos-home 253:2    0   47G  0 lvm  /home\nsdb               8:16   0    2T  0 disk\nsdc               8:32   0    2T  0 disk\nsdd               8:48   0    2T  0 disk\nsde               8:64   0  600G  0 disk\nsr0              11:0    1 1024M  0 rom\n```\n\n这里我们可以看到有三块2T的磁盘:`sdb,sdc,sdd`,用来部署osd;一块600G的磁盘用作每个osd的journal分区。\n\n- sde进行分区：\n\n```shell\n[root@ceph-1 ceph]# fdisk /dev/sde\n欢迎使用 fdisk (util-linux 2.23.2)。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\nDevice does not contain a recognized partition table\n使用磁盘标识符 0x986f9840 创建新的 DOS 磁盘标签。\n\n命令(输入 m 获取帮助)：g\nBuilding a new GPT disklabel (GUID: E7350C3E-586A-424E-ABAB-73860654C2C8)\n\n\n命令(输入 m 获取帮助)：n\n分区号 (1-128，默认 1)：\n第一个扇区 (2048-1258279965，默认 2048)：\nLast sector, +sectors or +size{K,M,G,T,P} (2048-1258279965，默认 1258279965)：+200G\n已创建分区 1\n\n\n命令(输入 m 获取帮助)：n\n分区号 (2-128，默认 2)：\n第一个扇区 (419432448-1258279965，默认 419432448)：\nLast sector, +sectors or +size{K,M,G,T,P} (419432448-1258279965，默认 1258279965)：+200G\n已创建分区 2\n\n\n命令(输入 m 获取帮助)：n\n分区号 (3-128，默认 3)：\n第一个扇区 (838862848-1258279965，默认 838862848)：\nLast sector, +sectors or +size{K,M,G,T,P} (838862848-1258279965，默认 1258279965)：\n已创建分区 3\n\n\n命令(输入 m 获取帮助)：w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n正在同步磁盘。\n```\n\nsde磁盘分区好之后，如下图所示：\n\n{% asset_img disk_part.jpg %}\n\n- 创建xfs文件系统\n\n分别对磁盘`sdb,sdc,sdd,sde1,sde2,sde3`进行如下操作：\n\n```shell\n[root@ceph-1 ceph]# mkfs.xfs /dev/sdb # 之后将sdb替换为sdc,sdd,sde1,sde2,sde3\nmeta-data=/dev/sdb               isize=512    agcount=4, agsize=134211328 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=0, sparse=0\ndata     =                       bsize=4096   blocks=536845310, imaxpct=5\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\nlog      =internal log           bsize=4096   blocks=262131, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\n```\n\n对这几个磁盘操作完之后，查看每个磁盘的uuid\n\n```shell\n[root@ceph-1 ceph]# blkid\n/dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"\n/dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"\n/dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"\n/dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"\n/dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"\n/dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"\n/dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"\n/dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"\n/dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"\n/dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"\n/dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"\n```\n\n可以看到这些磁盘都有独立的UUID，且TYPE都为“xfs”。说明创建成功。\n\n### 启动osd进程\n\n1. **创建osd id**\n\n   添加一个新osd，`id`可以省略，ceph会自动使用最小可用整数，第一个osd从0开始\n\n   ```shell\n   [root@ceph-1 ceph]# ceph osd create\n   0\n   ```\n\n2. **初始化osd目录**\n\n   创建osd.0目录，目录名格式`{cluster-name}-{id}`\n\n   ```shell\n   #mkdir /var/lib/ceph/osd/{cluster-name}-{id}\n   [root@ceph-1 ceph]# mkdir /var/lib/ceph/osd/ceph-0\n   ```\n\n   挂载osd.0的数据盘/dev/sdb\n\n   ```shell\n   [root@ceph-1 ceph]# mount /dev/sdb /var/lib/ceph/osd/ceph-0\n   ```\n\n   查看挂载结果：\n\n   ```shell\n   [root@ceph-1 ceph]# lsblk\n   NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\n   sda               8:0    0  100G  0 disk\n   ├─sda1            8:1    0    1G  0 part /boot\n   └─sda2            8:2    0   99G  0 part\n     ├─centos-root 253:0    0   50G  0 lvm  /\n     ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]\n     └─centos-home 253:2    0   47G  0 lvm  /home\n   sdb               8:16   0    2T  0 disk /var/lib/ceph/osd/ceph-0\n   sdc               8:32   0    2T  0 disk\n   sdd               8:48   0    2T  0 disk\n   sde               8:64   0  600G  0 disk\n   ├─sde1            8:65   0  200G  0 part\n   ├─sde2            8:66   0  200G  0 part\n   └─sde3            8:67   0  200G  0 part\n   sr0              11:0    1 1024M  0 rom\n   ```\n\n   初始化osd数据目录\n\n   ```shell\n   # sudo ceph-osd -i {id} --mkfs --mkkey\n   [root@ceph-1 ceph]# ceph-osd -i 0 --mkfs --mkkey\n   2018-11-22 08:26:54.255294 7fb2734e6d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-0/keyring: can't open /var/lib/ceph/osd/ceph-0/keyring: (2) No such file or directory\n   2018-11-22 08:26:54.257686 7fb2734e6d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-0/keyring\n   2018-11-22 08:26:54.306488 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n   2018-11-22 08:26:54.341905 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n   2018-11-22 08:26:54.342312 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic\n   2018-11-22 08:26:54.342327 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic\n   2018-11-22 08:26:54.342704 7fb2734e6d80 -1 read_settings error reading settings: (2) No such file or directory\n   2018-11-22 08:26:54.395459 7fb2734e6d80 -1 created object store /var/lib/ceph/osd/ceph-0 for osd.0 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93\n   ```\n\n3. **创建journal**\n\n   生成journal分区，一般选ssd盘作为journal分区，这里使用/dev/sde1分区作为osd.0的journal。\n\n   ```shell\n   #查看分区对应的partuuid， 找出/dev/sde1对应的partuuid\n   [root@ceph-1 ceph]# rm -f /var/lib/ceph/osd/ceph-0/journal\n   [root@ceph-1 ceph]# blkid\n   /dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"\n   /dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"\n   /dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"\n   /dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"\n   /dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"\n   /dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"\n   /dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"\n   /dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"\n   /dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"\n   /dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"\n   /dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"\n   [root@ceph-1 ceph]# ln -s /dev/disk/by-partuuid/ca1a9c40-e020-4bf8-a17b-5716b3e1d453  /var/lib/ceph/osd/ceph-0/journal\n   [root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/osd/ceph-0\n   [root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal\n   [root@ceph-1 ceph]# ceph-osd --mkjournal -i 0\n   2018-11-22 08:31:06.832760 7f97505afd80 -1 journal read_header error decoding journal header\n   [root@ceph-1 ceph]# ceph-osd --mkjournal -i 0\n   [root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal\n   ```\n\n4. **注册osd.{id}，id为osd编号，默认从0开始**\n\n   ```shell\n   # sudo ceph auth add osd.{id} osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-{id}/keyring\n   [root@ceph-1 ceph]# ceph auth add osd.0 osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-0/keyring\n   added key for osd.0\n   ```\n\n5. **加入crush map**\n\n   这是ceph-1上新创建的第一个osd，CRUSH map中还没有ceph-1节点，因此首先要把ceph-1节点加入CRUSH map，同理，ceph-2/ceph-3节点也需要加入CRUSH map\n\n   ```shell\n   [root@ceph-1 ceph]# ceph osd crush add-bucket `hostname` host\n   added bucket ceph-1 type host to crush map\n   ```\n\n   然后把三个节点移动到默认的root `default`下面\n\n   ```shell\n   [root@ceph-1 ceph]# ceph osd crush move `hostname` root=default\n   moved item id -2 name 'ceph-1' to location {root=default} in crush map\n   ```\n\n   添加osd.0到CRUSH map中的ceph-1节点下面，加入后，osd.0就能够接收数据\n\n   ```shell\n   #ceph osd crush add osd.{id} 0.4 root=sata rack=sata-rack01 host=sata-node5\n   #0.4为此osd在CRUSH map中的权重值，它表示数据落在此osd上的比重，是一个相对值，一般按照1T磁盘比重值为1来计算，这里的osd数据盘1.7，所以值为1.7  \n   [root@ceph-1 ceph]# ceph osd crush add osd.0 2.0 root=default host=`hostname`\n   add item id 0 name 'osd.0' weight 2 at location {host=ceph-1,root=default} to crush map\n   ```\n\n   此时osd.0状态是`down`且`in`，`in`表示此osd位于CRUSH map，已经准备好接受数据，`down`表示osd进程运行异常，因为我们还没有启动osd.0进程\n\n6. **启动ceph-osd进程**\n\n   需要向systemctl传递osd的`id`以启动指定的osd进程，如下，我们准备启动osd.0进程\n\n   ```shell\n   [root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@0.service\n   [root@ceph-1 ceph]# systemctl start ceph-osd@0\n   [root@ceph-1 ceph]# systemctl enable ceph-osd@0\n   Created symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@0.service to /usr/lib/systemd/system/ceph-osd@0.service.\n   ```\n\n   上面就是添加osd.0的步骤，然后可以接着在其他`hostname`节点上添加osd.{1,2}，添加了这3个osd后，可以查看集群状态 ceph -s。\n\n7. **验证osd进程是否成功启动**\n\n   ```shell\n   [root@ceph-1 ceph]# ps -ef | grep ceph-osd\n   ceph        2593       1  0 08:55 ?        00:00:00 /usr/bin/ceph-osd -f --cluster ceph --id 0 --setuser ceph --setgroup ceph\n   root        2697    1249  0 08:55 pts/0    00:00:00 grep --color=auto ceph-osd\n   ```\n\n   说明osd.0已经启动成功\n\n查看集群状态\n\n```shell\n[root@ceph-1 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 1 osds: 1 up, 1 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   107MiB used, 2.00TiB / 2.00TiB avail\n    pgs:\n```\n\nosd已经有一个处于up跟in状态了。\n\n按照上面的步骤重复操作，添加剩下的osd。\n\n也可以执行如下脚本进行启动osd\n\n```shell\n[root@ceph-1 ceph]# vim start_osd.sh\n#执行脚本时需要输入三个参数,顺序依次为：osd.num, osd数据存储分区，osd journal存储分区\n#例如：sudo sh start_osd.sh 0 /dev/sdc2 /dev/sdc1\n\n#获取参数\nhost_name=`hostname`\nid=$1\ndata_disk=$2\njournal_disk=$3\n\n#创建osd data\nceph osd create $id\nsudo rm -rf /var/lib/ceph/osd/ceph-$id\nsudo mkdir /var/lib/ceph/osd/ceph-$id\n#sudo mkfs.xfs $data_disk -f\nsudo mount $data_disk /var/lib/ceph/osd/ceph-$id\nsudo ceph-osd -i $id --mkfs --mkkey\n#创建 journal\n#sudo mkfs.xfs $journal_disk -f\nuuid=`sudo blkid | grep $journal_disk | awk -F\\\" '{print $6}'`\nsudo rm -f /var/lib/ceph/osd/ceph-$id/journal \nsudo ln -s /dev/disk/by-partuuid/$uuid /var/lib/ceph/osd/ceph-$id/journal\nsudo chown ceph:ceph -R /var/lib/ceph/osd/ceph-$id\nsudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal\n#初始化新的journal\nsudo ceph-osd --mkjournal -i $id\nsudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal\n\n# 添加osd到crushmap\nsudo ceph auth add osd.$id osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-$id/keyring\nsudo ceph osd crush add-bucket $host_name host\nsudo ceph osd crush move $host_name root=default\nsudo ceph osd crush add osd.$id 1.7 root=default host=$host_name\n\n# 启动osd\nsudo cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@$id.service\nsudo systemctl start ceph-osd@$id\nsudo systemctl enable ceph-osd@$id\n```\n\n执行实例：\n\n```shell\n# 第一个参数：osd的id, 第二个参数： osd数据分区  第三个参数： osd的journal\n[root@ceph-1 ceph]# sh start_osd.sh 1 /dev/sdc /dev/sde2\n1\n2018-11-22 09:31:18.144721 7fc56f8b5d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-1/keyring: can't open /var/lib/ceph/osd/ceph-1/keyring: (2) No such file or directory\n2018-11-22 09:31:18.147361 7fc56f8b5d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-1/keyring\n2018-11-22 09:31:18.184083 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n2018-11-22 09:31:18.208952 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway\n2018-11-22 09:31:18.209302 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic\n2018-11-22 09:31:18.209321 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic\n2018-11-22 09:31:18.209700 7fc56f8b5d80 -1 read_settings error reading settings: (2) No such file or directory\n2018-11-22 09:31:18.246674 7fc56f8b5d80 -1 created object store /var/lib/ceph/osd/ceph-1 for osd.1 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93\n2018-11-22 09:31:18.480406 7fce4eeb4d80 -1 journal read_header error decoding journal header\nadded key for osd.1\nbucket 'ceph-1' already exists\nno need to move item id -2 name 'ceph-1' to location {root=default} in crush map\nadd item id 1 name 'osd.1' weight 2 at location {host=ceph-1,root=default} to crush map\nCreated symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@1.service to /usr/lib/systemd/system/ceph-osd@1.service.\n```\n\n按照上面的方法添加所有的osd之后，可以得到如下的集群：\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   858MiB used, 16.0TiB / 16.0TiB avail\n    pgs:\n\n```\n\n\n\n## 手动搭建MDS (仅cephfs使用)\n\n- 创建目录：\n\n```shell\n[root@ceph-1 ceph]# mkdir /var/lib/ceph/mds/ceph-`hostname`\n[root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/mds/ceph-`hostname`\n```\n\n- 在ceph.conf中添加如下信息：\n\n```shell\n[mds.ceph-1]\nhost = ceph-1\n[mds.ceph-2]\nhost = ceph-2\n[mds.ceph-3]\nhost = ceph-3\n```\n\n- 重启ceph-mon\n\n  ```shell\n  [root@ceph-1 ceph]# systemctl restart ceph-mon@`hostname`\n  ```\n\n- 启动mds\n\n```shell\n[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mds@.service /usr/lib/systemd/system/ceph-mds@`hostname`.service\n[root@ceph-1 ceph]# systemctl start ceph-mds@`hostname`\n[root@ceph-1 ceph]# systemctl enable ceph-mds@`hostname`\nCreated symlink from /etc/systemd/system/ceph-mds.target.wants/ceph-mds@ceph-1.service to /usr/lib/systemd/system/ceph-mds@ceph-1.service.\n```\n\n- 查看mds状态\n\n```shell\n[root@ceph-1 ceph]# ceph mds stat\n, 1 up:standby\n```\n\n在ceph-2,ceph-3上执行以上相同操作即可。\n\n最终mds的状态为：\n\n```shell\n[root@ceph-3 ceph]# ceph mds stat\n, 3 up:standby\n```\n\n# Ceph集群搭建完成\n\n最终的ceph集群状态如下：\n\n```shell\n[root@ceph-3 ceph]# ceph -s\n  cluster:\n    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93\n    health: HEALTH_OK\n\n  services:\n    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3\n    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3\n    osd: 9 osds: 9 up, 9 in\n\n  data:\n    pools:   0 pools, 0 pgs\n    objects: 0 objects, 0B\n    usage:   965MiB used, 18.0TiB / 18.0TiB avail\n    pgs:\n\n```\n\n至此ceph集群搭建完成。\n\n","slug":"manual-deploy-ceph","published":1,"updated":"2018-11-22T15:38:43.000Z","layout":"post","photos":[],"link":"","_id":"cjotqsawq003lgvyg9wbwqw7p","content":"<p>上篇介绍了部署Ceph的环境准备工作，本篇主要内容是介绍手动部署Ceph的全过程。</p>\n<h1><span id=\"环境\">环境</span></h1>\n<h2><span id=\"集群环境\">集群环境</span></h2>\n<p><a href=\"https://www.zuoyangblog.com/post/ad293d8.html\">上一篇</a>，我们创建了3台虚拟机，虚拟机配置如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0    2T  0 disk</span><br><span class=\"line\">sdc               8:32   0    2T  0 disk</span><br><span class=\"line\">sdd               8:48   0    2T  0 disk</span><br><span class=\"line\">sde               8:64   0  600G  0 disk</span><br><span class=\"line\">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3块大小为2T的磁盘，sdb,sdc,sdd，用于启动osd进程</li>\n<li>一块大小为600G的磁盘，作为osd的journal分区</li>\n</ul>\n<p><strong>集群配置如下：</strong></p>\n<table>\n<thead>\n<tr>\n<th>主机</th>\n<th>IP</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ceph-1</td>\n<td>192.168.56.101</td>\n<td>mon1、osd0、osd1、osd2</td>\n</tr>\n<tr>\n<td>ceph-2</td>\n<td>192.168.56.102</td>\n<td>mon2、osd3、osd4、osd5</td>\n</tr>\n<tr>\n<td>ceph-3</td>\n<td>192.168.56.103</td>\n<td>mon3、osd6、osd7、osd8</td>\n</tr>\n</tbody>\n</table>\n<h2><span id=\"配置ntp服务\">配置NTP服务</span></h2>\n<p>将NTP server放在ceph-1节点上，ceph-2/3节点是NTP client，这样可以从根本上解决时间同步问题。</p>\n<h3><span id=\"修改配置文件\">修改配置文件</span></h3>\n<p>从本机登录到ceph-1：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br></pre></td></tr></table></figure>\n<p>在ceph-1节点上进行如下操作：</p>\n<p>修改<code>/etc/ntp.conf</code>,注释掉默认的四个server，添加三行配置如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim  /etc/ntp.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##comment following lines:</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 0.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 1.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 2.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 3.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##add following lines:</span></span></span><br><span class=\"line\">server 127.127.1.0 minpoll 4</span><br><span class=\"line\">fudge 127.127.1.0 stratum 0</span><br><span class=\"line\">restrict 192.168.56.0 mask 255.255.0.0 nomodify notrap</span><br></pre></td></tr></table></figure>\n<p>修改<code>/etc/ntp/step-tickers</code>文件如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> List of NTP servers used by the ntpdate service.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 0.centos.pool.ntp.org</span></span><br><span class=\"line\">127.127.1.0</span><br></pre></td></tr></table></figure>\n<p>在重启ntp服务之前需要将防火墙关闭，否则客户端不能访问ntp服务：</p>\n<h3><span id=\"关闭防火墙\">关闭防火墙</span></h3>\n<p>关闭<code>selinux</code>&amp;<code>firewalld</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">systemctl stop firewalld </span><br><span class=\"line\">systemctl disable firewalld</span><br></pre></td></tr></table></figure>\n<h3><span id=\"启动ntp服务\">启动ntp服务</span></h3>\n<p>重启ntp服务，并查看server端是否运行正常，正常的标准就是<code>ntpq -p</code>指令的最下面一行是<code>*</code>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# systemctl enable ntpd</span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.</span><br><span class=\"line\">[root@ceph-1 ~]# systemctl restart ntpd </span><br><span class=\"line\">[root@ceph-1 ~]# ntpq -p</span><br><span class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class=\"line\">==============================================================================</span><br><span class=\"line\">*LOCAL(0)        .LOCL.           0 l   15   16    1    0.000    0.000   0.000</span><br></pre></td></tr></table></figure>\n<p>NTP server端已经配置完毕，下面开始配置client端。</p>\n<h3><span id=\"配置客户端ntp同步\">配置客户端ntp同步</span></h3>\n<p>同样的方式登录到<strong>ceph-2/ceph-3</strong>机器上：</p>\n<p>修改<code>/etc/ntp.conf</code>，注释掉四行server，添加一行server指向ceph-1:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ntp.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 0.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 1.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 2.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 3.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"></span><br><span class=\"line\">server 192.168.56.101</span><br></pre></td></tr></table></figure>\n<p>重启ntp服务并观察client是否正确连接到server端，同样正确连接的标准是<code>ntpq -p</code>的最下面一行以<code>*</code>号开头:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ~]# systemctl stop firewalld</span><br><span class=\"line\">[root@ceph-2 ~]# systemctl disable firewalld </span><br><span class=\"line\">[root@ceph-2 ~]# systemctl restart ntpd</span><br><span class=\"line\">[root@ceph-2 ~]# systemctl enable ntpd</span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.</span><br></pre></td></tr></table></figure>\n<p>开始的时候会显示INIT状态，然后等了几分钟之后就出现了<code>*</code>。</p>\n<p>异常状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ~]# ntpq -p</span><br><span class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class=\"line\">==============================================================================</span><br><span class=\"line\"> ceph-1          .INIT.          16 u    -   64    0    0.000    0.000   0.000</span><br></pre></td></tr></table></figure>\n<p>正常状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ~]# ntpq -p</span><br><span class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class=\"line\">==============================================================================</span><br><span class=\"line\">*ceph-1          LOCAL(0)         3 u   45   64   77    0.323    0.060   0.034</span><br></pre></td></tr></table></figure>\n<p><strong>在搭建ceph集群之前，一定要保证ntp服务能够正常运行。</strong></p>\n<h1><span id=\"手动搭建ceph集群\">手动搭建ceph集群</span></h1>\n<h2><span id=\"手动部署mon集群\">手动部署mon集群</span></h2>\n<h3><span id=\"主mon节点部署-19216856101ceph-1\">主mon节点部署 （192.168.56.101，ceph-1）</span></h3>\n<p>登录到ceph-1机器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>创建ceph用户与目录</strong></li>\n</ul>\n<p>新建一个脚本文件<code>prepare_env.sh</code>,然后写入以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# vim prepare_env.sh</span><br><span class=\"line\">/usr/sbin/groupadd ceph -g 167 -o -r</span><br><span class=\"line\">/usr/sbin/useradd ceph -u 167 -o -r -g ceph -s /sbin/nologin -c \"Ceph daemons\"</span><br><span class=\"line\">mkdir -p /etc/ceph/</span><br><span class=\"line\">chown -R ceph:ceph /etc/ceph/</span><br><span class=\"line\">mkdir -p /var/run/ceph</span><br><span class=\"line\">chown -R ceph:ceph /var/run/ceph</span><br><span class=\"line\">mkdir -p /var/log/ceph</span><br><span class=\"line\">chown -R ceph:ceph /var/log/ceph</span><br><span class=\"line\">mkdir -p /var/lib/ceph/mon</span><br><span class=\"line\">chown -R ceph:ceph /var/lib/ceph</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>创建ceph.conf文件</strong></li>\n</ul>\n<p>新建一个conf文件<code>ceph.conf</code>,然后写入以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# vim /etc/ceph/ceph.conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">fsid = c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">mon initial members = ceph-1</span><br><span class=\"line\">mon host = 192.168.56.101,192.168.56.102,192.168.56.103</span><br><span class=\"line\">rbd default features = 1</span><br><span class=\"line\">auth_cluster_required = none</span><br><span class=\"line\">auth_service_required = none</span><br><span class=\"line\">auth_client_required = none</span><br><span class=\"line\">public network = 192.168.56.0/24</span><br><span class=\"line\">cluster network = 192.168.56.0/24</span><br><span class=\"line\">osd journal size = 1024</span><br><span class=\"line\">osd pool default size = 3</span><br><span class=\"line\">osd pool default min size = 1</span><br><span class=\"line\">osd pool default pg num = 300</span><br><span class=\"line\">osd pool default pgp num = 300</span><br><span class=\"line\">osd crush chooseleaf type = 1</span><br><span class=\"line\"></span><br><span class=\"line\">[mon]</span><br><span class=\"line\">mon allow pool delete = true</span><br></pre></td></tr></table></figure>\n<p>这里不对各个参数的含义进行解释，对于初学者而言，先把集群搭建起来，后面再去花时间了解整个ceph的原理及配置文件各个参数对集群的影响。</p>\n<p>其中 <code>fsid</code> 是为集群分配的一个 uuid, 可使用<code>uuidgen</code>命令生成。初始化 mon 节点其实只需要这一个配置就够了。<br>\n<code>mon host</code> 配置 ceph 命令行工具访问操作 ceph 集群时查找 mon 节点入口。<br>\nceph 集群可包含多个 mon 节点实现高可用容灾, 避免单点故障。<br>\n<code>rbd default features = 1</code> 配置 rbd 客户端创建磁盘时禁用一些需要高版本内核才能支持的特性。</p>\n<ul>\n<li><strong>拷贝这两个文件到ceph-2,ceph-3机器上</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp prepare_env.sh  192.168.56.102:/home</span><br><span class=\"line\">scp prepare_env.sh  192.168.56.103:/home</span><br><span class=\"line\">scp /etc/ceph/ceph.conf  192.168.56.102:/etc/ceph/</span><br><span class=\"line\">scp /etc/ceph/ceph.conf  192.168.56.103:/etc/ceph/</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>启动mon节点</strong></li>\n</ul>\n<p>首先执行脚本,创建ceph用户及相关目录。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh prepare_env.sh</span><br></pre></td></tr></table></figure>\n<p>1、为此集群创建密钥环、并生成Monitor密钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'</span><br><span class=\"line\">creating /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>2、生成管理员密钥环，生成 <code>client.admin</code> 用户并加入密钥环</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --set-uid=0 --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'</span><br><span class=\"line\">creating /etc/ceph/ceph.client.admin.keyring</span><br></pre></td></tr></table></figure>\n<p>3、把 <code>client.admin</code> 密钥加入 <code>ceph.mon.keyring</code>  (3台机器一样)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring</span><br><span class=\"line\">importing contents of /etc/ceph/ceph.client.admin.keyring into /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>4、用规划好的主机名、对应 IP 地址、和 FSID 生成一个Monitor Map，并保存为 <code>/tmp/monmap</code></p>\n<p>这里的<code>--fsid</code>需要跟ceph.conf里面的<code>fsid</code>保持一致</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# monmaptool --create --add `hostname` `hostname -i`  --fsid c165f9d0-88df-48a7-8cc5-11da82f99c93 /tmp/monmap --clobber</span><br><span class=\"line\">monmaptool: monmap file /tmp/monmap</span><br><span class=\"line\">monmaptool: set fsid to c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">monmaptool: writing epoch 0 to /tmp/monmap (1 monitors)</span><br></pre></td></tr></table></figure>\n<p>5、在Monitor主机上分别创建数据目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# rm -rf /var/lib/ceph/mon/ceph-`hostname`/</span><br><span class=\"line\">[root@ceph-1 ~]# mkdir /var/lib/ceph/mon/ceph-`hostname`/</span><br><span class=\"line\">[root@ceph-1 ~]# chown ceph:ceph -R /var/lib/ceph/mon/ceph-`hostname`/</span><br><span class=\"line\">[root@ceph-1 ~]# chown -R ceph:ceph /var/lib/ceph/</span><br><span class=\"line\">[root@ceph-1 ~]# chown  ceph:ceph /tmp/monmap</span><br><span class=\"line\">[root@ceph-1 ~]# chown  ceph:ceph /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>6、用Monitor Map和密钥环组装守护进程所需的初始数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# sudo -u ceph ceph-mon --mkfs -i `hostname` --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>7、建一个空文件 <code>done</code> ，表示监视器已创建、可以启动了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# touch /var/lib/ceph/mon/ceph-`hostname`/done</span><br></pre></td></tr></table></figure>\n<p>8、启动Monitor</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@`hostname`.service</span><br><span class=\"line\">[root@ceph-1 ~]# sudo systemctl start ceph-mon@`hostname`</span><br><span class=\"line\">[root@ceph-1 ~]# sudo systemctl enable ceph-mon@`hostname`</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-1.service to /usr/lib/systemd/system/ceph-mon@ceph-1.service.</span><br></pre></td></tr></table></figure>\n<p>9、确认下集群在运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\"> cluster:</span><br><span class=\"line\">   id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">   health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\"> services:</span><br><span class=\"line\">   mon: 1 daemons, quorum ceph-1</span><br><span class=\"line\">   mgr: no daemons active</span><br><span class=\"line\">   osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\"> data:</span><br><span class=\"line\">   pools:   0 pools, 0 pgs</span><br><span class=\"line\">   objects: 0 objects, 0B</span><br><span class=\"line\">   usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">   pgs:</span><br></pre></td></tr></table></figure>\n<h3><span id=\"从mon节点部署-19216856102-amp-19216856103\">从mon节点部署 (192.168.56.102 &amp; 192.168.56.103)</span></h3>\n<p>在另外两台机器ceph-2,ceph-3上，分别ssh登录上去。</p>\n<h4><span id=\"创建启动脚本\">创建启动脚本</span></h4>\n<p>新建启动脚本文件<code>start_repo_mon.sh</code></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vim</span> start_repo_mon.<span class=\"keyword\">sh</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">host_name=`hostname`</span><br><span class=\"line\">sudo ceph mon getmap -o /tmp/monmap</span><br><span class=\"line\">sudo rm -rf /var/lib/ceph/mon/ceph-$host_name</span><br><span class=\"line\">sudo ceph-mon -i $host_name --mkfs --monmap /tmp/monmap</span><br><span class=\"line\">sudo chown -R ceph:ceph /var/lib/ceph/mon/ceph-$host_name/</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">nohup ceph-mon -f --cluster ceph --id <span class=\"variable\">$host_name</span> --setuser ceph --setgroup ceph &amp;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ceph-mon -f --cluster ceph --id <span class=\"variable\">$host_name</span> &amp;</span></span><br><span class=\"line\">sudo cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@$host_name.service</span><br><span class=\"line\">sudo systemctl start ceph-mon@$host_name</span><br><span class=\"line\">sudo systemctl enable ceph-mon@$host_name</span><br></pre></td></tr></table></figure>\n<h4><span id=\"启动mon进程\">启动mon进程</span></h4>\n<ul>\n<li><strong>ceph-2机器192.168.56.102</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# sh prepare_env.sh</span><br><span class=\"line\">groupadd：“ceph”组已存在</span><br><span class=\"line\">useradd：用户“ceph”已存在</span><br><span class=\"line\">[root@ceph-2 ceph]# sh start_repo_mon.sh</span><br><span class=\"line\">got monmap epoch 1</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-2.service to /usr/lib/systemd/system/ceph-mon@ceph-2.service.</span><br><span class=\"line\">[root@ceph-2 ceph]# ps -ef | grep ceph</span><br><span class=\"line\">ceph       11852       1  0 20:47 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root       11908   11645  0 20:47 pts/0    00:00:00 grep --color=auto ceph</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# ceph -s</span><br><span class=\"line\">  id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 2 daemons, quorum ceph-1,ceph-2</span><br><span class=\"line\">    mgr: no daemons active</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>ceph-3机器192.168.56.103</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# sh prepare_env.sh</span><br><span class=\"line\">groupadd：“ceph”组已存在</span><br><span class=\"line\">useradd：用户“ceph”已存在</span><br><span class=\"line\">[root@ceph-3 ceph]# sh start_repo_mon.sh</span><br><span class=\"line\">got monmap epoch 2</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-3.service to /usr/lib/systemd/system/ceph-mon@ceph-3.service.</span><br><span class=\"line\">[root@ceph-3 ceph]# ps -ef | grep ceph</span><br><span class=\"line\">ceph       11818       1  1 20:51 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-3 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root       11874   11081  0 20:51 pts/0    00:00:00 grep --color=auto ceph</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: no daemons active</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>至此可以看到ceph mon集群搭建完毕。</p>\n<h2><span id=\"手动搭建ceph-mgr\">手动搭建ceph-mgr</span></h2>\n<p>首先在ceph-1机器上创建并启动ceph-mgr进程。</p>\n<h3><span id=\"创建-mgr-监控用户\">创建 MGR 监控用户</span></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph auth get-or-create mgr.`hostname` mon 'allow *' osd 'allow *' mds 'allow *'</span><br><span class=\"line\">[mgr.ceph-1]</span><br><span class=\"line\">\tkey = AQCvovZbpUHTDBAA+/RoCVv+GTBc7lb96rOXRg==</span><br></pre></td></tr></table></figure>\n<p>需要将之前创建的用户密码存放至对应位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mkdir /var/lib/ceph/mgr/ceph-`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph auth get mgr.`hostname` -o  /var/lib/ceph/mgr/ceph-`hostname`/keyring</span><br><span class=\"line\">exported keyring for mgr.ceph-1</span><br></pre></td></tr></table></figure>\n<h3><span id=\"启动mgr\">启动mgr</span></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@`hostname`.service</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl start ceph-mgr@`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl enable ceph-mgr@`hostname`</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-1.service to /usr/lib/systemd/system/ceph-mgr@ceph-1.service.</span><br></pre></td></tr></table></figure>\n<h3><span id=\"验证是否成功\">验证是否成功</span></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# systemctl status ceph-mgr@`hostname`</span><br><span class=\"line\">● ceph-mgr@ceph-1.service - Ceph cluster manager daemon</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-1.service; enabled; vendor preset: disabled)</span><br><span class=\"line\">   Active: active (running) since 四 2018-11-22 07:38:49 EST; 14s ago</span><br><span class=\"line\"> Main PID: 2050 (ceph-mgr)</span><br><span class=\"line\">   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-1.service</span><br><span class=\"line\">           └─2050 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph</span><br><span class=\"line\"></span><br><span class=\"line\">11月 22 07:38:49 ceph-1 systemd[1]: Started Ceph cluster manager daemon.</span><br><span class=\"line\">11月 22 07:38:49 ceph-1 systemd[1]: Starting Ceph cluster manager daemon...</span><br></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ps -ef | grep ceph-mgr</span><br><span class=\"line\">ceph        2050       1  1 07:38 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root        2102    1249  0 07:39 pts/0    00:00:00 grep --color=auto ceph-mgr</span><br></pre></td></tr></table></figure>\n<p>说明mgr进程正常启动。</p>\n<p>监控状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>当 mgr 服务被激活之后, service 中 mgr 会显示 mgr-$name(active)<br>\ndata 部分信息将变得可用</p>\n<h3><span id=\"脚本操作\">脚本操作</span></h3>\n<p>在ceph-2,ceph-3机器上，创建脚本<code>start_mgr.sh</code>，写入以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# vim start_mgr.sh</span><br><span class=\"line\">host_name=`hostname`</span><br><span class=\"line\">sudo ceph auth get-or-create mgr.$host_name mon 'allow *' osd 'allow *' mds 'allow *'</span><br><span class=\"line\">sudo rm -rf /var/lib/ceph/mgr/ceph-$host_name</span><br><span class=\"line\">sudo mkdir /var/lib/ceph/mgr/ceph-$host_name</span><br><span class=\"line\">sudo ceph auth get mgr.$host_name -o  /var/lib/ceph/mgr/ceph-$host_name/keyring</span><br><span class=\"line\">sudo cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@$host_name.service</span><br><span class=\"line\">sudo systemctl start ceph-mgr@$host_name</span><br><span class=\"line\">sudo systemctl enable ceph-mgr@$host_name</span><br></pre></td></tr></table></figure>\n<p>执行脚本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# sh start_mgr.sh</span><br><span class=\"line\">[mgr.ceph-2]</span><br><span class=\"line\">\tkey = AQCTpfZbNLmpFxAACe1gMNUM4vqKMfNdUGbY/A==</span><br><span class=\"line\">exported keyring for mgr.ceph-2</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-2.service to /usr/lib/systemd/system/ceph-mgr@ceph-2.service.</span><br></pre></td></tr></table></figure>\n<p>查看进程状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# ps -ef | grep ceph-mgr</span><br><span class=\"line\">ceph       12101       1  0 07:48 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root       12173   11645  0 07:50 pts/0    00:00:00 grep --color=auto ceph-mgr</span><br><span class=\"line\">[root@ceph-2 ceph]# systemctl status ceph-mgr*</span><br><span class=\"line\">● ceph-mgr@ceph-2.service - Ceph cluster manager daemon</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-2.service; enabled; vendor preset: disabled)</span><br><span class=\"line\">   Active: active (running) since 四 2018-11-22 07:48:19 EST; 2min 33s ago</span><br><span class=\"line\"> Main PID: 12101 (ceph-mgr)</span><br><span class=\"line\">   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-2.service</span><br><span class=\"line\">           └─12101 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph</span><br><span class=\"line\"></span><br><span class=\"line\">11月 22 07:48:19 ceph-2 systemd[1]: Started Ceph cluster manager daemon.</span><br><span class=\"line\">11月 22 07:48:19 ceph-2 systemd[1]: Starting Ceph cluster manager daemon...</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>可以看到在ceph-2机器上，ceph-mgr进程正常启动。</p>\n<p>最后再ceph-3上进行同样的操作。</p>\n<p>所有mgr进程创建完成之后，集群的状态如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<ul>\n<li>health是处于OK状态</li>\n<li>3个mon daemons</li>\n<li>mgr进程：ceph-1是active状态，剩下的ceph-2,ceph-3处于standby</li>\n</ul>\n<h2><span id=\"手动搭建osd集群\">手动搭建osd集群</span></h2>\n<h3><span id=\"磁盘分区\">磁盘分区</span></h3>\n<p>每个osd对应一块磁盘，是ceph集群存储数据的物理单位，在搭建osd集群之前，先要对三台机器的磁盘进行处理，这里每台机器都是相同的操作，这里只演示ceph-1上的操作：</p>\n<ul>\n<li>查看磁盘分布情况</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0    2T  0 disk</span><br><span class=\"line\">sdc               8:32   0    2T  0 disk</span><br><span class=\"line\">sdd               8:48   0    2T  0 disk</span><br><span class=\"line\">sde               8:64   0  600G  0 disk</span><br><span class=\"line\">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>\n<p>这里我们可以看到有三块2T的磁盘:<code>sdb,sdc,sdd</code>,用来部署osd;一块600G的磁盘用作每个osd的journal分区。</p>\n<ul>\n<li>sde进行分区：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# fdisk /dev/sde</span><br><span class=\"line\">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class=\"line\"></span><br><span class=\"line\">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class=\"line\">使用写入命令前请三思。</span><br><span class=\"line\"></span><br><span class=\"line\">Device does not contain a recognized partition table</span><br><span class=\"line\">使用磁盘标识符 0x986f9840 创建新的 DOS 磁盘标签。</span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：g</span><br><span class=\"line\">Building a new GPT disklabel (GUID: E7350C3E-586A-424E-ABAB-73860654C2C8)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">分区号 (1-128，默认 1)：</span><br><span class=\"line\">第一个扇区 (2048-1258279965，默认 2048)：</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-1258279965，默认 1258279965)：+200G</span><br><span class=\"line\">已创建分区 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">分区号 (2-128，默认 2)：</span><br><span class=\"line\">第一个扇区 (419432448-1258279965，默认 419432448)：</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (419432448-1258279965，默认 1258279965)：+200G</span><br><span class=\"line\">已创建分区 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">分区号 (3-128，默认 3)：</span><br><span class=\"line\">第一个扇区 (838862848-1258279965，默认 838862848)：</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (838862848-1258279965，默认 1258279965)：</span><br><span class=\"line\">已创建分区 3</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：w</span><br><span class=\"line\">The partition table has been altered!</span><br><span class=\"line\"></span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">正在同步磁盘。</span><br></pre></td></tr></table></figure>\n<p>sde磁盘分区好之后，如下图所示：</p>\n<img src=\"/post/28a4bfb3/disk_part.jpg\">\n<ul>\n<li>创建xfs文件系统</li>\n</ul>\n<p>分别对磁盘<code>sdb,sdc,sdd,sde1,sde2,sde3</code>进行如下操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mkfs.xfs /dev/sdb # 之后将sdb替换为sdc,sdd,sde1,sde2,sde3</span><br><span class=\"line\">meta-data=/dev/sdb               isize=512    agcount=4, agsize=134211328 blks</span><br><span class=\"line\">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class=\"line\">         =                       crc=1        finobt=0, sparse=0</span><br><span class=\"line\">data     =                       bsize=4096   blocks=536845310, imaxpct=5</span><br><span class=\"line\">         =                       sunit=0      swidth=0 blks</span><br><span class=\"line\">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class=\"line\">log      =internal log           bsize=4096   blocks=262131, version=2</span><br><span class=\"line\">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class=\"line\">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure>\n<p>对这几个磁盘操作完之后，查看每个磁盘的uuid</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# blkid</span><br><span class=\"line\">/dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"</span><br><span class=\"line\">/dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"</span><br><span class=\"line\">/dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"</span><br><span class=\"line\">/dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"</span><br><span class=\"line\">/dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"</span><br><span class=\"line\">/dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"</span><br></pre></td></tr></table></figure>\n<p>可以看到这些磁盘都有独立的UUID，且TYPE都为“xfs”。说明创建成功。</p>\n<h3><span id=\"启动osd进程\">启动osd进程</span></h3>\n<ol>\n<li>\n<p><strong>创建osd id</strong></p>\n<p>添加一个新osd，<code>id</code>可以省略，ceph会自动使用最小可用整数，第一个osd从0开始</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd create</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>初始化osd目录</strong></p>\n<p>创建osd.0目录，目录名格式<code>{cluster-name}-{id}</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">mkdir /var/lib/ceph/osd/&#123;cluster-name&#125;-&#123;id&#125;</span></span><br><span class=\"line\">[root@ceph-1 ceph]# mkdir /var/lib/ceph/osd/ceph-0</span><br></pre></td></tr></table></figure>\n<p>挂载osd.0的数据盘/dev/sdb</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mount /dev/sdb /var/lib/ceph/osd/ceph-0</span><br></pre></td></tr></table></figure>\n<p>查看挂载结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0    2T  0 disk /var/lib/ceph/osd/ceph-0</span><br><span class=\"line\">sdc               8:32   0    2T  0 disk</span><br><span class=\"line\">sdd               8:48   0    2T  0 disk</span><br><span class=\"line\">sde               8:64   0  600G  0 disk</span><br><span class=\"line\">├─sde1            8:65   0  200G  0 part</span><br><span class=\"line\">├─sde2            8:66   0  200G  0 part</span><br><span class=\"line\">└─sde3            8:67   0  200G  0 part</span><br><span class=\"line\">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>\n<p>初始化osd数据目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo ceph-osd -i &#123;id&#125; --mkfs --mkkey</span></span><br><span class=\"line\">[root@ceph-1 ceph]# ceph-osd -i 0 --mkfs --mkkey</span><br><span class=\"line\">2018-11-22 08:26:54.255294 7fb2734e6d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-0/keyring: can't open /var/lib/ceph/osd/ceph-0/keyring: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 08:26:54.257686 7fb2734e6d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-0/keyring</span><br><span class=\"line\">2018-11-22 08:26:54.306488 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 08:26:54.341905 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 08:26:54.342312 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 08:26:54.342327 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 08:26:54.342704 7fb2734e6d80 -1 read_settings error reading settings: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 08:26:54.395459 7fb2734e6d80 -1 created object store /var/lib/ceph/osd/ceph-0 for osd.0 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>创建journal</strong></p>\n<p>生成journal分区，一般选ssd盘作为journal分区，这里使用/dev/sde1分区作为osd.0的journal。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看分区对应的partuuid， 找出/dev/sde1对应的partuuid</span></span><br><span class=\"line\">[root@ceph-1 ceph]# rm -f /var/lib/ceph/osd/ceph-0/journal</span><br><span class=\"line\">[root@ceph-1 ceph]# blkid</span><br><span class=\"line\">/dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"</span><br><span class=\"line\">/dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"</span><br><span class=\"line\">/dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"</span><br><span class=\"line\">/dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"</span><br><span class=\"line\">/dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"</span><br><span class=\"line\">/dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"</span><br><span class=\"line\">[root@ceph-1 ceph]# ln -s /dev/disk/by-partuuid/ca1a9c40-e020-4bf8-a17b-5716b3e1d453  /var/lib/ceph/osd/ceph-0/journal</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/osd/ceph-0</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph-osd --mkjournal -i 0</span><br><span class=\"line\">2018-11-22 08:31:06.832760 7f97505afd80 -1 journal read_header error decoding journal header</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph-osd --mkjournal -i 0</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>注册osd.{id}，id为osd编号，默认从0开始</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo ceph auth add osd.&#123;id&#125; osd <span class=\"string\">'allow *'</span> mon <span class=\"string\">'allow profile osd'</span> -i /var/lib/ceph/osd/ceph-&#123;id&#125;/keyring</span></span><br><span class=\"line\">[root@ceph-1 ceph]# ceph auth add osd.0 osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-0/keyring</span><br><span class=\"line\">added key for osd.0</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>加入crush map</strong></p>\n<p>这是ceph-1上新创建的第一个osd，CRUSH map中还没有ceph-1节点，因此首先要把ceph-1节点加入CRUSH map，同理，ceph-2/ceph-3节点也需要加入CRUSH map</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd crush add-bucket `hostname` host</span><br><span class=\"line\">added bucket ceph-1 type host to crush map</span><br></pre></td></tr></table></figure>\n<p>然后把三个节点移动到默认的root <code>default</code>下面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd crush move `hostname` root=default</span><br><span class=\"line\">moved item id -2 name 'ceph-1' to location &#123;root=default&#125; in crush map</span><br></pre></td></tr></table></figure>\n<p>添加osd.0到CRUSH map中的ceph-1节点下面，加入后，osd.0就能够接收数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ceph osd crush add osd.&#123;id&#125; 0.4 root=sata rack=sata-rack01 host=sata-node5</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">0.4为此osd在CRUSH map中的权重值，它表示数据落在此osd上的比重，是一个相对值，一般按照1T磁盘比重值为1来计算，这里的osd数据盘1.7，所以值为1.7  </span></span><br><span class=\"line\">[root@ceph-1 ceph]# ceph osd crush add osd.0 2.0 root=default host=`hostname`</span><br><span class=\"line\">add item id 0 name 'osd.0' weight 2 at location &#123;host=ceph-1,root=default&#125; to crush map</span><br></pre></td></tr></table></figure>\n<p>此时osd.0状态是<code>down</code>且<code>in</code>，<code>in</code>表示此osd位于CRUSH map，已经准备好接受数据，<code>down</code>表示osd进程运行异常，因为我们还没有启动osd.0进程</p>\n</li>\n<li>\n<p><strong>启动ceph-osd进程</strong></p>\n<p>需要向systemctl传递osd的<code>id</code>以启动指定的osd进程，如下，我们准备启动osd.0进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@0.service</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl start ceph-osd@0</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl enable ceph-osd@0</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@0.service to /usr/lib/systemd/system/ceph-osd@0.service.</span><br></pre></td></tr></table></figure>\n<p>上面就是添加osd.0的步骤，然后可以接着在其他<code>hostname</code>节点上添加osd.{1,2}，添加了这3个osd后，可以查看集群状态 ceph -s。</p>\n</li>\n<li>\n<p><strong>验证osd进程是否成功启动</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ps -ef | grep ceph-osd</span><br><span class=\"line\">ceph        2593       1  0 08:55 ?        00:00:00 /usr/bin/ceph-osd -f --cluster ceph --id 0 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root        2697    1249  0 08:55 pts/0    00:00:00 grep --color=auto ceph-osd</span><br></pre></td></tr></table></figure>\n<p>说明osd.0已经启动成功</p>\n</li>\n</ol>\n<p>查看集群状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 1 osds: 1 up, 1 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   107MiB used, 2.00TiB / 2.00TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>osd已经有一个处于up跟in状态了。</p>\n<p>按照上面的步骤重复操作，添加剩下的osd。</p>\n<p>也可以执行如下脚本进行启动osd</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# vim start_osd.sh</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">执行脚本时需要输入三个参数,顺序依次为：osd.num, osd数据存储分区，osd journal存储分区</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">例如：sudo sh start_osd.sh 0 /dev/sdc2 /dev/sdc1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">获取参数</span></span><br><span class=\"line\">host_name=`hostname`</span><br><span class=\"line\">id=$1</span><br><span class=\"line\">data_disk=$2</span><br><span class=\"line\">journal_disk=$3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建osd data</span></span><br><span class=\"line\">ceph osd create $id</span><br><span class=\"line\">sudo rm -rf /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\">sudo mkdir /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">sudo mkfs.xfs <span class=\"variable\">$data_disk</span> -f</span></span><br><span class=\"line\">sudo mount $data_disk /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\">sudo ceph-osd -i $id --mkfs --mkkey</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建 journal</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">sudo mkfs.xfs <span class=\"variable\">$journal_disk</span> -f</span></span><br><span class=\"line\">uuid=`sudo blkid | grep $journal_disk | awk -F\\\" '&#123;print $6&#125;'`</span><br><span class=\"line\">sudo rm -f /var/lib/ceph/osd/ceph-$id/journal </span><br><span class=\"line\">sudo ln -s /dev/disk/by-partuuid/$uuid /var/lib/ceph/osd/ceph-$id/journal</span><br><span class=\"line\">sudo chown ceph:ceph -R /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\">sudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">初始化新的journal</span></span><br><span class=\"line\">sudo ceph-osd --mkjournal -i $id</span><br><span class=\"line\">sudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加osd到crushmap</span></span><br><span class=\"line\">sudo ceph auth add osd.$id osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-$id/keyring</span><br><span class=\"line\">sudo ceph osd crush add-bucket $host_name host</span><br><span class=\"line\">sudo ceph osd crush move $host_name root=default</span><br><span class=\"line\">sudo ceph osd crush add osd.$id 1.7 root=default host=$host_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动osd</span></span><br><span class=\"line\">sudo cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@$id.service</span><br><span class=\"line\">sudo systemctl start ceph-osd@$id</span><br><span class=\"line\">sudo systemctl enable ceph-osd@$id</span><br></pre></td></tr></table></figure>\n<p>执行实例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 第一个参数：osd的id, 第二个参数： osd数据分区  第三个参数： osd的journal</span></span><br><span class=\"line\">[root@ceph-1 ceph]# sh start_osd.sh 1 /dev/sdc /dev/sde2</span><br><span class=\"line\">1</span><br><span class=\"line\">2018-11-22 09:31:18.144721 7fc56f8b5d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-1/keyring: can't open /var/lib/ceph/osd/ceph-1/keyring: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 09:31:18.147361 7fc56f8b5d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-1/keyring</span><br><span class=\"line\">2018-11-22 09:31:18.184083 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 09:31:18.208952 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 09:31:18.209302 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 09:31:18.209321 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 09:31:18.209700 7fc56f8b5d80 -1 read_settings error reading settings: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 09:31:18.246674 7fc56f8b5d80 -1 created object store /var/lib/ceph/osd/ceph-1 for osd.1 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">2018-11-22 09:31:18.480406 7fce4eeb4d80 -1 journal read_header error decoding journal header</span><br><span class=\"line\">added key for osd.1</span><br><span class=\"line\">bucket 'ceph-1' already exists</span><br><span class=\"line\">no need to move item id -2 name 'ceph-1' to location &#123;root=default&#125; in crush map</span><br><span class=\"line\">add item id 1 name 'osd.1' weight 2 at location &#123;host=ceph-1,root=default&#125; to crush map</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@1.service to /usr/lib/systemd/system/ceph-osd@1.service.</span><br></pre></td></tr></table></figure>\n<p>按照上面的方法添加所有的osd之后，可以得到如下的集群：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   858MiB used, 16.0TiB / 16.0TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<h2><span id=\"手动搭建mds-仅cephfs使用\">手动搭建MDS (仅cephfs使用)</span></h2>\n<ul>\n<li>创建目录：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mkdir /var/lib/ceph/mds/ceph-`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/mds/ceph-`hostname`</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在ceph.conf中添加如下信息：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mds.ceph-1]</span><br><span class=\"line\">host = ceph-1</span><br><span class=\"line\">[mds.ceph-2]</span><br><span class=\"line\">host = ceph-2</span><br><span class=\"line\">[mds.ceph-3]</span><br><span class=\"line\">host = ceph-3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>重启ceph-mon</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# systemctl restart ceph-mon@`hostname`</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>启动mds</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mds@.service /usr/lib/systemd/system/ceph-mds@`hostname`.service</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl start ceph-mds@`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl enable ceph-mds@`hostname`</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mds.target.wants/ceph-mds@ceph-1.service to /usr/lib/systemd/system/ceph-mds@ceph-1.service.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看mds状态</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph mds stat</span><br><span class=\"line\">, 1 up:standby</span><br></pre></td></tr></table></figure>\n<p>在ceph-2,ceph-3上执行以上相同操作即可。</p>\n<p>最终mds的状态为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph mds stat</span><br><span class=\"line\">, 3 up:standby</span><br></pre></td></tr></table></figure>\n<h1><span id=\"ceph集群搭建完成\">Ceph集群搭建完成</span></h1>\n<p>最终的ceph集群状态如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   965MiB used, 18.0TiB / 18.0TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>至此ceph集群搭建完成。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>上篇介绍了部署Ceph的环境准备工作，本篇主要内容是介绍手动部署Ceph的全过程。</p>\n<h1>环境</h1>\n<h2 id=\"集群环境\"><a class=\"headerlink\" href=\"#集群环境\"></a>集群环境</h2>\n<p><a href=\"https://www.zuoyangblog.com/post/ad293d8.html\">上一篇</a>，我们创建了3台虚拟机，虚拟机配置如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0    2T  0 disk</span><br><span class=\"line\">sdc               8:32   0    2T  0 disk</span><br><span class=\"line\">sdd               8:48   0    2T  0 disk</span><br><span class=\"line\">sde               8:64   0  600G  0 disk</span><br><span class=\"line\">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3块大小为2T的磁盘，sdb,sdc,sdd，用于启动osd进程</li>\n<li>一块大小为600G的磁盘，作为osd的journal分区</li>\n</ul>\n<p><strong>集群配置如下：</strong></p>\n<table>\n<thead>\n<tr>\n<th>主机</th>\n<th>IP</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ceph-1</td>\n<td>192.168.56.101</td>\n<td>mon1、osd0、osd1、osd2</td>\n</tr>\n<tr>\n<td>ceph-2</td>\n<td>192.168.56.102</td>\n<td>mon2、osd3、osd4、osd5</td>\n</tr>\n<tr>\n<td>ceph-3</td>\n<td>192.168.56.103</td>\n<td>mon3、osd6、osd7、osd8</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置ntp服务\"><a class=\"headerlink\" href=\"#配置ntp服务\"></a>配置NTP服务</h2>\n<p>将NTP server放在ceph-1节点上，ceph-2/3节点是NTP client，这样可以从根本上解决时间同步问题。</p>\n<h3 id=\"修改配置文件\"><a class=\"headerlink\" href=\"#修改配置文件\"></a>修改配置文件</h3>\n<p>从本机登录到ceph-1：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br></pre></td></tr></table></figure>\n<p>在ceph-1节点上进行如下操作：</p>\n<p>修改<code>/etc/ntp.conf</code>,注释掉默认的四个server，添加三行配置如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim  /etc/ntp.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##comment following lines:</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 0.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 1.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 2.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 3.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##add following lines:</span></span></span><br><span class=\"line\">server 127.127.1.0 minpoll 4</span><br><span class=\"line\">fudge 127.127.1.0 stratum 0</span><br><span class=\"line\">restrict 192.168.56.0 mask 255.255.0.0 nomodify notrap</span><br></pre></td></tr></table></figure>\n<p>修改<code>/etc/ntp/step-tickers</code>文件如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> List of NTP servers used by the ntpdate service.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 0.centos.pool.ntp.org</span></span><br><span class=\"line\">127.127.1.0</span><br></pre></td></tr></table></figure>\n<p>在重启ntp服务之前需要将防火墙关闭，否则客户端不能访问ntp服务：</p>\n<h3 id=\"关闭防火墙\"><a class=\"headerlink\" href=\"#关闭防火墙\"></a>关闭防火墙</h3>\n<p>关闭<code>selinux</code>&amp;<code>firewalld</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">systemctl stop firewalld </span><br><span class=\"line\">systemctl disable firewalld</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动ntp服务\"><a class=\"headerlink\" href=\"#启动ntp服务\"></a>启动ntp服务</h3>\n<p>重启ntp服务，并查看server端是否运行正常，正常的标准就是<code>ntpq -p</code>指令的最下面一行是<code>*</code>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# systemctl enable ntpd</span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.</span><br><span class=\"line\">[root@ceph-1 ~]# systemctl restart ntpd </span><br><span class=\"line\">[root@ceph-1 ~]# ntpq -p</span><br><span class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class=\"line\">==============================================================================</span><br><span class=\"line\">*LOCAL(0)        .LOCL.           0 l   15   16    1    0.000    0.000   0.000</span><br></pre></td></tr></table></figure>\n<p>NTP server端已经配置完毕，下面开始配置client端。</p>\n<h3 id=\"配置客户端ntp同步\"><a class=\"headerlink\" href=\"#配置客户端ntp同步\"></a>配置客户端ntp同步</h3>\n<p>同样的方式登录到<strong>ceph-2/ceph-3</strong>机器上：</p>\n<p>修改<code>/etc/ntp.conf</code>，注释掉四行server，添加一行server指向ceph-1:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ntp.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 0.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 1.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 2.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">server 3.centos.pool.ntp.org iburst</span></span><br><span class=\"line\"></span><br><span class=\"line\">server 192.168.56.101</span><br></pre></td></tr></table></figure>\n<p>重启ntp服务并观察client是否正确连接到server端，同样正确连接的标准是<code>ntpq -p</code>的最下面一行以<code>*</code>号开头:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ~]# systemctl stop firewalld</span><br><span class=\"line\">[root@ceph-2 ~]# systemctl disable firewalld </span><br><span class=\"line\">[root@ceph-2 ~]# systemctl restart ntpd</span><br><span class=\"line\">[root@ceph-2 ~]# systemctl enable ntpd</span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.</span><br></pre></td></tr></table></figure>\n<p>开始的时候会显示INIT状态，然后等了几分钟之后就出现了<code>*</code>。</p>\n<p>异常状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ~]# ntpq -p</span><br><span class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class=\"line\">==============================================================================</span><br><span class=\"line\"> ceph-1          .INIT.          16 u    -   64    0    0.000    0.000   0.000</span><br></pre></td></tr></table></figure>\n<p>正常状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ~]# ntpq -p</span><br><span class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class=\"line\">==============================================================================</span><br><span class=\"line\">*ceph-1          LOCAL(0)         3 u   45   64   77    0.323    0.060   0.034</span><br></pre></td></tr></table></figure>\n<p><strong>在搭建ceph集群之前，一定要保证ntp服务能够正常运行。</strong></p>\n<h1>手动搭建ceph集群</h1>\n<h2 id=\"手动部署mon集群\"><a class=\"headerlink\" href=\"#手动部署mon集群\"></a>手动部署mon集群</h2>\n<h3 id=\"主mon节点部署-192-168-56-101-ceph-1\"><a class=\"headerlink\" href=\"#主mon节点部署-192-168-56-101-ceph-1\"></a>主mon节点部署 （192.168.56.101，ceph-1）</h3>\n<p>登录到ceph-1机器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.56.101</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>创建ceph用户与目录</strong></li>\n</ul>\n<p>新建一个脚本文件<code>prepare_env.sh</code>,然后写入以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# vim prepare_env.sh</span><br><span class=\"line\">/usr/sbin/groupadd ceph -g 167 -o -r</span><br><span class=\"line\">/usr/sbin/useradd ceph -u 167 -o -r -g ceph -s /sbin/nologin -c \"Ceph daemons\"</span><br><span class=\"line\">mkdir -p /etc/ceph/</span><br><span class=\"line\">chown -R ceph:ceph /etc/ceph/</span><br><span class=\"line\">mkdir -p /var/run/ceph</span><br><span class=\"line\">chown -R ceph:ceph /var/run/ceph</span><br><span class=\"line\">mkdir -p /var/log/ceph</span><br><span class=\"line\">chown -R ceph:ceph /var/log/ceph</span><br><span class=\"line\">mkdir -p /var/lib/ceph/mon</span><br><span class=\"line\">chown -R ceph:ceph /var/lib/ceph</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>创建ceph.conf文件</strong></li>\n</ul>\n<p>新建一个conf文件<code>ceph.conf</code>,然后写入以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# vim /etc/ceph/ceph.conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">fsid = c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">mon initial members = ceph-1</span><br><span class=\"line\">mon host = 192.168.56.101,192.168.56.102,192.168.56.103</span><br><span class=\"line\">rbd default features = 1</span><br><span class=\"line\">auth_cluster_required = none</span><br><span class=\"line\">auth_service_required = none</span><br><span class=\"line\">auth_client_required = none</span><br><span class=\"line\">public network = 192.168.56.0/24</span><br><span class=\"line\">cluster network = 192.168.56.0/24</span><br><span class=\"line\">osd journal size = 1024</span><br><span class=\"line\">osd pool default size = 3</span><br><span class=\"line\">osd pool default min size = 1</span><br><span class=\"line\">osd pool default pg num = 300</span><br><span class=\"line\">osd pool default pgp num = 300</span><br><span class=\"line\">osd crush chooseleaf type = 1</span><br><span class=\"line\"></span><br><span class=\"line\">[mon]</span><br><span class=\"line\">mon allow pool delete = true</span><br></pre></td></tr></table></figure>\n<p>这里不对各个参数的含义进行解释，对于初学者而言，先把集群搭建起来，后面再去花时间了解整个ceph的原理及配置文件各个参数对集群的影响。</p>\n<p>其中 <code>fsid</code> 是为集群分配的一个 uuid, 可使用<code>uuidgen</code>命令生成。初始化 mon 节点其实只需要这一个配置就够了。<br>\n<code>mon host</code> 配置 ceph 命令行工具访问操作 ceph 集群时查找 mon 节点入口。<br>\nceph 集群可包含多个 mon 节点实现高可用容灾, 避免单点故障。<br>\n<code>rbd default features = 1</code> 配置 rbd 客户端创建磁盘时禁用一些需要高版本内核才能支持的特性。</p>\n<ul>\n<li><strong>拷贝这两个文件到ceph-2,ceph-3机器上</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp prepare_env.sh  192.168.56.102:/home</span><br><span class=\"line\">scp prepare_env.sh  192.168.56.103:/home</span><br><span class=\"line\">scp /etc/ceph/ceph.conf  192.168.56.102:/etc/ceph/</span><br><span class=\"line\">scp /etc/ceph/ceph.conf  192.168.56.103:/etc/ceph/</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>启动mon节点</strong></li>\n</ul>\n<p>首先执行脚本,创建ceph用户及相关目录。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh prepare_env.sh</span><br></pre></td></tr></table></figure>\n<p>1、为此集群创建密钥环、并生成Monitor密钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'</span><br><span class=\"line\">creating /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>2、生成管理员密钥环，生成 <code>client.admin</code> 用户并加入密钥环</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --set-uid=0 --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'</span><br><span class=\"line\">creating /etc/ceph/ceph.client.admin.keyring</span><br></pre></td></tr></table></figure>\n<p>3、把 <code>client.admin</code> 密钥加入 <code>ceph.mon.keyring</code>  (3台机器一样)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring</span><br><span class=\"line\">importing contents of /etc/ceph/ceph.client.admin.keyring into /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>4、用规划好的主机名、对应 IP 地址、和 FSID 生成一个Monitor Map，并保存为 <code>/tmp/monmap</code></p>\n<p>这里的<code>--fsid</code>需要跟ceph.conf里面的<code>fsid</code>保持一致</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# monmaptool --create --add `hostname` `hostname -i`  --fsid c165f9d0-88df-48a7-8cc5-11da82f99c93 /tmp/monmap --clobber</span><br><span class=\"line\">monmaptool: monmap file /tmp/monmap</span><br><span class=\"line\">monmaptool: set fsid to c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">monmaptool: writing epoch 0 to /tmp/monmap (1 monitors)</span><br></pre></td></tr></table></figure>\n<p>5、在Monitor主机上分别创建数据目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# rm -rf /var/lib/ceph/mon/ceph-`hostname`/</span><br><span class=\"line\">[root@ceph-1 ~]# mkdir /var/lib/ceph/mon/ceph-`hostname`/</span><br><span class=\"line\">[root@ceph-1 ~]# chown ceph:ceph -R /var/lib/ceph/mon/ceph-`hostname`/</span><br><span class=\"line\">[root@ceph-1 ~]# chown -R ceph:ceph /var/lib/ceph/</span><br><span class=\"line\">[root@ceph-1 ~]# chown  ceph:ceph /tmp/monmap</span><br><span class=\"line\">[root@ceph-1 ~]# chown  ceph:ceph /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>6、用Monitor Map和密钥环组装守护进程所需的初始数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# sudo -u ceph ceph-mon --mkfs -i `hostname` --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring</span><br></pre></td></tr></table></figure>\n<p>7、建一个空文件 <code>done</code> ，表示监视器已创建、可以启动了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# touch /var/lib/ceph/mon/ceph-`hostname`/done</span><br></pre></td></tr></table></figure>\n<p>8、启动Monitor</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ~]# cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@`hostname`.service</span><br><span class=\"line\">[root@ceph-1 ~]# sudo systemctl start ceph-mon@`hostname`</span><br><span class=\"line\">[root@ceph-1 ~]# sudo systemctl enable ceph-mon@`hostname`</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-1.service to /usr/lib/systemd/system/ceph-mon@ceph-1.service.</span><br></pre></td></tr></table></figure>\n<p>9、确认下集群在运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\"> cluster:</span><br><span class=\"line\">   id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">   health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\"> services:</span><br><span class=\"line\">   mon: 1 daemons, quorum ceph-1</span><br><span class=\"line\">   mgr: no daemons active</span><br><span class=\"line\">   osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\"> data:</span><br><span class=\"line\">   pools:   0 pools, 0 pgs</span><br><span class=\"line\">   objects: 0 objects, 0B</span><br><span class=\"line\">   usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">   pgs:</span><br></pre></td></tr></table></figure>\n<h3 id=\"从mon节点部署-192-168-56-102-192-168-56-103\"><a class=\"headerlink\" href=\"#从mon节点部署-192-168-56-102-192-168-56-103\"></a>从mon节点部署 (192.168.56.102 &amp; 192.168.56.103)</h3>\n<p>在另外两台机器ceph-2,ceph-3上，分别ssh登录上去。</p>\n<h4 id=\"创建启动脚本\"><a class=\"headerlink\" href=\"#创建启动脚本\"></a>创建启动脚本</h4>\n<p>新建启动脚本文件<code>start_repo_mon.sh</code></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vim</span> start_repo_mon.<span class=\"keyword\">sh</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">host_name=`hostname`</span><br><span class=\"line\">sudo ceph mon getmap -o /tmp/monmap</span><br><span class=\"line\">sudo rm -rf /var/lib/ceph/mon/ceph-$host_name</span><br><span class=\"line\">sudo ceph-mon -i $host_name --mkfs --monmap /tmp/monmap</span><br><span class=\"line\">sudo chown -R ceph:ceph /var/lib/ceph/mon/ceph-$host_name/</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">nohup ceph-mon -f --cluster ceph --id <span class=\"variable\">$host_name</span> --setuser ceph --setgroup ceph &amp;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ceph-mon -f --cluster ceph --id <span class=\"variable\">$host_name</span> &amp;</span></span><br><span class=\"line\">sudo cp /usr/lib/systemd/system/ceph-mon@.service /usr/lib/systemd/system/ceph-mon@$host_name.service</span><br><span class=\"line\">sudo systemctl start ceph-mon@$host_name</span><br><span class=\"line\">sudo systemctl enable ceph-mon@$host_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动mon进程\"><a class=\"headerlink\" href=\"#启动mon进程\"></a>启动mon进程</h4>\n<ul>\n<li><strong>ceph-2机器192.168.56.102</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# sh prepare_env.sh</span><br><span class=\"line\">groupadd：“ceph”组已存在</span><br><span class=\"line\">useradd：用户“ceph”已存在</span><br><span class=\"line\">[root@ceph-2 ceph]# sh start_repo_mon.sh</span><br><span class=\"line\">got monmap epoch 1</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-2.service to /usr/lib/systemd/system/ceph-mon@ceph-2.service.</span><br><span class=\"line\">[root@ceph-2 ceph]# ps -ef | grep ceph</span><br><span class=\"line\">ceph       11852       1  0 20:47 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root       11908   11645  0 20:47 pts/0    00:00:00 grep --color=auto ceph</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# ceph -s</span><br><span class=\"line\">  id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 2 daemons, quorum ceph-1,ceph-2</span><br><span class=\"line\">    mgr: no daemons active</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>ceph-3机器192.168.56.103</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# sh prepare_env.sh</span><br><span class=\"line\">groupadd：“ceph”组已存在</span><br><span class=\"line\">useradd：用户“ceph”已存在</span><br><span class=\"line\">[root@ceph-3 ceph]# sh start_repo_mon.sh</span><br><span class=\"line\">got monmap epoch 2</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-3.service to /usr/lib/systemd/system/ceph-mon@ceph-3.service.</span><br><span class=\"line\">[root@ceph-3 ceph]# ps -ef | grep ceph</span><br><span class=\"line\">ceph       11818       1  1 20:51 ?        00:00:00 /usr/bin/ceph-mon -f --cluster ceph --id ceph-3 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root       11874   11081  0 20:51 pts/0    00:00:00 grep --color=auto ceph</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: no daemons active</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>至此可以看到ceph mon集群搭建完毕。</p>\n<h2 id=\"手动搭建ceph-mgr\"><a class=\"headerlink\" href=\"#手动搭建ceph-mgr\"></a>手动搭建ceph-mgr</h2>\n<p>首先在ceph-1机器上创建并启动ceph-mgr进程。</p>\n<h3 id=\"创建-mgr-监控用户\"><a class=\"headerlink\" href=\"#创建-mgr-监控用户\"></a>创建 MGR 监控用户</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph auth get-or-create mgr.`hostname` mon 'allow *' osd 'allow *' mds 'allow *'</span><br><span class=\"line\">[mgr.ceph-1]</span><br><span class=\"line\">\tkey = AQCvovZbpUHTDBAA+/RoCVv+GTBc7lb96rOXRg==</span><br></pre></td></tr></table></figure>\n<p>需要将之前创建的用户密码存放至对应位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mkdir /var/lib/ceph/mgr/ceph-`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph auth get mgr.`hostname` -o  /var/lib/ceph/mgr/ceph-`hostname`/keyring</span><br><span class=\"line\">exported keyring for mgr.ceph-1</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动mgr\"><a class=\"headerlink\" href=\"#启动mgr\"></a>启动mgr</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@`hostname`.service</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl start ceph-mgr@`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl enable ceph-mgr@`hostname`</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-1.service to /usr/lib/systemd/system/ceph-mgr@ceph-1.service.</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证是否成功\"><a class=\"headerlink\" href=\"#验证是否成功\"></a>验证是否成功</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# systemctl status ceph-mgr@`hostname`</span><br><span class=\"line\">● ceph-mgr@ceph-1.service - Ceph cluster manager daemon</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-1.service; enabled; vendor preset: disabled)</span><br><span class=\"line\">   Active: active (running) since 四 2018-11-22 07:38:49 EST; 14s ago</span><br><span class=\"line\"> Main PID: 2050 (ceph-mgr)</span><br><span class=\"line\">   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-1.service</span><br><span class=\"line\">           └─2050 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph</span><br><span class=\"line\"></span><br><span class=\"line\">11月 22 07:38:49 ceph-1 systemd[1]: Started Ceph cluster manager daemon.</span><br><span class=\"line\">11月 22 07:38:49 ceph-1 systemd[1]: Starting Ceph cluster manager daemon...</span><br></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ps -ef | grep ceph-mgr</span><br><span class=\"line\">ceph        2050       1  1 07:38 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-1 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root        2102    1249  0 07:39 pts/0    00:00:00 grep --color=auto ceph-mgr</span><br></pre></td></tr></table></figure>\n<p>说明mgr进程正常启动。</p>\n<p>监控状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>当 mgr 服务被激活之后, service 中 mgr 会显示 mgr-$name(active)<br>\ndata 部分信息将变得可用</p>\n<h3 id=\"脚本操作\"><a class=\"headerlink\" href=\"#脚本操作\"></a>脚本操作</h3>\n<p>在ceph-2,ceph-3机器上，创建脚本<code>start_mgr.sh</code>，写入以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# vim start_mgr.sh</span><br><span class=\"line\">host_name=`hostname`</span><br><span class=\"line\">sudo ceph auth get-or-create mgr.$host_name mon 'allow *' osd 'allow *' mds 'allow *'</span><br><span class=\"line\">sudo rm -rf /var/lib/ceph/mgr/ceph-$host_name</span><br><span class=\"line\">sudo mkdir /var/lib/ceph/mgr/ceph-$host_name</span><br><span class=\"line\">sudo ceph auth get mgr.$host_name -o  /var/lib/ceph/mgr/ceph-$host_name/keyring</span><br><span class=\"line\">sudo cp /usr/lib/systemd/system/ceph-mgr@.service /usr/lib/systemd/system/ceph-mgr@$host_name.service</span><br><span class=\"line\">sudo systemctl start ceph-mgr@$host_name</span><br><span class=\"line\">sudo systemctl enable ceph-mgr@$host_name</span><br></pre></td></tr></table></figure>\n<p>执行脚本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# sh start_mgr.sh</span><br><span class=\"line\">[mgr.ceph-2]</span><br><span class=\"line\">\tkey = AQCTpfZbNLmpFxAACe1gMNUM4vqKMfNdUGbY/A==</span><br><span class=\"line\">exported keyring for mgr.ceph-2</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mgr.target.wants/ceph-mgr@ceph-2.service to /usr/lib/systemd/system/ceph-mgr@ceph-2.service.</span><br></pre></td></tr></table></figure>\n<p>查看进程状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# ps -ef | grep ceph-mgr</span><br><span class=\"line\">ceph       12101       1  0 07:48 ?        00:00:00 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root       12173   11645  0 07:50 pts/0    00:00:00 grep --color=auto ceph-mgr</span><br><span class=\"line\">[root@ceph-2 ceph]# systemctl status ceph-mgr*</span><br><span class=\"line\">● ceph-mgr@ceph-2.service - Ceph cluster manager daemon</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/ceph-mgr@ceph-2.service; enabled; vendor preset: disabled)</span><br><span class=\"line\">   Active: active (running) since 四 2018-11-22 07:48:19 EST; 2min 33s ago</span><br><span class=\"line\"> Main PID: 12101 (ceph-mgr)</span><br><span class=\"line\">   CGroup: /system.slice/system-ceph\\x2dmgr.slice/ceph-mgr@ceph-2.service</span><br><span class=\"line\">           └─12101 /usr/bin/ceph-mgr -f --cluster ceph --id ceph-2 --setuser ceph --setgroup ceph</span><br><span class=\"line\"></span><br><span class=\"line\">11月 22 07:48:19 ceph-2 systemd[1]: Started Ceph cluster manager daemon.</span><br><span class=\"line\">11月 22 07:48:19 ceph-2 systemd[1]: Starting Ceph cluster manager daemon...</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-2 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>可以看到在ceph-2机器上，ceph-mgr进程正常启动。</p>\n<p>最后再ceph-3上进行同样的操作。</p>\n<p>所有mgr进程创建完成之后，集群的状态如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 0 osds: 0 up, 0 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   0B used, 0B / 0B avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<ul>\n<li>health是处于OK状态</li>\n<li>3个mon daemons</li>\n<li>mgr进程：ceph-1是active状态，剩下的ceph-2,ceph-3处于standby</li>\n</ul>\n<h2 id=\"手动搭建osd集群\"><a class=\"headerlink\" href=\"#手动搭建osd集群\"></a>手动搭建osd集群</h2>\n<h3 id=\"磁盘分区\"><a class=\"headerlink\" href=\"#磁盘分区\"></a>磁盘分区</h3>\n<p>每个osd对应一块磁盘，是ceph集群存储数据的物理单位，在搭建osd集群之前，先要对三台机器的磁盘进行处理，这里每台机器都是相同的操作，这里只演示ceph-1上的操作：</p>\n<ul>\n<li>查看磁盘分布情况</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0    2T  0 disk</span><br><span class=\"line\">sdc               8:32   0    2T  0 disk</span><br><span class=\"line\">sdd               8:48   0    2T  0 disk</span><br><span class=\"line\">sde               8:64   0  600G  0 disk</span><br><span class=\"line\">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>\n<p>这里我们可以看到有三块2T的磁盘:<code>sdb,sdc,sdd</code>,用来部署osd;一块600G的磁盘用作每个osd的journal分区。</p>\n<ul>\n<li>sde进行分区：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# fdisk /dev/sde</span><br><span class=\"line\">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class=\"line\"></span><br><span class=\"line\">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class=\"line\">使用写入命令前请三思。</span><br><span class=\"line\"></span><br><span class=\"line\">Device does not contain a recognized partition table</span><br><span class=\"line\">使用磁盘标识符 0x986f9840 创建新的 DOS 磁盘标签。</span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：g</span><br><span class=\"line\">Building a new GPT disklabel (GUID: E7350C3E-586A-424E-ABAB-73860654C2C8)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">分区号 (1-128，默认 1)：</span><br><span class=\"line\">第一个扇区 (2048-1258279965，默认 2048)：</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-1258279965，默认 1258279965)：+200G</span><br><span class=\"line\">已创建分区 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">分区号 (2-128，默认 2)：</span><br><span class=\"line\">第一个扇区 (419432448-1258279965，默认 419432448)：</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (419432448-1258279965，默认 1258279965)：+200G</span><br><span class=\"line\">已创建分区 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">分区号 (3-128，默认 3)：</span><br><span class=\"line\">第一个扇区 (838862848-1258279965，默认 838862848)：</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (838862848-1258279965，默认 1258279965)：</span><br><span class=\"line\">已创建分区 3</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：w</span><br><span class=\"line\">The partition table has been altered!</span><br><span class=\"line\"></span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">正在同步磁盘。</span><br></pre></td></tr></table></figure>\n<p>sde磁盘分区好之后，如下图所示：</p>\n<img src=\"/post/28a4bfb3/disk_part.jpg\">\n<ul>\n<li>创建xfs文件系统</li>\n</ul>\n<p>分别对磁盘<code>sdb,sdc,sdd,sde1,sde2,sde3</code>进行如下操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mkfs.xfs /dev/sdb # 之后将sdb替换为sdc,sdd,sde1,sde2,sde3</span><br><span class=\"line\">meta-data=/dev/sdb               isize=512    agcount=4, agsize=134211328 blks</span><br><span class=\"line\">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class=\"line\">         =                       crc=1        finobt=0, sparse=0</span><br><span class=\"line\">data     =                       bsize=4096   blocks=536845310, imaxpct=5</span><br><span class=\"line\">         =                       sunit=0      swidth=0 blks</span><br><span class=\"line\">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class=\"line\">log      =internal log           bsize=4096   blocks=262131, version=2</span><br><span class=\"line\">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class=\"line\">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure>\n<p>对这几个磁盘操作完之后，查看每个磁盘的uuid</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# blkid</span><br><span class=\"line\">/dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"</span><br><span class=\"line\">/dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"</span><br><span class=\"line\">/dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"</span><br><span class=\"line\">/dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"</span><br><span class=\"line\">/dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"</span><br><span class=\"line\">/dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"</span><br></pre></td></tr></table></figure>\n<p>可以看到这些磁盘都有独立的UUID，且TYPE都为“xfs”。说明创建成功。</p>\n<h3 id=\"启动osd进程\"><a class=\"headerlink\" href=\"#启动osd进程\"></a>启动osd进程</h3>\n<ol>\n<li>\n<p><strong>创建osd id</strong></p>\n<p>添加一个新osd，<code>id</code>可以省略，ceph会自动使用最小可用整数，第一个osd从0开始</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd create</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>初始化osd目录</strong></p>\n<p>创建osd.0目录，目录名格式<code>{cluster-name}-{id}</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">mkdir /var/lib/ceph/osd/&#123;cluster-name&#125;-&#123;id&#125;</span></span><br><span class=\"line\">[root@ceph-1 ceph]# mkdir /var/lib/ceph/osd/ceph-0</span><br></pre></td></tr></table></figure>\n<p>挂载osd.0的数据盘/dev/sdb</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mount /dev/sdb /var/lib/ceph/osd/ceph-0</span><br></pre></td></tr></table></figure>\n<p>查看挂载结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0    2T  0 disk /var/lib/ceph/osd/ceph-0</span><br><span class=\"line\">sdc               8:32   0    2T  0 disk</span><br><span class=\"line\">sdd               8:48   0    2T  0 disk</span><br><span class=\"line\">sde               8:64   0  600G  0 disk</span><br><span class=\"line\">├─sde1            8:65   0  200G  0 part</span><br><span class=\"line\">├─sde2            8:66   0  200G  0 part</span><br><span class=\"line\">└─sde3            8:67   0  200G  0 part</span><br><span class=\"line\">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>\n<p>初始化osd数据目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo ceph-osd -i &#123;id&#125; --mkfs --mkkey</span></span><br><span class=\"line\">[root@ceph-1 ceph]# ceph-osd -i 0 --mkfs --mkkey</span><br><span class=\"line\">2018-11-22 08:26:54.255294 7fb2734e6d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-0/keyring: can't open /var/lib/ceph/osd/ceph-0/keyring: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 08:26:54.257686 7fb2734e6d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-0/keyring</span><br><span class=\"line\">2018-11-22 08:26:54.306488 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 08:26:54.341905 7fb2734e6d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 08:26:54.342312 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 08:26:54.342327 7fb2734e6d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 08:26:54.342704 7fb2734e6d80 -1 read_settings error reading settings: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 08:26:54.395459 7fb2734e6d80 -1 created object store /var/lib/ceph/osd/ceph-0 for osd.0 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>创建journal</strong></p>\n<p>生成journal分区，一般选ssd盘作为journal分区，这里使用/dev/sde1分区作为osd.0的journal。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看分区对应的partuuid， 找出/dev/sde1对应的partuuid</span></span><br><span class=\"line\">[root@ceph-1 ceph]# rm -f /var/lib/ceph/osd/ceph-0/journal</span><br><span class=\"line\">[root@ceph-1 ceph]# blkid</span><br><span class=\"line\">/dev/sda1: UUID=\"b66ddda6-8a4c-48d8-bb8a-9a3183094c5d\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sda2: UUID=\"Iylyc4-LvIV-TnAg-FZK6-xz2D-3gaY-hx17eb\" TYPE=\"LVM2_member\"</span><br><span class=\"line\">/dev/sdb: UUID=\"104c6fd4-58e7-468f-a003-266d9a7fb9ba\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdc: UUID=\"1a06d53d-0f76-4931-9add-fe3494510edc\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sdd: UUID=\"30a5527d-e7b6-4c13-b735-c9e086775d51\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/sde1: UUID=\"58793fce-298c-417c-85dc-b0d913f8cd63\" TYPE=\"xfs\" PARTUUID=\"ca1a9c40-e020-4bf8-a17b-5716b3e1d453\"</span><br><span class=\"line\">/dev/sde2: UUID=\"1c7ef6a8-58a6-47c0-9d2d-ff086a3d81f7\" TYPE=\"xfs\" PARTUUID=\"c458e242-716d-42f7-9a2e-5f21c291987a\"</span><br><span class=\"line\">/dev/sde3: UUID=\"0581b33a-321d-42af-9b5f-272a775fccc1\" TYPE=\"xfs\" PARTUUID=\"651f90d2-9697-4474-b3d8-a0e980b125a4\"</span><br><span class=\"line\">/dev/mapper/centos-root: UUID=\"0fc63cb7-c2e6-46e8-8db9-2c31fdd20310\" TYPE=\"xfs\"</span><br><span class=\"line\">/dev/mapper/centos-swap: UUID=\"a8605f7e-5049-4cd4-bd6d-805c98543f38\" TYPE=\"swap\"</span><br><span class=\"line\">/dev/mapper/centos-home: UUID=\"7fc267af-b141-4140-afb9-388453097422\" TYPE=\"xfs\"</span><br><span class=\"line\">[root@ceph-1 ceph]# ln -s /dev/disk/by-partuuid/ca1a9c40-e020-4bf8-a17b-5716b3e1d453  /var/lib/ceph/osd/ceph-0/journal</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/osd/ceph-0</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph-osd --mkjournal -i 0</span><br><span class=\"line\">2018-11-22 08:31:06.832760 7f97505afd80 -1 journal read_header error decoding journal header</span><br><span class=\"line\">[root@ceph-1 ceph]# ceph-osd --mkjournal -i 0</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph /var/lib/ceph/osd/ceph-0/journal</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>注册osd.{id}，id为osd编号，默认从0开始</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo ceph auth add osd.&#123;id&#125; osd <span class=\"string\">'allow *'</span> mon <span class=\"string\">'allow profile osd'</span> -i /var/lib/ceph/osd/ceph-&#123;id&#125;/keyring</span></span><br><span class=\"line\">[root@ceph-1 ceph]# ceph auth add osd.0 osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-0/keyring</span><br><span class=\"line\">added key for osd.0</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>加入crush map</strong></p>\n<p>这是ceph-1上新创建的第一个osd，CRUSH map中还没有ceph-1节点，因此首先要把ceph-1节点加入CRUSH map，同理，ceph-2/ceph-3节点也需要加入CRUSH map</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd crush add-bucket `hostname` host</span><br><span class=\"line\">added bucket ceph-1 type host to crush map</span><br></pre></td></tr></table></figure>\n<p>然后把三个节点移动到默认的root <code>default</code>下面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph osd crush move `hostname` root=default</span><br><span class=\"line\">moved item id -2 name 'ceph-1' to location &#123;root=default&#125; in crush map</span><br></pre></td></tr></table></figure>\n<p>添加osd.0到CRUSH map中的ceph-1节点下面，加入后，osd.0就能够接收数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ceph osd crush add osd.&#123;id&#125; 0.4 root=sata rack=sata-rack01 host=sata-node5</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">0.4为此osd在CRUSH map中的权重值，它表示数据落在此osd上的比重，是一个相对值，一般按照1T磁盘比重值为1来计算，这里的osd数据盘1.7，所以值为1.7  </span></span><br><span class=\"line\">[root@ceph-1 ceph]# ceph osd crush add osd.0 2.0 root=default host=`hostname`</span><br><span class=\"line\">add item id 0 name 'osd.0' weight 2 at location &#123;host=ceph-1,root=default&#125; to crush map</span><br></pre></td></tr></table></figure>\n<p>此时osd.0状态是<code>down</code>且<code>in</code>，<code>in</code>表示此osd位于CRUSH map，已经准备好接受数据，<code>down</code>表示osd进程运行异常，因为我们还没有启动osd.0进程</p>\n</li>\n<li>\n<p><strong>启动ceph-osd进程</strong></p>\n<p>需要向systemctl传递osd的<code>id</code>以启动指定的osd进程，如下，我们准备启动osd.0进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@0.service</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl start ceph-osd@0</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl enable ceph-osd@0</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@0.service to /usr/lib/systemd/system/ceph-osd@0.service.</span><br></pre></td></tr></table></figure>\n<p>上面就是添加osd.0的步骤，然后可以接着在其他<code>hostname</code>节点上添加osd.{1,2}，添加了这3个osd后，可以查看集群状态 ceph -s。</p>\n</li>\n<li>\n<p><strong>验证osd进程是否成功启动</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ps -ef | grep ceph-osd</span><br><span class=\"line\">ceph        2593       1  0 08:55 ?        00:00:00 /usr/bin/ceph-osd -f --cluster ceph --id 0 --setuser ceph --setgroup ceph</span><br><span class=\"line\">root        2697    1249  0 08:55 pts/0    00:00:00 grep --color=auto ceph-osd</span><br></pre></td></tr></table></figure>\n<p>说明osd.0已经启动成功</p>\n</li>\n</ol>\n<p>查看集群状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 1 osds: 1 up, 1 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   107MiB used, 2.00TiB / 2.00TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>osd已经有一个处于up跟in状态了。</p>\n<p>按照上面的步骤重复操作，添加剩下的osd。</p>\n<p>也可以执行如下脚本进行启动osd</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# vim start_osd.sh</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">执行脚本时需要输入三个参数,顺序依次为：osd.num, osd数据存储分区，osd journal存储分区</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">例如：sudo sh start_osd.sh 0 /dev/sdc2 /dev/sdc1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">获取参数</span></span><br><span class=\"line\">host_name=`hostname`</span><br><span class=\"line\">id=$1</span><br><span class=\"line\">data_disk=$2</span><br><span class=\"line\">journal_disk=$3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建osd data</span></span><br><span class=\"line\">ceph osd create $id</span><br><span class=\"line\">sudo rm -rf /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\">sudo mkdir /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">sudo mkfs.xfs <span class=\"variable\">$data_disk</span> -f</span></span><br><span class=\"line\">sudo mount $data_disk /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\">sudo ceph-osd -i $id --mkfs --mkkey</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建 journal</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">sudo mkfs.xfs <span class=\"variable\">$journal_disk</span> -f</span></span><br><span class=\"line\">uuid=`sudo blkid | grep $journal_disk | awk -F\\\" '&#123;print $6&#125;'`</span><br><span class=\"line\">sudo rm -f /var/lib/ceph/osd/ceph-$id/journal </span><br><span class=\"line\">sudo ln -s /dev/disk/by-partuuid/$uuid /var/lib/ceph/osd/ceph-$id/journal</span><br><span class=\"line\">sudo chown ceph:ceph -R /var/lib/ceph/osd/ceph-$id</span><br><span class=\"line\">sudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">初始化新的journal</span></span><br><span class=\"line\">sudo ceph-osd --mkjournal -i $id</span><br><span class=\"line\">sudo chown ceph:ceph /var/lib/ceph/osd/ceph-$id/journal</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加osd到crushmap</span></span><br><span class=\"line\">sudo ceph auth add osd.$id osd 'allow *' mon 'allow profile osd' -i /var/lib/ceph/osd/ceph-$id/keyring</span><br><span class=\"line\">sudo ceph osd crush add-bucket $host_name host</span><br><span class=\"line\">sudo ceph osd crush move $host_name root=default</span><br><span class=\"line\">sudo ceph osd crush add osd.$id 1.7 root=default host=$host_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动osd</span></span><br><span class=\"line\">sudo cp /usr/lib/systemd/system/ceph-osd@.service /usr/lib/systemd/system/ceph-osd@$id.service</span><br><span class=\"line\">sudo systemctl start ceph-osd@$id</span><br><span class=\"line\">sudo systemctl enable ceph-osd@$id</span><br></pre></td></tr></table></figure>\n<p>执行实例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 第一个参数：osd的id, 第二个参数： osd数据分区  第三个参数： osd的journal</span></span><br><span class=\"line\">[root@ceph-1 ceph]# sh start_osd.sh 1 /dev/sdc /dev/sde2</span><br><span class=\"line\">1</span><br><span class=\"line\">2018-11-22 09:31:18.144721 7fc56f8b5d80 -1 auth: error reading file: /var/lib/ceph/osd/ceph-1/keyring: can't open /var/lib/ceph/osd/ceph-1/keyring: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 09:31:18.147361 7fc56f8b5d80 -1 created new key in keyring /var/lib/ceph/osd/ceph-1/keyring</span><br><span class=\"line\">2018-11-22 09:31:18.184083 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 09:31:18.208952 7fc56f8b5d80 -1 journal FileJournal::_open: disabling aio for non-block journal.  Use journal_force_aio to force use of aio anyway</span><br><span class=\"line\">2018-11-22 09:31:18.209302 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 09:31:18.209321 7fc56f8b5d80 -1 journal do_read_entry(4096): bad header magic</span><br><span class=\"line\">2018-11-22 09:31:18.209700 7fc56f8b5d80 -1 read_settings error reading settings: (2) No such file or directory</span><br><span class=\"line\">2018-11-22 09:31:18.246674 7fc56f8b5d80 -1 created object store /var/lib/ceph/osd/ceph-1 for osd.1 fsid c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">2018-11-22 09:31:18.480406 7fce4eeb4d80 -1 journal read_header error decoding journal header</span><br><span class=\"line\">added key for osd.1</span><br><span class=\"line\">bucket 'ceph-1' already exists</span><br><span class=\"line\">no need to move item id -2 name 'ceph-1' to location &#123;root=default&#125; in crush map</span><br><span class=\"line\">add item id 1 name 'osd.1' weight 2 at location &#123;host=ceph-1,root=default&#125; to crush map</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-osd.target.wants/ceph-osd@1.service to /usr/lib/systemd/system/ceph-osd@1.service.</span><br></pre></td></tr></table></figure>\n<p>按照上面的方法添加所有的osd之后，可以得到如下的集群：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   858MiB used, 16.0TiB / 16.0TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<h2 id=\"手动搭建mds-仅cephfs使用\"><a class=\"headerlink\" href=\"#手动搭建mds-仅cephfs使用\"></a>手动搭建MDS (仅cephfs使用)</h2>\n<ul>\n<li>创建目录：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# mkdir /var/lib/ceph/mds/ceph-`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# chown ceph:ceph -R /var/lib/ceph/mds/ceph-`hostname`</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在ceph.conf中添加如下信息：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mds.ceph-1]</span><br><span class=\"line\">host = ceph-1</span><br><span class=\"line\">[mds.ceph-2]</span><br><span class=\"line\">host = ceph-2</span><br><span class=\"line\">[mds.ceph-3]</span><br><span class=\"line\">host = ceph-3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>重启ceph-mon</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# systemctl restart ceph-mon@`hostname`</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>启动mds</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# cp /usr/lib/systemd/system/ceph-mds@.service /usr/lib/systemd/system/ceph-mds@`hostname`.service</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl start ceph-mds@`hostname`</span><br><span class=\"line\">[root@ceph-1 ceph]# systemctl enable ceph-mds@`hostname`</span><br><span class=\"line\">Created symlink from /etc/systemd/system/ceph-mds.target.wants/ceph-mds@ceph-1.service to /usr/lib/systemd/system/ceph-mds@ceph-1.service.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看mds状态</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-1 ceph]# ceph mds stat</span><br><span class=\"line\">, 1 up:standby</span><br></pre></td></tr></table></figure>\n<p>在ceph-2,ceph-3上执行以上相同操作即可。</p>\n<p>最终mds的状态为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph mds stat</span><br><span class=\"line\">, 3 up:standby</span><br></pre></td></tr></table></figure>\n<h1>Ceph集群搭建完成</h1>\n<p>最终的ceph集群状态如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ceph-3 ceph]# ceph -s</span><br><span class=\"line\">  cluster:</span><br><span class=\"line\">    id:     c165f9d0-88df-48a7-8cc5-11da82f99c93</span><br><span class=\"line\">    health: HEALTH_OK</span><br><span class=\"line\"></span><br><span class=\"line\">  services:</span><br><span class=\"line\">    mon: 3 daemons, quorum ceph-1,ceph-2,ceph-3</span><br><span class=\"line\">    mgr: ceph-1(active), standbys: admin, ceph-2, ceph-3</span><br><span class=\"line\">    osd: 9 osds: 9 up, 9 in</span><br><span class=\"line\"></span><br><span class=\"line\">  data:</span><br><span class=\"line\">    pools:   0 pools, 0 pgs</span><br><span class=\"line\">    objects: 0 objects, 0B</span><br><span class=\"line\">    usage:   965MiB used, 18.0TiB / 18.0TiB avail</span><br><span class=\"line\">    pgs:</span><br></pre></td></tr></table></figure>\n<p>至此ceph集群搭建完成。</p>\n"}],"PostAsset":[{"_id":"source/_posts/Ceph_introduction/ceph_object.jpg","slug":"ceph_object.jpg","post":"cjotqsarl0031gvygq0ynwqa7","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/ping.jpg","slug":"ping.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/user.jpg","slug":"user.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/Ceph_introduction/ceph-architectural.png","slug":"ceph-architectural.png","post":"cjotqsarl0031gvygq0ynwqa7","modified":1,"renderable":0},{"_id":"source/_posts/Ceph_introduction/ceph_all_component.png","slug":"ceph_all_component.png","post":"cjotqsarl0031gvygq0ynwqa7","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/install_os2.jpg","slug":"install_os2.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/install_os3.jpg","slug":"install_os3.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/install_os1.jpg","slug":"install_os1.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/create-cephfs/ceph_archite.jpg","post":"cjotqsarp0036gvygd2p6yo3s","slug":"ceph_archite.jpg","modified":1,"renderable":1},{"_id":"source/_posts/create-cephfs/cephfs.jpg","post":"cjotqsarp0036gvygd2p6yo3s","slug":"cephfs.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Ceph_introduction/ceph_file.jpg","post":"cjotqsarl0031gvygq0ynwqa7","slug":"ceph_file.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Ceph_introduction/ceph_rbd2.png","post":"cjotqsarl0031gvygq0ynwqa7","slug":"ceph_rbd2.png","modified":1,"renderable":1},{"_id":"source/_posts/Ceph_introduction/disk.jpg","post":"cjotqsarl0031gvygq0ynwqa7","slug":"disk.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Ceph_introduction/rados.jpg","post":"cjotqsarl0031gvygq0ynwqa7","slug":"rados.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/adapter1.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"adapter1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/adapter2.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"adapter2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/addios.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"addios.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/clone2.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"clone2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/clone3.jpg","slug":"clone3.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/disk.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"disk.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/disk_size.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"disk_size.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/dynamic.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"dynamic.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/finish.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"finish.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/ip.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"ip.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/memory.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"memory.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/network.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"network.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/new.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"new.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/newvhd.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"newvhd.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/newvhd2.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"newvhd2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/user_set.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"user_set.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ceph-enviroment-set/virtualBox.jpg","slug":"virtualBox.jpg","post":"cjotqsarn0033gvyg1axkc6l1","modified":1,"renderable":0},{"_id":"source/_posts/ceph-enviroment-set/virtual_disk.jpg","post":"cjotqsarn0033gvyg1axkc6l1","slug":"virtual_disk.jpg","modified":1,"renderable":1},{"_id":"source/_posts/manual-deploy-ceph/disk_part.jpg","post":"cjotqsawq003lgvyg9wbwqw7p","slug":"disk_part.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjotqsaot0007gvyg1np8alm2","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsap3000fgvygpz13e4vz"},{"post_id":"cjotqsaoi0000gvygav1qn637","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsap6000kgvygcqxi6htv"},{"post_id":"cjotqsaou0008gvygdrs8cfmz","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapa000ngvyggg4oj3u1"},{"post_id":"cjotqsap0000cgvygeeidiolm","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapc000rgvygce668ex3"},{"post_id":"cjotqsaon0002gvygjb1uog1h","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapf000tgvyg7lb423pf"},{"post_id":"cjotqsap2000egvygitw58y5w","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapi000xgvyg1zmcwkql"},{"post_id":"cjotqsap6000jgvyg5hk0ipow","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapn0010gvygse59fqii"},{"post_id":"cjotqsaos0006gvyggayi6960","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaps0014gvygoc7x60ca"},{"post_id":"cjotqsap9000mgvygtwzuhin1","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapt0017gvygaof5q2pk"},{"post_id":"cjotqsapc000qgvygm236g2bm","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapv001bgvygr5siz204"},{"post_id":"cjotqsape000sgvyg8qvee00j","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapw001egvyg7gzzdnwl"},{"post_id":"cjotqsapi000wgvygwppz7fru","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsapy001igvygfothr1bf"},{"post_id":"cjotqsapm000zgvyglkkb2907","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq0001lgvygz2h7bv9e"},{"post_id":"cjotqsapr0013gvygna6wai4g","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq2001pgvyg0grdfg5o"},{"post_id":"cjotqsaps0016gvyg6a0j8y0a","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq3001sgvygono6t1yu"},{"post_id":"cjotqsapu001agvyg5g6tgtyv","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq5001wgvygtjbyafqg"},{"post_id":"cjotqsapv001dgvygqups8yvt","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq6001zgvygwcbzm4pj"},{"post_id":"cjotqsapx001hgvygvg6rbql8","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq70023gvygwzbm4yh3"},{"post_id":"cjotqsapy001kgvyg2saufptf","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq80025gvygiujd62wj"},{"post_id":"cjotqsaq1001ogvyg4oc5kc4m","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq90028gvygt1sdtiss"},{"post_id":"cjotqsaq2001rgvyg7pdy2p7l","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaq9002agvygmciyys61"},{"post_id":"cjotqsaq4001vgvygexhnhgjr","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaqa002dgvyggftk8hch"},{"post_id":"cjotqsaq5001ygvygtnxl0fed","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaqa002fgvyg6n5drcwx"},{"post_id":"cjotqsaq70022gvygbcmwciua","category_id":"cjotqsaoq0004gvygfps7n3lo","_id":"cjotqsaqa002hgvygb89udln5"},{"post_id":"cjotqsarl0031gvygq0ynwqa7","category_id":"cjotqsarp0034gvygibp2itwo","_id":"cjotqsars003bgvygpotybax8"},{"post_id":"cjotqsarn0033gvyg1axkc6l1","category_id":"cjotqsarp0034gvygibp2itwo","_id":"cjotqsars003dgvygslrxr9j4"},{"post_id":"cjotqsarp0036gvygd2p6yo3s","category_id":"cjotqsarp0034gvygibp2itwo","_id":"cjotqsart003ggvyg9evuomvy"},{"post_id":"cjotqsawq003lgvyg9wbwqw7p","category_id":"cjotqsarp0034gvygibp2itwo","_id":"cjotqsawt003ngvygohy5241u"}],"PostTag":[{"post_id":"cjotqsaot0007gvyg1np8alm2","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsap0000bgvygx2c3qk0u"},{"post_id":"cjotqsaoi0000gvygav1qn637","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsap2000dgvygi85yevg0"},{"post_id":"cjotqsap0000cgvygeeidiolm","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsap6000igvygqg8i61iz"},{"post_id":"cjotqsaon0002gvygjb1uog1h","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsap9000lgvygvy2a4g80"},{"post_id":"cjotqsaos0006gvyggayi6960","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsapc000pgvyg3v0ktw1f"},{"post_id":"cjotqsapc000qgvygm236g2bm","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsapi000vgvyguuh2th3b"},{"post_id":"cjotqsapc000qgvygm236g2bm","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsapl000ygvyg7djl2yvd"},{"post_id":"cjotqsaou0008gvygdrs8cfmz","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsapq0012gvygr6nvjty6"},{"post_id":"cjotqsaou0008gvygdrs8cfmz","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsaps0015gvygrge6jksw"},{"post_id":"cjotqsape000sgvyg8qvee00j","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsapu0019gvygy9l1rnm1"},{"post_id":"cjotqsap2000egvygitw58y5w","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsapv001cgvygfao09oqm"},{"post_id":"cjotqsap2000egvygitw58y5w","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsapw001ggvygltvd071p"},{"post_id":"cjotqsapr0013gvygna6wai4g","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsapy001jgvygbxwg5vjy"},{"post_id":"cjotqsap6000jgvyg5hk0ipow","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaq0001ngvygcg2sib3v"},{"post_id":"cjotqsap6000jgvyg5hk0ipow","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsaq2001qgvygao8ad33b"},{"post_id":"cjotqsapu001agvyg5g6tgtyv","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaq4001ugvyge2q0rp2u"},{"post_id":"cjotqsap9000mgvygtwzuhin1","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaq5001xgvygujgcn6h9"},{"post_id":"cjotqsap9000mgvygtwzuhin1","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsaq60020gvygpnbo1t2w"},{"post_id":"cjotqsapi000wgvygwppz7fru","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaq80024gvyg8todg27w"},{"post_id":"cjotqsapi000wgvygwppz7fru","tag_id":"cjotqsapw001fgvyg46mmri25","_id":"cjotqsaq80026gvygck0mir30"},{"post_id":"cjotqsapy001kgvyg2saufptf","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaq90029gvygx7qm1pfl"},{"post_id":"cjotqsapm000zgvyglkkb2907","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaq9002bgvygzuidgwnm"},{"post_id":"cjotqsapm000zgvyglkkb2907","tag_id":"cjotqsapw001fgvyg46mmri25","_id":"cjotqsaqa002egvygloff2rb5"},{"post_id":"cjotqsaq2001rgvyg7pdy2p7l","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqa002ggvygttn8341o"},{"post_id":"cjotqsaq4001vgvygexhnhgjr","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqb002jgvyged9y5pb4"},{"post_id":"cjotqsaq4001vgvygexhnhgjr","tag_id":"cjotqsaq3001tgvygza05w6el","_id":"cjotqsaqb002kgvygktpg372g"},{"post_id":"cjotqsaps0016gvyg6a0j8y0a","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqb002mgvygu391ywm0"},{"post_id":"cjotqsaps0016gvyg6a0j8y0a","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsaqb002ngvyg6m71kv63"},{"post_id":"cjotqsaps0016gvyg6a0j8y0a","tag_id":"cjotqsaq3001tgvygza05w6el","_id":"cjotqsaqb002ogvygte3w2mcf"},{"post_id":"cjotqsapv001dgvygqups8yvt","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqb002pgvyg8raz7oam"},{"post_id":"cjotqsapv001dgvygqups8yvt","tag_id":"cjotqsapw001fgvyg46mmri25","_id":"cjotqsaqb002qgvyghohb5gkp"},{"post_id":"cjotqsapx001hgvygvg6rbql8","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqb002rgvyg49abwgw6"},{"post_id":"cjotqsapx001hgvygvg6rbql8","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsaqb002sgvygaez7pdvh"},{"post_id":"cjotqsapx001hgvygvg6rbql8","tag_id":"cjotqsaq3001tgvygza05w6el","_id":"cjotqsaqb002tgvygpxzoxxlg"},{"post_id":"cjotqsaq1001ogvyg4oc5kc4m","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqb002ugvygw3frphg7"},{"post_id":"cjotqsaq1001ogvyg4oc5kc4m","tag_id":"cjotqsapa000ogvyg392t2gh4","_id":"cjotqsaqc002vgvyg3wtdfn0k"},{"post_id":"cjotqsaq1001ogvyg4oc5kc4m","tag_id":"cjotqsaqa002cgvygemgu5m2v","_id":"cjotqsaqc002wgvygcf2le3j8"},{"post_id":"cjotqsaq5001ygvygtnxl0fed","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqc002xgvyghedxr49z"},{"post_id":"cjotqsaq5001ygvygtnxl0fed","tag_id":"cjotqsaqa002igvygplqt8z6l","_id":"cjotqsaqc002ygvygdf6hwfzy"},{"post_id":"cjotqsaq70022gvygbcmwciua","tag_id":"cjotqsaor0005gvyghqmew31y","_id":"cjotqsaqc002zgvygy74vbp1d"},{"post_id":"cjotqsaq70022gvygbcmwciua","tag_id":"cjotqsaqb002lgvygi9q63ave","_id":"cjotqsaqc0030gvyg8m37mt93"},{"post_id":"cjotqsarl0031gvygq0ynwqa7","tag_id":"cjotqsarp0035gvygodg7x2e2","_id":"cjotqsarr0039gvygzfiw2o08"},{"post_id":"cjotqsarn0033gvyg1axkc6l1","tag_id":"cjotqsarp0035gvygodg7x2e2","_id":"cjotqsart003fgvygz7129g6q"},{"post_id":"cjotqsarn0033gvyg1axkc6l1","tag_id":"cjotqsars003cgvygjeal1job","_id":"cjotqsart003hgvygnzhr9uu6"},{"post_id":"cjotqsarp0036gvygd2p6yo3s","tag_id":"cjotqsarp0035gvygodg7x2e2","_id":"cjotqsaru003jgvyg8d0qb4q3"},{"post_id":"cjotqsarp0036gvygd2p6yo3s","tag_id":"cjotqsart003igvyg8ldekt2m","_id":"cjotqsaru003kgvygacq3eo7w"},{"post_id":"cjotqsawq003lgvyg9wbwqw7p","tag_id":"cjotqsarp0035gvygodg7x2e2","_id":"cjotqsax1003qgvygbq0kkxtw"},{"post_id":"cjotqsawq003lgvyg9wbwqw7p","tag_id":"cjotqsaws003mgvyg9i4v2eoa","_id":"cjotqsax6003rgvyguzgw2cx2"},{"post_id":"cjotqsawq003lgvyg9wbwqw7p","tag_id":"cjotqsawu003ogvygzpko7q4a","_id":"cjotqsax9003sgvygtygvlh38"},{"post_id":"cjotqsawq003lgvyg9wbwqw7p","tag_id":"cjotqsawz003pgvygj5btv2k1","_id":"cjotqsax9003tgvyguorzpjpx"}],"Tag":[{"name":"C++","_id":"cjotqsaor0005gvyghqmew31y"},{"name":"Binary Tree","_id":"cjotqsapa000ogvyg392t2gh4"},{"name":"List","_id":"cjotqsapw001fgvyg46mmri25"},{"name":"DFS","_id":"cjotqsaq3001tgvygza05w6el"},{"name":"BST","_id":"cjotqsaqa002cgvygemgu5m2v"},{"name":"String","_id":"cjotqsaqa002igvygplqt8z6l"},{"name":"Stack","_id":"cjotqsaqb002lgvygi9q63ave"},{"name":"ceph","_id":"cjotqsarp0035gvygodg7x2e2"},{"name":"virtualBox","_id":"cjotqsars003cgvygjeal1job"},{"name":"cephfs","_id":"cjotqsart003igvyg8ldekt2m"},{"name":"ceph-mon","_id":"cjotqsaws003mgvyg9i4v2eoa"},{"name":"ceph-osd","_id":"cjotqsawu003ogvygzpko7q4a"},{"name":"ceph-mgr","_id":"cjotqsawz003pgvygj5btv2k1"}]}}